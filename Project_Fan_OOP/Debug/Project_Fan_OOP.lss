
Project_Fan_OOP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000190  00800100  0000226c  00002300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000226c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000133  00800290  00800290  00002490  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002490  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000024ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000768  00000000  00000000  0000252c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005cf8  00000000  00000000  00002c94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002193  00000000  00000000  0000898c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000039c4  00000000  00000000  0000ab1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000e1c  00000000  00000000  0000e4e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000015bd  00000000  00000000  0000f300  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000016ce  00000000  00000000  000108bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000588  00000000  00000000  00011f8b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	62 c0       	rjmp	.+196    	; 0xca <__bad_interrupt>
       6:	00 00       	nop
       8:	60 c0       	rjmp	.+192    	; 0xca <__bad_interrupt>
       a:	00 00       	nop
       c:	b1 c0       	rjmp	.+354    	; 0x170 <__vector_3>
       e:	00 00       	nop
      10:	5c c0       	rjmp	.+184    	; 0xca <__bad_interrupt>
      12:	00 00       	nop
      14:	5a c0       	rjmp	.+180    	; 0xca <__bad_interrupt>
      16:	00 00       	nop
      18:	58 c0       	rjmp	.+176    	; 0xca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	56 c0       	rjmp	.+172    	; 0xca <__bad_interrupt>
      1e:	00 00       	nop
      20:	54 c0       	rjmp	.+168    	; 0xca <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__vector_9>
      26:	00 00       	nop
      28:	50 c0       	rjmp	.+160    	; 0xca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4e c0       	rjmp	.+156    	; 0xca <__bad_interrupt>
      2e:	00 00       	nop
      30:	4c c0       	rjmp	.+152    	; 0xca <__bad_interrupt>
      32:	00 00       	nop
      34:	4a c0       	rjmp	.+148    	; 0xca <__bad_interrupt>
      36:	00 00       	nop
      38:	48 c0       	rjmp	.+144    	; 0xca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	46 c0       	rjmp	.+140    	; 0xca <__bad_interrupt>
      3e:	00 00       	nop
      40:	45 c0       	rjmp	.+138    	; 0xcc <__vector_16>
      42:	00 00       	nop
      44:	42 c0       	rjmp	.+132    	; 0xca <__bad_interrupt>
      46:	00 00       	nop
      48:	bb c0       	rjmp	.+374    	; 0x1c0 <__vector_18>
      4a:	00 00       	nop
      4c:	3e c0       	rjmp	.+124    	; 0xca <__bad_interrupt>
      4e:	00 00       	nop
      50:	3c c0       	rjmp	.+120    	; 0xca <__bad_interrupt>
      52:	00 00       	nop
      54:	3a c0       	rjmp	.+116    	; 0xca <__bad_interrupt>
      56:	00 00       	nop
      58:	38 c0       	rjmp	.+112    	; 0xca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	36 c0       	rjmp	.+108    	; 0xca <__bad_interrupt>
      5e:	00 00       	nop
      60:	34 c0       	rjmp	.+104    	; 0xca <__bad_interrupt>
      62:	00 00       	nop
      64:	32 c0       	rjmp	.+100    	; 0xca <__bad_interrupt>
      66:	00 00       	nop
      68:	30 c0       	rjmp	.+96     	; 0xca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2e c0       	rjmp	.+92     	; 0xca <__bad_interrupt>
      6e:	00 00       	nop
      70:	2c c0       	rjmp	.+88     	; 0xca <__bad_interrupt>
      72:	00 00       	nop
      74:	2a c0       	rjmp	.+84     	; 0xca <__bad_interrupt>
      76:	00 00       	nop
      78:	28 c0       	rjmp	.+80     	; 0xca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	26 c0       	rjmp	.+76     	; 0xca <__bad_interrupt>
      7e:	00 00       	nop
      80:	24 c0       	rjmp	.+72     	; 0xca <__bad_interrupt>
      82:	00 00       	nop
      84:	22 c0       	rjmp	.+68     	; 0xca <__bad_interrupt>
      86:	00 00       	nop
      88:	20 c0       	rjmp	.+64     	; 0xca <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	12 e0       	ldi	r17, 0x02	; 2
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec e6       	ldi	r30, 0x6C	; 108
      a0:	f2 e2       	ldi	r31, 0x22	; 34
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a0 39       	cpi	r26, 0x90	; 144
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	23 e0       	ldi	r18, 0x03	; 3
      b4:	a0 e9       	ldi	r26, 0x90	; 144
      b6:	b2 e0       	ldi	r27, 0x02	; 2
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a3 3c       	cpi	r26, 0xC3	; 195
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 ba 0b 	call	0x1774	; 0x1774 <main>
      c6:	0c 94 34 11 	jmp	0x2268	; 0x2268 <_exit>

000000ca <__bad_interrupt>:
      ca:	9a cf       	rjmp	.-204    	; 0x0 <__vectors>

000000cc <__vector_16>:

//AVR은 printf를 UART0_Transmit 함수를 통해 사용
//사용자가 정의한 버퍼(buffer)를 stdio(standard input output) stream으로 바꿔주는 역할
FILE UART0_OUTPUT = FDEV_SETUP_STREAM(UART0_Transmit, NULL,_FDEV_SETUP_WRITE);

ISR(TIMER0_OVF_vect){
      cc:	1f 92       	push	r1
      ce:	0f 92       	push	r0
      d0:	0f b6       	in	r0, 0x3f	; 63
      d2:	0f 92       	push	r0
      d4:	11 24       	eor	r1, r1
      d6:	0b b6       	in	r0, 0x3b	; 59
      d8:	0f 92       	push	r0
      da:	2f 93       	push	r18
      dc:	3f 93       	push	r19
      de:	4f 93       	push	r20
      e0:	5f 93       	push	r21
      e2:	6f 93       	push	r22
      e4:	7f 93       	push	r23
      e6:	8f 93       	push	r24
      e8:	9f 93       	push	r25
      ea:	af 93       	push	r26
      ec:	bf 93       	push	r27
      ee:	ef 93       	push	r30
      f0:	ff 93       	push	r31
	FND_ISR_Process();
      f2:	0e 94 a6 09 	call	0x134c	; 0x134c <FND_ISR_Process>
	incTick();
      f6:	82 d7       	rcall	.+3844   	; 0xffc <incTick>
	TCNT0 =130;
      f8:	82 e8       	ldi	r24, 0x82	; 130
      fa:	82 bf       	out	0x32, r24	; 50
}
      fc:	ff 91       	pop	r31
      fe:	ef 91       	pop	r30
     100:	bf 91       	pop	r27
     102:	af 91       	pop	r26
     104:	9f 91       	pop	r25
     106:	8f 91       	pop	r24
     108:	7f 91       	pop	r23
     10a:	6f 91       	pop	r22
     10c:	5f 91       	pop	r21
     10e:	4f 91       	pop	r20
     110:	3f 91       	pop	r19
     112:	2f 91       	pop	r18
     114:	0f 90       	pop	r0
     116:	0b be       	out	0x3b, r0	; 59
     118:	0f 90       	pop	r0
     11a:	0f be       	out	0x3f, r0	; 63
     11c:	0f 90       	pop	r0
     11e:	1f 90       	pop	r1
     120:	18 95       	reti

00000122 <__vector_9>:

ISR(TIMER2_COMP_vect){
     122:	1f 92       	push	r1
     124:	0f 92       	push	r0
     126:	0f b6       	in	r0, 0x3f	; 63
     128:	0f 92       	push	r0
     12a:	11 24       	eor	r1, r1
     12c:	0b b6       	in	r0, 0x3b	; 59
     12e:	0f 92       	push	r0
     130:	2f 93       	push	r18
     132:	3f 93       	push	r19
     134:	4f 93       	push	r20
     136:	5f 93       	push	r21
     138:	6f 93       	push	r22
     13a:	7f 93       	push	r23
     13c:	8f 93       	push	r24
     13e:	9f 93       	push	r25
     140:	af 93       	push	r26
     142:	bf 93       	push	r27
     144:	ef 93       	push	r30
     146:	ff 93       	push	r31
	timer_incmilisec();
     148:	0e d7       	rcall	.+3612   	; 0xf66 <timer_incmilisec>
}
     14a:	ff 91       	pop	r31
     14c:	ef 91       	pop	r30
     14e:	bf 91       	pop	r27
     150:	af 91       	pop	r26
     152:	9f 91       	pop	r25
     154:	8f 91       	pop	r24
     156:	7f 91       	pop	r23
     158:	6f 91       	pop	r22
     15a:	5f 91       	pop	r21
     15c:	4f 91       	pop	r20
     15e:	3f 91       	pop	r19
     160:	2f 91       	pop	r18
     162:	0f 90       	pop	r0
     164:	0b be       	out	0x3b, r0	; 59
     166:	0f 90       	pop	r0
     168:	0f be       	out	0x3f, r0	; 63
     16a:	0f 90       	pop	r0
     16c:	1f 90       	pop	r1
     16e:	18 95       	reti

00000170 <__vector_3>:

ISR(INT2_vect){
     170:	1f 92       	push	r1
     172:	0f 92       	push	r0
     174:	0f b6       	in	r0, 0x3f	; 63
     176:	0f 92       	push	r0
     178:	11 24       	eor	r1, r1
     17a:	0b b6       	in	r0, 0x3b	; 59
     17c:	0f 92       	push	r0
     17e:	2f 93       	push	r18
     180:	3f 93       	push	r19
     182:	4f 93       	push	r20
     184:	5f 93       	push	r21
     186:	6f 93       	push	r22
     188:	7f 93       	push	r23
     18a:	8f 93       	push	r24
     18c:	9f 93       	push	r25
     18e:	af 93       	push	r26
     190:	bf 93       	push	r27
     192:	ef 93       	push	r30
     194:	ff 93       	push	r31
	Ultrasonic_ISR_Process();
     196:	0e 94 ac 0b 	call	0x1758	; 0x1758 <Ultrasonic_ISR_Process>
}
     19a:	ff 91       	pop	r31
     19c:	ef 91       	pop	r30
     19e:	bf 91       	pop	r27
     1a0:	af 91       	pop	r26
     1a2:	9f 91       	pop	r25
     1a4:	8f 91       	pop	r24
     1a6:	7f 91       	pop	r23
     1a8:	6f 91       	pop	r22
     1aa:	5f 91       	pop	r21
     1ac:	4f 91       	pop	r20
     1ae:	3f 91       	pop	r19
     1b0:	2f 91       	pop	r18
     1b2:	0f 90       	pop	r0
     1b4:	0b be       	out	0x3b, r0	; 59
     1b6:	0f 90       	pop	r0
     1b8:	0f be       	out	0x3f, r0	; 63
     1ba:	0f 90       	pop	r0
     1bc:	1f 90       	pop	r1
     1be:	18 95       	reti

000001c0 <__vector_18>:

ISR(USART0_RX_vect){
     1c0:	1f 92       	push	r1
     1c2:	0f 92       	push	r0
     1c4:	0f b6       	in	r0, 0x3f	; 63
     1c6:	0f 92       	push	r0
     1c8:	11 24       	eor	r1, r1
     1ca:	0b b6       	in	r0, 0x3b	; 59
     1cc:	0f 92       	push	r0
     1ce:	2f 93       	push	r18
     1d0:	3f 93       	push	r19
     1d2:	4f 93       	push	r20
     1d4:	5f 93       	push	r21
     1d6:	6f 93       	push	r22
     1d8:	7f 93       	push	r23
     1da:	8f 93       	push	r24
     1dc:	9f 93       	push	r25
     1de:	af 93       	push	r26
     1e0:	bf 93       	push	r27
     1e2:	ef 93       	push	r30
     1e4:	ff 93       	push	r31
	UART0_ISR_Process();
     1e6:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <UART0_ISR_Process>
}
     1ea:	ff 91       	pop	r31
     1ec:	ef 91       	pop	r30
     1ee:	bf 91       	pop	r27
     1f0:	af 91       	pop	r26
     1f2:	9f 91       	pop	r25
     1f4:	8f 91       	pop	r24
     1f6:	7f 91       	pop	r23
     1f8:	6f 91       	pop	r22
     1fa:	5f 91       	pop	r21
     1fc:	4f 91       	pop	r20
     1fe:	3f 91       	pop	r19
     200:	2f 91       	pop	r18
     202:	0f 90       	pop	r0
     204:	0b be       	out	0x3b, r0	; 59
     206:	0f 90       	pop	r0
     208:	0f be       	out	0x3f, r0	; 63
     20a:	0f 90       	pop	r0
     20c:	1f 90       	pop	r1
     20e:	18 95       	reti

00000210 <ap_init>:

void ap_init(){
	Listener_UART0_init();
     210:	9a d1       	rcall	.+820    	; 0x546 <Listener_UART0_init>
	Listener_Button_init();
     212:	15 d0       	rcall	.+42     	; 0x23e <Listener_Button_init>
	Fan_Sevice_init();
     214:	a0 d5       	rcall	.+2880   	; 0xd56 <Fan_Sevice_init>
	Time_init();
     216:	ee d5       	rcall	.+3036   	; 0xdf4 <Time_init>
     218:	8c d2       	rcall	.+1304   	; 0x732 <presenter_init>
	presenter_init();
     21a:	0e 94 3f 0c 	call	0x187e	; 0x187e <TIM0_init>
	TIM0_init();
     21e:	0e 94 48 0c 	call	0x1890	; 0x1890 <TIM2_init>
	TIM2_init();
     222:	80 e0       	ldi	r24, 0x00	; 0
     224:	91 e0       	ldi	r25, 0x01	; 1
	stdout = &UART0_OUTPUT;
     226:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <__iob+0x3>
     22a:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <__iob+0x2>
     22e:	78 94       	sei
     230:	08 95       	ret

00000232 <ap_excute>:
	sei();
     232:	57 d1       	rcall	.+686    	; 0x4e2 <Listener_Button_eventCheck>
     234:	8b d1       	rcall	.+790    	; 0x54c <Listener_UART0_eventCheck>
}
	
void ap_excute(){
	Listener_Button_eventCheck();
	Listener_UART0_eventCheck();
	Fan_device_Sevice();
     236:	9d d5       	rcall	.+2874   	; 0xd72 <Fan_device_Sevice>
	Fan_presenter();
     238:	96 d3       	rcall	.+1836   	; 0x966 <Fan_presenter>
     23a:	32 c4       	rjmp	.+2148   	; 0xaa0 <Fan_UART0_presenter>
	Fan_UART0_presenter();
     23c:	08 95       	ret

0000023e <Listener_Button_init>:
     23e:	20 e0       	ldi	r18, 0x00	; 0
     240:	49 e3       	ldi	r20, 0x39	; 57
uint8_t DeviceState, ModeState, ManualModeState, TimerModeState, TimerModeFlag;
uint8_t ButttonFlag, UltraSonicOnOffFlag;

void Listener_Button_init()
{
	Button_init(&btnOnOff,&Button_DDR,&Button_PIN,0);		//on,off 0번
     242:	50 e0       	ldi	r21, 0x00	; 0
     244:	6a e3       	ldi	r22, 0x3A	; 58
     246:	70 e0       	ldi	r23, 0x00	; 0
     248:	8e ea       	ldi	r24, 0xAE	; 174
     24a:	92 e0       	ldi	r25, 0x02	; 2
     24c:	f4 d6       	rcall	.+3560   	; 0x1036 <Button_init>
	Button_init(&btnManual,&Button_DDR,&Button_PIN,1);		//Manual (Slow->Middle->Fast)
     24e:	21 e0       	ldi	r18, 0x01	; 1
     250:	49 e3       	ldi	r20, 0x39	; 57
     252:	50 e0       	ldi	r21, 0x00	; 0
     254:	6a e3       	ldi	r22, 0x3A	; 58
     256:	70 e0       	ldi	r23, 0x00	; 0
     258:	8c eb       	ldi	r24, 0xBC	; 188
     25a:	92 e0       	ldi	r25, 0x02	; 2
     25c:	ec d6       	rcall	.+3544   	; 0x1036 <Button_init>
	Button_init(&btnAuto,&Button_DDR,&Button_PIN,2);		//Auto
     25e:	22 e0       	ldi	r18, 0x02	; 2
     260:	49 e3       	ldi	r20, 0x39	; 57
     262:	50 e0       	ldi	r21, 0x00	; 0
     264:	6a e3       	ldi	r22, 0x3A	; 58
     266:	70 e0       	ldi	r23, 0x00	; 0
     268:	87 ea       	ldi	r24, 0xA7	; 167
     26a:	92 e0       	ldi	r25, 0x02	; 2
     26c:	e4 d6       	rcall	.+3528   	; 0x1036 <Button_init>
	Button_init(&btnTimer,&Button_DDR,&Button_PIN,3);		//Timer (30분++,자동으로 감소)
     26e:	23 e0       	ldi	r18, 0x03	; 3
     270:	49 e3       	ldi	r20, 0x39	; 57
     272:	50 e0       	ldi	r21, 0x00	; 0
     274:	6a e3       	ldi	r22, 0x3A	; 58
     276:	70 e0       	ldi	r23, 0x00	; 0
     278:	84 eb       	ldi	r24, 0xB4	; 180
     27a:	92 e0       	ldi	r25, 0x02	; 2
	Model_setdeviceStateData(OFFState);		//DeviceState = OFFState
     27c:	dc d6       	rcall	.+3512   	; 0x1036 <Button_init>
     27e:	80 e0       	ldi	r24, 0x00	; 0
	Model_setmodeStateData(ManualState);		//ModeState = ManualState
     280:	17 d2       	rcall	.+1070   	; 0x6b0 <Model_setdeviceStateData>
     282:	80 e0       	ldi	r24, 0x00	; 0
	Model_setmanualModeStateData(SlowState);	//ManualModeState = SlowState
     284:	21 d2       	rcall	.+1090   	; 0x6c8 <Model_setmodeStateData>
     286:	80 e0       	ldi	r24, 0x00	; 0
	Model_settimermodeStateData(Setting);		//TimerModeState = Setting
     288:	19 d2       	rcall	.+1074   	; 0x6bc <Model_setmanualModeStateData>
     28a:	80 e0       	ldi	r24, 0x00	; 0
	Model_settimermodeFlagData(Stop);	//TimerModeFlag = Stop
     28c:	3d d2       	rcall	.+1146   	; 0x708 <Model_settimermodeStateData>
     28e:	81 e0       	ldi	r24, 0x01	; 1
     290:	41 d2       	rcall	.+1154   	; 0x714 <Model_settimermodeFlagData>
	Model_setUltraSonicOnOffFlagData(NONAPPLY); // 초음파모드 초기 OFF
     292:	81 e0       	ldi	r24, 0x01	; 1
     294:	4b d2       	rcall	.+1174   	; 0x72c <Model_setUltraSonicOnOffFlagData>
     296:	81 e0       	ldi	r24, 0x01	; 1
	Model_setbuttonFlagData(Off); // ButttonFlag = OFF
     298:	05 c2       	rjmp	.+1034   	; 0x6a4 <Model_setbuttonFlagData>
     29a:	08 95       	ret

0000029c <Fan_ManualMode_Button_eventCheck>:
     29c:	0c d2       	rcall	.+1048   	; 0x6b6 <Model_getmanualModeStateData>
     29e:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <ManualModeState>

void Fan_ManualMode_Button_eventCheck()
{	//slow -> middle -> fast 순으로 반복
	ManualModeState = Model_getmanualModeStateData();
	
	switch(ManualModeState){
     2a2:	81 30       	cpi	r24, 0x01	; 1
     2a4:	09 f1       	breq	.+66     	; 0x2e8 <Fan_ManualMode_Button_eventCheck+0x4c>
     2a6:	20 f0       	brcs	.+8      	; 0x2b0 <Fan_ManualMode_Button_eventCheck+0x14>
     2a8:	82 30       	cpi	r24, 0x02	; 2
     2aa:	09 f4       	brne	.+2      	; 0x2ae <Fan_ManualMode_Button_eventCheck+0x12>
     2ac:	37 c0       	rjmp	.+110    	; 0x31c <Fan_ManualMode_Button_eventCheck+0x80>
     2ae:	08 95       	ret
		case SlowState:
		if(Button_GetState(&btnManual) == ACT_ON)
     2b0:	8c eb       	ldi	r24, 0xBC	; 188
     2b2:	92 e0       	ldi	r25, 0x02	; 2
     2b4:	cd d6       	rcall	.+3482   	; 0x1050 <Button_GetState>
     2b6:	82 30       	cpi	r24, 0x02	; 2
     2b8:	41 f4       	brne	.+16     	; 0x2ca <Fan_ManualMode_Button_eventCheck+0x2e>
		{
			ManualModeState = MiddleState;
     2ba:	81 e0       	ldi	r24, 0x01	; 1
     2bc:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <ManualModeState>
			Model_setmanualModeStateData(ManualModeState);
     2c0:	fd d1       	rcall	.+1018   	; 0x6bc <Model_setmanualModeStateData>
			ButttonFlag = On;
     2c2:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
			Model_setbuttonFlagData(ButttonFlag);
     2c6:	80 e0       	ldi	r24, 0x00	; 0
		}
		if(Button_GetState(&btnOnOff) == ACT_ON)
     2c8:	ed d1       	rcall	.+986    	; 0x6a4 <Model_setbuttonFlagData>
     2ca:	8e ea       	ldi	r24, 0xAE	; 174
     2cc:	92 e0       	ldi	r25, 0x02	; 2
     2ce:	c0 d6       	rcall	.+3456   	; 0x1050 <Button_GetState>
     2d0:	82 30       	cpi	r24, 0x02	; 2
     2d2:	09 f0       	breq	.+2      	; 0x2d6 <Fan_ManualMode_Button_eventCheck+0x3a>
		{
			DeviceState=OFFState;
     2d4:	3d c0       	rjmp	.+122    	; 0x350 <Fan_ManualMode_Button_eventCheck+0xb4>
     2d6:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <DeviceState>
			Model_setdeviceStateData(DeviceState);
     2da:	80 e0       	ldi	r24, 0x00	; 0
			ButttonFlag = On;
     2dc:	e9 d1       	rcall	.+978    	; 0x6b0 <Model_setdeviceStateData>
			Model_setbuttonFlagData(ButttonFlag);
     2de:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
     2e2:	80 e0       	ldi	r24, 0x00	; 0
     2e4:	df c1       	rjmp	.+958    	; 0x6a4 <Model_setbuttonFlagData>
		}
		break;
		
		case MiddleState:
		if(Button_GetState(&btnManual) == ACT_ON)
     2e6:	08 95       	ret
     2e8:	8c eb       	ldi	r24, 0xBC	; 188
     2ea:	92 e0       	ldi	r25, 0x02	; 2
     2ec:	b1 d6       	rcall	.+3426   	; 0x1050 <Button_GetState>
		{
			ManualModeState = FastState;
     2ee:	82 30       	cpi	r24, 0x02	; 2
			Model_setmanualModeStateData(ManualModeState);
     2f0:	39 f4       	brne	.+14     	; 0x300 <Fan_ManualMode_Button_eventCheck+0x64>
     2f2:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <ManualModeState>
			ButttonFlag = On;
     2f6:	e2 d1       	rcall	.+964    	; 0x6bc <Model_setmanualModeStateData>
			Model_setbuttonFlagData(ButttonFlag);
     2f8:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
		}
		if(Button_GetState(&btnOnOff) == ACT_ON)
     2fc:	80 e0       	ldi	r24, 0x00	; 0
     2fe:	d2 d1       	rcall	.+932    	; 0x6a4 <Model_setbuttonFlagData>
     300:	8e ea       	ldi	r24, 0xAE	; 174
     302:	92 e0       	ldi	r25, 0x02	; 2
     304:	a5 d6       	rcall	.+3402   	; 0x1050 <Button_GetState>
		{
			DeviceState=OFFState;
     306:	82 30       	cpi	r24, 0x02	; 2
			Model_setdeviceStateData(DeviceState);
     308:	19 f5       	brne	.+70     	; 0x350 <Fan_ManualMode_Button_eventCheck+0xb4>
     30a:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <DeviceState>
			ButttonFlag = On;
     30e:	80 e0       	ldi	r24, 0x00	; 0
			Model_setbuttonFlagData(ButttonFlag);
     310:	cf d1       	rcall	.+926    	; 0x6b0 <Model_setdeviceStateData>
     312:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
		}
		break;
		
		case FastState:
		if(Button_GetState(&btnManual) == ACT_ON)
     316:	80 e0       	ldi	r24, 0x00	; 0
     318:	c5 c1       	rjmp	.+906    	; 0x6a4 <Model_setbuttonFlagData>
     31a:	08 95       	ret
     31c:	8c eb       	ldi	r24, 0xBC	; 188
     31e:	92 e0       	ldi	r25, 0x02	; 2
		{
			ManualModeState = SlowState;
     320:	97 d6       	rcall	.+3374   	; 0x1050 <Button_GetState>
     322:	82 30       	cpi	r24, 0x02	; 2
			Model_setmanualModeStateData(ManualModeState);
     324:	41 f4       	brne	.+16     	; 0x336 <Fan_ManualMode_Button_eventCheck+0x9a>
     326:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <ManualModeState>
			ButttonFlag = On;
			Model_setbuttonFlagData(ButttonFlag);
     32a:	80 e0       	ldi	r24, 0x00	; 0
     32c:	c7 d1       	rcall	.+910    	; 0x6bc <Model_setmanualModeStateData>
     32e:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
		}
		if(Button_GetState(&btnOnOff) == ACT_ON)
     332:	80 e0       	ldi	r24, 0x00	; 0
     334:	b7 d1       	rcall	.+878    	; 0x6a4 <Model_setbuttonFlagData>
     336:	8e ea       	ldi	r24, 0xAE	; 174
     338:	92 e0       	ldi	r25, 0x02	; 2
     33a:	8a d6       	rcall	.+3348   	; 0x1050 <Button_GetState>
		{
			DeviceState=OFFState;
     33c:	82 30       	cpi	r24, 0x02	; 2
     33e:	41 f4       	brne	.+16     	; 0x350 <Fan_ManualMode_Button_eventCheck+0xb4>
			Model_setdeviceStateData(DeviceState);
     340:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <DeviceState>
     344:	80 e0       	ldi	r24, 0x00	; 0
			ButttonFlag = On;
     346:	b4 d1       	rcall	.+872    	; 0x6b0 <Model_setdeviceStateData>
     348:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
			Model_setbuttonFlagData(ButttonFlag);
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	aa c1       	rjmp	.+852    	; 0x6a4 <Model_setbuttonFlagData>
     350:	08 95       	ret

00000352 <Fan_TimerMode_Button_eventCheck>:
	}
}

void Fan_TimerMode_Button_eventCheck()
{
	TimerModeState = Model_gettimermodeStateData();
     352:	d7 d1       	rcall	.+942    	; 0x702 <Model_gettimermodeStateData>
     354:	80 93 a5 02 	sts	0x02A5, r24	; 0x8002a5 <TimerModeState>
	
	switch(TimerModeState)
     358:	88 23       	and	r24, r24
     35a:	19 f0       	breq	.+6      	; 0x362 <Fan_TimerMode_Button_eventCheck+0x10>
     35c:	81 30       	cpi	r24, 0x01	; 1
     35e:	79 f0       	breq	.+30     	; 0x37e <Fan_TimerMode_Button_eventCheck+0x2c>
     360:	08 95       	ret
	{
		case Setting:
		if(Button_GetState(&btnTimer)==ACT_ON)
     362:	84 eb       	ldi	r24, 0xB4	; 180
     364:	92 e0       	ldi	r25, 0x02	; 2
     366:	74 d6       	rcall	.+3304   	; 0x1050 <Button_GetState>
     368:	82 30       	cpi	r24, 0x02	; 2
     36a:	89 f4       	brne	.+34     	; 0x38e <Fan_TimerMode_Button_eventCheck+0x3c>
		{
			TimerModeState = minUp;
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	80 93 a5 02 	sts	0x02A5, r24	; 0x8002a5 <TimerModeState>
			Model_settimermodeStateData(TimerModeState);
     372:	ca d1       	rcall	.+916    	; 0x708 <Model_settimermodeStateData>
			ButttonFlag = On;
     374:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
			Model_setbuttonFlagData(ButttonFlag);
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	94 c1       	rjmp	.+808    	; 0x6a4 <Model_setbuttonFlagData>
		}
		break;
		
		case minUp:
		TimerModeState = Setting;
     37c:	08 95       	ret
     37e:	10 92 a5 02 	sts	0x02A5, r1	; 0x8002a5 <TimerModeState>
		Model_settimermodeStateData(TimerModeState);
     382:	80 e0       	ldi	r24, 0x00	; 0
		TimerModeFlag = Start;		//timer 시작
     384:	c1 d1       	rcall	.+898    	; 0x708 <Model_settimermodeStateData>
     386:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <TimerModeFlag>
		Model_settimermodeFlagData(TimerModeFlag);
     38a:	80 e0       	ldi	r24, 0x00	; 0
     38c:	c3 c1       	rjmp	.+902    	; 0x714 <Model_settimermodeFlagData>
     38e:	08 95       	ret

00000390 <Fan_Mode_Button_eventCheck>:
	}
}

void Fan_Mode_Button_eventCheck()
{
	ModeState = Model_getmodeStateData();
     390:	98 d1       	rcall	.+816    	; 0x6c2 <Model_getmodeStateData>
     392:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <ModeState>
	UltraSonicOnOffFlag = Model_getUltraSonicOnOffFlagData();
     396:	c7 d1       	rcall	.+910    	; 0x726 <Model_getUltraSonicOnOffFlagData>
     398:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <UltraSonicOnOffFlag>
     39c:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <ModeState>

	switch(ModeState)
     3a0:	81 30       	cpi	r24, 0x01	; 1
     3a2:	91 f1       	breq	.+100    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3a4:	20 f0       	brcs	.+8      	; 0x3ae <Fan_Mode_Button_eventCheck+0x1e>
     3a6:	82 30       	cpi	r24, 0x02	; 2
     3a8:	09 f4       	brne	.+2      	; 0x3ac <Fan_Mode_Button_eventCheck+0x1c>
     3aa:	6e c0       	rjmp	.+220    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     3ac:	08 95       	ret
	{
		case ManualState:
		Fan_ManualMode_Button_eventCheck();	//slow,middle,fast eventCheck
     3ae:	76 df       	rcall	.-276    	; 0x29c <Fan_ManualMode_Button_eventCheck>
		if(Button_GetState(&btnAuto) == ACT_ON)
     3b0:	87 ea       	ldi	r24, 0xA7	; 167
     3b2:	92 e0       	ldi	r25, 0x02	; 2
     3b4:	4d d6       	rcall	.+3226   	; 0x1050 <Button_GetState>
     3b6:	82 30       	cpi	r24, 0x02	; 2
     3b8:	61 f4       	brne	.+24     	; 0x3d2 <Fan_Mode_Button_eventCheck+0x42>
		{
			ModeState = AutoState;
     3ba:	81 e0       	ldi	r24, 0x01	; 1
     3bc:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <ModeState>
			Model_setmodeStateData(ModeState);
     3c0:	83 d1       	rcall	.+774    	; 0x6c8 <Model_setmodeStateData>
			ButttonFlag = On;
     3c2:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
			Model_setbuttonFlagData(ButttonFlag);
     3c6:	80 e0       	ldi	r24, 0x00	; 0
     3c8:	6d d1       	rcall	.+730    	; 0x6a4 <Model_setbuttonFlagData>
			UltraSonicOnOffFlag = APPLY;
     3ca:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <UltraSonicOnOffFlag>
			Model_setUltraSonicOnOffFlagData(UltraSonicOnOffFlag);
     3ce:	80 e0       	ldi	r24, 0x00	; 0
     3d0:	ad d1       	rcall	.+858    	; 0x72c <Model_setUltraSonicOnOffFlagData>
		}
		if(Button_GetState(&btnTimer) == ACT_ON){
     3d2:	84 eb       	ldi	r24, 0xB4	; 180
     3d4:	92 e0       	ldi	r25, 0x02	; 2
     3d6:	3c d6       	rcall	.+3192   	; 0x1050 <Button_GetState>
     3d8:	82 30       	cpi	r24, 0x02	; 2
			ModeState = TimerState;
     3da:	39 f4       	brne	.+14     	; 0x3ea <Fan_Mode_Button_eventCheck+0x5a>
			Model_setmodeStateData(ModeState);
     3dc:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <ModeState>
			ButttonFlag = On;
     3e0:	73 d1       	rcall	.+742    	; 0x6c8 <Model_setmodeStateData>
     3e2:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
			Model_setbuttonFlagData(ButttonFlag);
     3e6:	80 e0       	ldi	r24, 0x00	; 0
		}
		if(Button_GetState(&btnOnOff) == ACT_ON){
     3e8:	5d d1       	rcall	.+698    	; 0x6a4 <Model_setbuttonFlagData>
     3ea:	8e ea       	ldi	r24, 0xAE	; 174
     3ec:	92 e0       	ldi	r25, 0x02	; 2
     3ee:	30 d6       	rcall	.+3168   	; 0x1050 <Button_GetState>
     3f0:	82 30       	cpi	r24, 0x02	; 2
     3f2:	09 f0       	breq	.+2      	; 0x3f6 <Fan_Mode_Button_eventCheck+0x66>
			DeviceState = OFFState;
     3f4:	75 c0       	rjmp	.+234    	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
			Model_setdeviceStateData(DeviceState);
     3f6:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <DeviceState>
     3fa:	80 e0       	ldi	r24, 0x00	; 0
			ButttonFlag = On;
     3fc:	59 d1       	rcall	.+690    	; 0x6b0 <Model_setdeviceStateData>
			Model_setbuttonFlagData(ButttonFlag);
     3fe:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
     402:	80 e0       	ldi	r24, 0x00	; 0
		}
		break;
		
		case AutoState:
		if(Button_GetState(&btnManual) == ACT_ON)
     404:	4f c1       	rjmp	.+670    	; 0x6a4 <Model_setbuttonFlagData>
     406:	08 95       	ret
     408:	8c eb       	ldi	r24, 0xBC	; 188
     40a:	92 e0       	ldi	r25, 0x02	; 2
     40c:	21 d6       	rcall	.+3138   	; 0x1050 <Button_GetState>
		{
			ModeState = ManualState;
     40e:	82 30       	cpi	r24, 0x02	; 2
			Model_setmodeStateData(ModeState);
     410:	41 f4       	brne	.+16     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     412:	10 92 c2 02 	sts	0x02C2, r1	; 0x8002c2 <ModeState>
			ButttonFlag = On;
     416:	80 e0       	ldi	r24, 0x00	; 0
			Model_setbuttonFlagData(ButttonFlag);
     418:	57 d1       	rcall	.+686    	; 0x6c8 <Model_setmodeStateData>
     41a:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
		}
		if(Button_GetState(&btnTimer) == ACT_ON)
     41e:	80 e0       	ldi	r24, 0x00	; 0
     420:	41 d1       	rcall	.+642    	; 0x6a4 <Model_setbuttonFlagData>
     422:	84 eb       	ldi	r24, 0xB4	; 180
     424:	92 e0       	ldi	r25, 0x02	; 2
		{
			ModeState = TimerState;
     426:	14 d6       	rcall	.+3112   	; 0x1050 <Button_GetState>
     428:	82 30       	cpi	r24, 0x02	; 2
			Model_setmodeStateData(ModeState);
     42a:	39 f4       	brne	.+14     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     42c:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <ModeState>
			ButttonFlag = On;
     430:	4b d1       	rcall	.+662    	; 0x6c8 <Model_setmodeStateData>
			Model_setbuttonFlagData(ButttonFlag);
     432:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
     436:	80 e0       	ldi	r24, 0x00	; 0
		}
		if(Button_GetState(&btnAuto) == ACT_ON)
     438:	35 d1       	rcall	.+618    	; 0x6a4 <Model_setbuttonFlagData>
     43a:	87 ea       	ldi	r24, 0xA7	; 167
     43c:	92 e0       	ldi	r25, 0x02	; 2
     43e:	08 d6       	rcall	.+3088   	; 0x1050 <Button_GetState>
     440:	82 30       	cpi	r24, 0x02	; 2
		{
			ButttonFlag = On;
     442:	99 f4       	brne	.+38     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
			Model_setbuttonFlagData(ButttonFlag);
     444:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
     448:	80 e0       	ldi	r24, 0x00	; 0
			UltraSonicOnOffFlag = (UltraSonicOnOffFlag+1)%2;
     44a:	2c d1       	rcall	.+600    	; 0x6a4 <Model_setbuttonFlagData>
     44c:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <UltraSonicOnOffFlag>
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	01 96       	adiw	r24, 0x01	; 1
     454:	81 70       	andi	r24, 0x01	; 1
     456:	90 78       	andi	r25, 0x80	; 128
     458:	99 23       	and	r25, r25
     45a:	24 f4       	brge	.+8      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     45c:	01 97       	sbiw	r24, 0x01	; 1
     45e:	8e 6f       	ori	r24, 0xFE	; 254
			Model_setUltraSonicOnOffFlagData(UltraSonicOnOffFlag); // auto 모드에서 한 번 더 누르면 초음파 센서 모드 꺼지도록
     460:	9f 6f       	ori	r25, 0xFF	; 255
     462:	01 96       	adiw	r24, 0x01	; 1
		}
		if(Button_GetState(&btnOnOff) == ACT_ON)
     464:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <UltraSonicOnOffFlag>
     468:	61 d1       	rcall	.+706    	; 0x72c <Model_setUltraSonicOnOffFlagData>
     46a:	8e ea       	ldi	r24, 0xAE	; 174
     46c:	92 e0       	ldi	r25, 0x02	; 2
     46e:	f0 d5       	rcall	.+3040   	; 0x1050 <Button_GetState>
		{
			DeviceState = OFFState;
     470:	82 30       	cpi	r24, 0x02	; 2
     472:	09 f0       	breq	.+2      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
			Model_setdeviceStateData(DeviceState);
     474:	35 c0       	rjmp	.+106    	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
     476:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <DeviceState>
			ButttonFlag = On;
     47a:	80 e0       	ldi	r24, 0x00	; 0
			Model_setbuttonFlagData(ButttonFlag);
     47c:	19 d1       	rcall	.+562    	; 0x6b0 <Model_setdeviceStateData>
     47e:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
		}
		break;
		
		case TimerState:
		Fan_TimerMode_Button_eventCheck();		//Timer 시간 설정(setting -> minup ->setting)
     482:	80 e0       	ldi	r24, 0x00	; 0
		if(Button_GetState(&btnManual) == ACT_ON)
     484:	0f c1       	rjmp	.+542    	; 0x6a4 <Model_setbuttonFlagData>
     486:	08 95       	ret
     488:	64 df       	rcall	.-312    	; 0x352 <Fan_TimerMode_Button_eventCheck>
     48a:	8c eb       	ldi	r24, 0xBC	; 188
     48c:	92 e0       	ldi	r25, 0x02	; 2
		{
			ModeState = ManualState;
     48e:	e0 d5       	rcall	.+3008   	; 0x1050 <Button_GetState>
			Model_setmodeStateData(ModeState);
     490:	82 30       	cpi	r24, 0x02	; 2
     492:	41 f4       	brne	.+16     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     494:	10 92 c2 02 	sts	0x02C2, r1	; 0x8002c2 <ModeState>
			ButttonFlag = On;
			Model_setbuttonFlagData(ButttonFlag);
     498:	80 e0       	ldi	r24, 0x00	; 0
     49a:	16 d1       	rcall	.+556    	; 0x6c8 <Model_setmodeStateData>
     49c:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
		}
		if(Button_GetState(&btnAuto) == ACT_ON)
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	00 d1       	rcall	.+512    	; 0x6a4 <Model_setbuttonFlagData>
     4a4:	87 ea       	ldi	r24, 0xA7	; 167
     4a6:	92 e0       	ldi	r25, 0x02	; 2
		{
			ModeState = AutoState;
     4a8:	d3 d5       	rcall	.+2982   	; 0x1050 <Button_GetState>
     4aa:	82 30       	cpi	r24, 0x02	; 2
     4ac:	61 f4       	brne	.+24     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
			Model_setmodeStateData(ModeState);
     4ae:	81 e0       	ldi	r24, 0x01	; 1
     4b0:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <ModeState>
			ButttonFlag = On;
     4b4:	09 d1       	rcall	.+530    	; 0x6c8 <Model_setmodeStateData>
			Model_setbuttonFlagData(ButttonFlag);
     4b6:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
     4ba:	80 e0       	ldi	r24, 0x00	; 0
			UltraSonicOnOffFlag = APPLY;
     4bc:	f3 d0       	rcall	.+486    	; 0x6a4 <Model_setbuttonFlagData>
     4be:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <UltraSonicOnOffFlag>
			Model_setUltraSonicOnOffFlagData(UltraSonicOnOffFlag);
     4c2:	80 e0       	ldi	r24, 0x00	; 0
     4c4:	33 d1       	rcall	.+614    	; 0x72c <Model_setUltraSonicOnOffFlagData>
		}
		if(Button_GetState(&btnOnOff) == ACT_ON)
     4c6:	8e ea       	ldi	r24, 0xAE	; 174
     4c8:	92 e0       	ldi	r25, 0x02	; 2
     4ca:	c2 d5       	rcall	.+2948   	; 0x1050 <Button_GetState>
     4cc:	82 30       	cpi	r24, 0x02	; 2
     4ce:	41 f4       	brne	.+16     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
     4d0:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <DeviceState>
		{
			DeviceState = OFFState;
     4d4:	80 e0       	ldi	r24, 0x00	; 0
			Model_setdeviceStateData(DeviceState);
     4d6:	ec d0       	rcall	.+472    	; 0x6b0 <Model_setdeviceStateData>
     4d8:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
			ButttonFlag = On;
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	e2 c0       	rjmp	.+452    	; 0x6a4 <Model_setbuttonFlagData>
			Model_setbuttonFlagData(ButttonFlag);
     4e0:	08 95       	ret

000004e2 <Listener_Button_eventCheck>:
     4e2:	e3 d0       	rcall	.+454    	; 0x6aa <Model_getdeviceStateData>
     4e4:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <DeviceState>


void Listener_Button_eventCheck()
{
	DeviceState = Model_getdeviceStateData();
	UltraSonicOnOffFlag = Model_getUltraSonicOnOffFlagData();
     4e8:	1e d1       	rcall	.+572    	; 0x726 <Model_getUltraSonicOnOffFlagData>
     4ea:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <UltraSonicOnOffFlag>
     4ee:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <DeviceState>
	switch(DeviceState)
     4f2:	88 23       	and	r24, r24
     4f4:	19 f0       	breq	.+6      	; 0x4fc <Listener_Button_eventCheck+0x1a>
     4f6:	81 30       	cpi	r24, 0x01	; 1
     4f8:	99 f0       	breq	.+38     	; 0x520 <Listener_Button_eventCheck+0x3e>
     4fa:	08 95       	ret
     4fc:	8e ea       	ldi	r24, 0xAE	; 174
	{
		case OFFState :
		if(Button_GetState(&btnOnOff)==ACT_ON)
     4fe:	92 e0       	ldi	r25, 0x02	; 2
     500:	a7 d5       	rcall	.+2894   	; 0x1050 <Button_GetState>
     502:	82 30       	cpi	r24, 0x02	; 2
     504:	f9 f4       	brne	.+62     	; 0x544 <Listener_Button_eventCheck+0x62>
     506:	81 e0       	ldi	r24, 0x01	; 1
		{
			DeviceState=OnState;
     508:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <DeviceState>
			Model_setdeviceStateData(DeviceState);
     50c:	d1 d0       	rcall	.+418    	; 0x6b0 <Model_setdeviceStateData>
			ButttonFlag = On;
     50e:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
			Model_setbuttonFlagData(ButttonFlag);
     512:	80 e0       	ldi	r24, 0x00	; 0
     514:	c7 d0       	rcall	.+398    	; 0x6a4 <Model_setbuttonFlagData>
			UltraSonicOnOffFlag = APPLY;
     516:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <UltraSonicOnOffFlag>
			Model_setUltraSonicOnOffFlagData(UltraSonicOnOffFlag);
     51a:	80 e0       	ldi	r24, 0x00	; 0
     51c:	07 c1       	rjmp	.+526    	; 0x72c <Model_setUltraSonicOnOffFlagData>
		}
		break;
		
		case OnState :
		Fan_Mode_Button_eventCheck();	//Manual,Auto,Timer Mode eventCheck
     51e:	08 95       	ret
     520:	37 df       	rcall	.-402    	; 0x390 <Fan_Mode_Button_eventCheck>
		if(Button_GetState(&btnOnOff)==ACT_ON)
     522:	8e ea       	ldi	r24, 0xAE	; 174
     524:	92 e0       	ldi	r25, 0x02	; 2
     526:	94 d5       	rcall	.+2856   	; 0x1050 <Button_GetState>
     528:	82 30       	cpi	r24, 0x02	; 2
     52a:	61 f4       	brne	.+24     	; 0x544 <Listener_Button_eventCheck+0x62>
		{
			DeviceState=OFFState;
     52c:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <DeviceState>
			Model_setdeviceStateData(DeviceState);
     530:	80 e0       	ldi	r24, 0x00	; 0
     532:	be d0       	rcall	.+380    	; 0x6b0 <Model_setdeviceStateData>
			ButttonFlag = On;
     534:	10 92 ad 02 	sts	0x02AD, r1	; 0x8002ad <ButttonFlag>
			Model_setbuttonFlagData(ButttonFlag);
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	b4 d0       	rcall	.+360    	; 0x6a4 <Model_setbuttonFlagData>
     53c:	81 e0       	ldi	r24, 0x01	; 1
			UltraSonicOnOffFlag = NONAPPLY;
     53e:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <UltraSonicOnOffFlag>
     542:	f4 c0       	rjmp	.+488    	; 0x72c <Model_setUltraSonicOnOffFlagData>
			Model_setUltraSonicOnOffFlagData(UltraSonicOnOffFlag);
     544:	08 95       	ret

00000546 <Listener_UART0_init>:
     546:	0c 94 74 0c 	jmp	0x18e8	; 0x18e8 <UART0_init>
}


void Listener_UART0_init()
{
	UART0_init();
     54a:	08 95       	ret

0000054c <Listener_UART0_eventCheck>:
}

void Listener_UART0_eventCheck()
{
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
	DeviceState = Model_getdeviceStateData();
     550:	ac d0       	rcall	.+344    	; 0x6aa <Model_getdeviceStateData>
     552:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <DeviceState>
	ModeState = Model_getmodeStateData();
     556:	b5 d0       	rcall	.+362    	; 0x6c2 <Model_getmodeStateData>
     558:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <ModeState>
	ManualModeState = Model_getmanualModeStateData();
     55c:	ac d0       	rcall	.+344    	; 0x6b6 <Model_getmanualModeStateData>
     55e:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <ManualModeState>
	TimerModeState = Model_gettimermodeStateData();
     562:	cf d0       	rcall	.+414    	; 0x702 <Model_gettimermodeStateData>
     564:	80 93 a5 02 	sts	0x02A5, r24	; 0x8002a5 <TimerModeState>
	UltraSonicOnOffFlag = Model_getUltraSonicOnOffFlagData();
     568:	de d0       	rcall	.+444    	; 0x726 <Model_getUltraSonicOnOffFlagData>
     56a:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <UltraSonicOnOffFlag>
     56e:	0e 94 86 0c 	call	0x190c	; 0x190c <UART0_getRxFlag>
	
	if(UART0_getRxFlag()){
     572:	88 23       	and	r24, r24
     574:	09 f4       	brne	.+2      	; 0x578 <Listener_UART0_eventCheck+0x2c>
     576:	90 c0       	rjmp	.+288    	; 0x698 <Listener_UART0_eventCheck+0x14c>
     578:	0e 94 89 0c 	call	0x1912	; 0x1912 <UART0_clearRxFlag>
		UART0_clearRxFlag();
     57c:	0e 94 8c 0c 	call	0x1918	; 0x1918 <UART0_getRxBuff>
		char * Rxstring = UART0_getRxBuff();
     580:	ec 01       	movw	r28, r24
     582:	6a e1       	ldi	r22, 0x1A	; 26
		
		if(!(strcmp(Rxstring,"Smart IOT Fan ON\n"))){
     584:	71 e0       	ldi	r23, 0x01	; 1
     586:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     58a:	89 2b       	or	r24, r25
     58c:	49 f4       	brne	.+18     	; 0x5a0 <Listener_UART0_eventCheck+0x54>
			DeviceState = OnState;
     58e:	81 e0       	ldi	r24, 0x01	; 1
     590:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <DeviceState>
			Model_setdeviceStateData(DeviceState);
     594:	8d d0       	rcall	.+282    	; 0x6b0 <Model_setdeviceStateData>
			UltraSonicOnOffFlag = APPLY;
     596:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <UltraSonicOnOffFlag>
			Model_setUltraSonicOnOffFlagData(UltraSonicOnOffFlag);
     59a:	80 e0       	ldi	r24, 0x00	; 0
     59c:	c7 d0       	rcall	.+398    	; 0x72c <Model_setUltraSonicOnOffFlagData>
     59e:	7c c0       	rjmp	.+248    	; 0x698 <Listener_UART0_eventCheck+0x14c>
			return;
     5a0:	6c e2       	ldi	r22, 0x2C	; 44
		}
		if(!(strcmp(Rxstring,"Smart IOT Fan OFF\n"))){
     5a2:	71 e0       	ldi	r23, 0x01	; 1
     5a4:	ce 01       	movw	r24, r28
     5a6:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     5aa:	89 2b       	or	r24, r25
     5ac:	49 f4       	brne	.+18     	; 0x5c0 <Listener_UART0_eventCheck+0x74>
			DeviceState = OFFState;
     5ae:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <DeviceState>
			Model_setdeviceStateData(DeviceState);
     5b2:	80 e0       	ldi	r24, 0x00	; 0
     5b4:	7d d0       	rcall	.+250    	; 0x6b0 <Model_setdeviceStateData>
			UltraSonicOnOffFlag = NONAPPLY;
     5b6:	81 e0       	ldi	r24, 0x01	; 1
     5b8:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <UltraSonicOnOffFlag>
			Model_setUltraSonicOnOffFlagData(UltraSonicOnOffFlag);
     5bc:	b7 d0       	rcall	.+366    	; 0x72c <Model_setUltraSonicOnOffFlagData>
     5be:	6c c0       	rjmp	.+216    	; 0x698 <Listener_UART0_eventCheck+0x14c>
			return;
     5c0:	6f e3       	ldi	r22, 0x3F	; 63
		}
		if(!(strcmp(Rxstring,"Manual Mode Slow Speed\n"))){
     5c2:	71 e0       	ldi	r23, 0x01	; 1
     5c4:	ce 01       	movw	r24, r28
     5c6:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     5ca:	89 2b       	or	r24, r25
     5cc:	51 f4       	brne	.+20     	; 0x5e2 <Listener_UART0_eventCheck+0x96>
			ModeState = ManualState;
     5ce:	10 92 c2 02 	sts	0x02C2, r1	; 0x8002c2 <ModeState>
			ManualModeState = SlowState;
     5d2:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <ManualModeState>
			Model_setmodeStateData(ModeState);
     5d6:	80 e0       	ldi	r24, 0x00	; 0
     5d8:	77 d0       	rcall	.+238    	; 0x6c8 <Model_setmodeStateData>
     5da:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <ManualModeState>
			Model_setmanualModeStateData(ManualModeState);
     5de:	6e d0       	rcall	.+220    	; 0x6bc <Model_setmanualModeStateData>
     5e0:	5b c0       	rjmp	.+182    	; 0x698 <Listener_UART0_eventCheck+0x14c>
     5e2:	67 e5       	ldi	r22, 0x57	; 87
			return;
     5e4:	71 e0       	ldi	r23, 0x01	; 1
		}
		if(!(strcmp(Rxstring,"Manual Mode Middle Speed\n"))){
     5e6:	ce 01       	movw	r24, r28
     5e8:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     5ec:	89 2b       	or	r24, r25
     5ee:	59 f4       	brne	.+22     	; 0x606 <Listener_UART0_eventCheck+0xba>
			ModeState = ManualState;
     5f0:	10 92 c2 02 	sts	0x02C2, r1	; 0x8002c2 <ModeState>
			ManualModeState = MiddleState;
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <ManualModeState>
			Model_setmodeStateData(ModeState);
     5fa:	80 e0       	ldi	r24, 0x00	; 0
     5fc:	65 d0       	rcall	.+202    	; 0x6c8 <Model_setmodeStateData>
     5fe:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <ManualModeState>
			Model_setmanualModeStateData(ManualModeState);
     602:	5c d0       	rcall	.+184    	; 0x6bc <Model_setmanualModeStateData>
     604:	49 c0       	rjmp	.+146    	; 0x698 <Listener_UART0_eventCheck+0x14c>
     606:	61 e7       	ldi	r22, 0x71	; 113
			return;
     608:	71 e0       	ldi	r23, 0x01	; 1
		}
		if(!(strcmp(Rxstring,"Manual Mode Fast Speed\n"))){
     60a:	ce 01       	movw	r24, r28
     60c:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     610:	89 2b       	or	r24, r25
     612:	59 f4       	brne	.+22     	; 0x62a <Listener_UART0_eventCheck+0xde>
			ModeState = ManualState;
     614:	10 92 c2 02 	sts	0x02C2, r1	; 0x8002c2 <ModeState>
			ManualModeState = FastState;
     618:	82 e0       	ldi	r24, 0x02	; 2
     61a:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <ManualModeState>
			Model_setmodeStateData(ModeState);
     61e:	80 e0       	ldi	r24, 0x00	; 0
     620:	53 d0       	rcall	.+166    	; 0x6c8 <Model_setmodeStateData>
     622:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <ManualModeState>
			Model_setmanualModeStateData(ManualModeState);
     626:	4a d0       	rcall	.+148    	; 0x6bc <Model_setmanualModeStateData>
     628:	37 c0       	rjmp	.+110    	; 0x698 <Listener_UART0_eventCheck+0x14c>
			return;
     62a:	69 e8       	ldi	r22, 0x89	; 137
		}
		if(!(strcmp(Rxstring,"Auto Mode\n"))){
     62c:	71 e0       	ldi	r23, 0x01	; 1
     62e:	ce 01       	movw	r24, r28
     630:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     634:	89 2b       	or	r24, r25
     636:	a1 f4       	brne	.+40     	; 0x660 <Listener_UART0_eventCheck+0x114>
     638:	81 e0       	ldi	r24, 0x01	; 1
			ModeState = AutoState;
     63a:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <ModeState>
     63e:	44 d0       	rcall	.+136    	; 0x6c8 <Model_setmodeStateData>
			Model_setmodeStateData(ModeState);
     640:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <UltraSonicOnOffFlag>
			UltraSonicOnOffFlag = (UltraSonicOnOffFlag+1)%2;
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	01 96       	adiw	r24, 0x01	; 1
     648:	81 70       	andi	r24, 0x01	; 1
     64a:	90 78       	andi	r25, 0x80	; 128
     64c:	99 23       	and	r25, r25
     64e:	24 f4       	brge	.+8      	; 0x658 <Listener_UART0_eventCheck+0x10c>
     650:	01 97       	sbiw	r24, 0x01	; 1
     652:	8e 6f       	ori	r24, 0xFE	; 254
     654:	9f 6f       	ori	r25, 0xFF	; 255
     656:	01 96       	adiw	r24, 0x01	; 1
     658:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <UltraSonicOnOffFlag>
			Model_setUltraSonicOnOffFlagData(UltraSonicOnOffFlag);
     65c:	67 d0       	rcall	.+206    	; 0x72c <Model_setUltraSonicOnOffFlagData>
			return;
     65e:	1c c0       	rjmp	.+56     	; 0x698 <Listener_UART0_eventCheck+0x14c>
		}
		if(!(strcmp(Rxstring,"Timer Mode\n"))){
     660:	64 e9       	ldi	r22, 0x94	; 148
     662:	71 e0       	ldi	r23, 0x01	; 1
     664:	ce 01       	movw	r24, r28
     666:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     66a:	89 2b       	or	r24, r25
     66c:	51 f4       	brne	.+20     	; 0x682 <Listener_UART0_eventCheck+0x136>
			ModeState = TimerState;
     66e:	82 e0       	ldi	r24, 0x02	; 2
     670:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <ModeState>
			TimerModeState = Setting;
     674:	10 92 a5 02 	sts	0x02A5, r1	; 0x8002a5 <TimerModeState>
			Model_setmodeStateData(ModeState);
     678:	27 d0       	rcall	.+78     	; 0x6c8 <Model_setmodeStateData>
			Model_settimermodeStateData(TimerModeState);
     67a:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <TimerModeState>
     67e:	44 d0       	rcall	.+136    	; 0x708 <Model_settimermodeStateData>
     680:	0b c0       	rjmp	.+22     	; 0x698 <Listener_UART0_eventCheck+0x14c>
			return;
     682:	60 ea       	ldi	r22, 0xA0	; 160
		}
		if(!(strcmp(Rxstring,"Timer Thirty Min Up\n"))){
     684:	71 e0       	ldi	r23, 0x01	; 1
     686:	ce 01       	movw	r24, r28
     688:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     68c:	89 2b       	or	r24, r25
     68e:	21 f4       	brne	.+8      	; 0x698 <Listener_UART0_eventCheck+0x14c>
     690:	81 e0       	ldi	r24, 0x01	; 1
			TimerModeState = minUp;
     692:	80 93 a5 02 	sts	0x02A5, r24	; 0x8002a5 <TimerModeState>
     696:	38 d0       	rcall	.+112    	; 0x708 <Model_settimermodeStateData>
			Model_settimermodeStateData(TimerModeState);
     698:	df 91       	pop	r29
     69a:	cf 91       	pop	r28
			return;
		}
	}
     69c:	08 95       	ret

0000069e <Model_getbuttonFlagData>:

uint8_t ButtonFlagData;	//ON,OFF

uint8_t Model_getbuttonFlagData(){
	return ButtonFlagData;
}
     69e:	80 91 c3 02 	lds	r24, 0x02C3	; 0x8002c3 <ButtonFlagData>
     6a2:	08 95       	ret

000006a4 <Model_setbuttonFlagData>:
void Model_setbuttonFlagData(uint8_t data){
	ButtonFlagData = data;
     6a4:	80 93 c3 02 	sts	0x02C3, r24	; 0x8002c3 <ButtonFlagData>
     6a8:	08 95       	ret

000006aa <Model_getdeviceStateData>:
uint8_t deviceStateData;	//OFFState,OnState

uint8_t Model_getdeviceStateData()
{
	return deviceStateData;
}
     6aa:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <deviceStateData>
     6ae:	08 95       	ret

000006b0 <Model_setdeviceStateData>:

void Model_setdeviceStateData(uint8_t data)
{
	deviceStateData = data;
     6b0:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <deviceStateData>
     6b4:	08 95       	ret

000006b6 <Model_getmanualModeStateData>:
     6b6:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <manualModeStateData>
     6ba:	08 95       	ret

000006bc <Model_setmanualModeStateData>:
     6bc:	80 93 c5 02 	sts	0x02C5, r24	; 0x8002c5 <manualModeStateData>
     6c0:	08 95       	ret

000006c2 <Model_getmodeStateData>:
uint8_t modeStateData;	//ManualState,AutoState,TimerState 구분

uint8_t Model_getmodeStateData()
{
	return modeStateData;
}
     6c2:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <modeStateData>
     6c6:	08 95       	ret

000006c8 <Model_setmodeStateData>:

void Model_setmodeStateData(uint8_t data)
{
	modeStateData = data;
     6c8:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <modeStateData>
     6cc:	08 95       	ret

000006ce <Model_getTimeClockDatahour>:
     6ce:	80 91 c9 02 	lds	r24, 0x02C9	; 0x8002c9 <TimeClockDatahour>
     6d2:	08 95       	ret

000006d4 <Model_getTimeClockDatamin>:
     6d4:	80 91 ca 02 	lds	r24, 0x02CA	; 0x8002ca <TimeClockDatamin>
     6d8:	08 95       	ret

000006da <Model_getTimeClockDatasec>:
     6da:	80 91 cb 02 	lds	r24, 0x02CB	; 0x8002cb <TimeClockDatasec>
     6de:	08 95       	ret

000006e0 <Model_getTimeClockDataFND>:
     6e0:	80 91 c7 02 	lds	r24, 0x02C7	; 0x8002c7 <TimeClockDataFND>
     6e4:	90 91 c8 02 	lds	r25, 0x02C8	; 0x8002c8 <TimeClockDataFND+0x1>
     6e8:	08 95       	ret

000006ea <Model_setTimeClockData>:
     6ea:	80 93 c9 02 	sts	0x02C9, r24	; 0x8002c9 <TimeClockDatahour>
     6ee:	60 93 ca 02 	sts	0x02CA, r22	; 0x8002ca <TimeClockDatamin>
     6f2:	40 93 cb 02 	sts	0x02CB, r20	; 0x8002cb <TimeClockDatasec>
     6f6:	08 95       	ret

000006f8 <Model_setTimeClockDataFND>:
     6f8:	90 93 c8 02 	sts	0x02C8, r25	; 0x8002c8 <TimeClockDataFND+0x1>
     6fc:	80 93 c7 02 	sts	0x02C7, r24	; 0x8002c7 <TimeClockDataFND>
     700:	08 95       	ret

00000702 <Model_gettimermodeStateData>:
     702:	80 91 cc 02 	lds	r24, 0x02CC	; 0x8002cc <timerModeStateData>
     706:	08 95       	ret

00000708 <Model_settimermodeStateData>:
     708:	80 93 cc 02 	sts	0x02CC, r24	; 0x8002cc <timerModeStateData>
     70c:	08 95       	ret

0000070e <Model_gettimermodeFlagData>:
     70e:	80 91 cd 02 	lds	r24, 0x02CD	; 0x8002cd <timerModeFlagData>
     712:	08 95       	ret

00000714 <Model_settimermodeFlagData>:
     714:	80 93 cd 02 	sts	0x02CD, r24	; 0x8002cd <timerModeFlagData>
     718:	08 95       	ret

0000071a <Model_getUltraSonicFlagData>:
uint8_t ultraSonicFlagData, UltraSonicOnOffFlag;		//Detecting (감지중) StandBy (준비중)

uint8_t Model_getUltraSonicFlagData()
{
	return ultraSonicFlagData;
}
     71a:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <ultraSonicFlagData>
     71e:	08 95       	ret

00000720 <Model_setUltraSonicFlagData>:

void Model_setUltraSonicFlagData(uint8_t data)
{
	ultraSonicFlagData = data;
     720:	80 93 ce 02 	sts	0x02CE, r24	; 0x8002ce <ultraSonicFlagData>
     724:	08 95       	ret

00000726 <Model_getUltraSonicOnOffFlagData>:
}

uint8_t Model_getUltraSonicOnOffFlagData()
{
	return UltraSonicOnOffFlag;
}
     726:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <UltraSonicOnOffFlag>
     72a:	08 95       	ret

0000072c <Model_setUltraSonicOnOffFlagData>:

void Model_setUltraSonicOnOffFlagData(uint8_t data)
{
	UltraSonicOnOffFlag = data;
     72c:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <UltraSonicOnOffFlag>
     730:	08 95       	ret

00000732 <presenter_init>:
char buff_POWER[30];
uint8_t DeviceState, ModeState, ManualModeState, TimerModeState;
uint8_t ButttonFlag, UltraSonicOnOffFlag;

void presenter_init(){
	FND_init();
     732:	c6 d4       	rcall	.+2444   	; 0x10c0 <FND_init>
	LCD_init(); //GPIO
     734:	6a d6       	rcall	.+3284   	; 0x140a <LCD_init>
	LCD_I2C_init();
     736:	1e d7       	rcall	.+3644   	; 0x1574 <LCD_I2C_init>
     738:	a8 c4       	rjmp	.+2384   	; 0x108a <Buzzer_init>
	Buzzer_init();
     73a:	08 95       	ret

0000073c <Button_buzzer>:
     73c:	cf 92       	push	r12
     73e:	df 92       	push	r13
}

void Button_buzzer(){
     740:	ef 92       	push	r14
     742:	ff 92       	push	r15
	ButttonFlag =  Model_getbuttonFlagData();
     744:	ac df       	rcall	.-168    	; 0x69e <Model_getbuttonFlagData>
     746:	80 93 ad 02 	sts	0x02AD, r24	; 0x8002ad <ButttonFlag>
	static uint32_t prevTime = 0;
	uint32_t curTime = getTick();
     74a:	6c d4       	rcall	.+2264   	; 0x1024 <getTick>
     74c:	6b 01       	movw	r12, r22
     74e:	7c 01       	movw	r14, r24
     750:	80 91 ad 02 	lds	r24, 0x02AD	; 0x8002ad <ButttonFlag>
	if(ButttonFlag==On){
     754:	81 11       	cpse	r24, r1
     756:	24 c0       	rjmp	.+72     	; 0x7a0 <Button_buzzer+0x64>
		Buzzer_soundOn();
     758:	ab d4       	rcall	.+2390   	; 0x10b0 <Buzzer_soundOn>
		Buzzer_makeduty(2);
     75a:	82 e0       	ldi	r24, 0x02	; 2
     75c:	a2 d4       	rcall	.+2372   	; 0x10a2 <Buzzer_makeduty>
     75e:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <__data_end>
		if(curTime-prevTime < 300) return;		//0.3초동안 소리
     762:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <__data_end+0x1>
     766:	a0 91 92 02 	lds	r26, 0x0292	; 0x800292 <__data_end+0x2>
     76a:	b0 91 93 02 	lds	r27, 0x0293	; 0x800293 <__data_end+0x3>
     76e:	a7 01       	movw	r20, r14
     770:	96 01       	movw	r18, r12
     772:	28 1b       	sub	r18, r24
     774:	39 0b       	sbc	r19, r25
     776:	4a 0b       	sbc	r20, r26
     778:	5b 0b       	sbc	r21, r27
     77a:	da 01       	movw	r26, r20
     77c:	c9 01       	movw	r24, r18
     77e:	8c 32       	cpi	r24, 0x2C	; 44
     780:	91 40       	sbci	r25, 0x01	; 1
     782:	a1 05       	cpc	r26, r1
     784:	b1 05       	cpc	r27, r1
     786:	c8 f0       	brcs	.+50     	; 0x7ba <Button_buzzer+0x7e>
     788:	c0 92 90 02 	sts	0x0290, r12	; 0x800290 <__data_end>
		prevTime = curTime;
     78c:	d0 92 91 02 	sts	0x0291, r13	; 0x800291 <__data_end+0x1>
     790:	e0 92 92 02 	sts	0x0292, r14	; 0x800292 <__data_end+0x2>
     794:	f0 92 93 02 	sts	0x0293, r15	; 0x800293 <__data_end+0x3>
		ButttonFlag = Off;
     798:	81 e0       	ldi	r24, 0x01	; 1
     79a:	80 93 ad 02 	sts	0x02AD, r24	; 0x8002ad <ButttonFlag>
		Model_setbuttonFlagData(ButttonFlag);
     79e:	82 df       	rcall	.-252    	; 0x6a4 <Model_setbuttonFlagData>
     7a0:	80 91 ad 02 	lds	r24, 0x02AD	; 0x8002ad <ButttonFlag>
	}
	if(ButttonFlag==Off){
     7a4:	81 30       	cpi	r24, 0x01	; 1
     7a6:	49 f4       	brne	.+18     	; 0x7ba <Button_buzzer+0x7e>
     7a8:	c0 92 90 02 	sts	0x0290, r12	; 0x800290 <__data_end>
		prevTime = curTime;
     7ac:	d0 92 91 02 	sts	0x0291, r13	; 0x800291 <__data_end+0x1>
     7b0:	e0 92 92 02 	sts	0x0292, r14	; 0x800292 <__data_end+0x2>
     7b4:	f0 92 93 02 	sts	0x0293, r15	; 0x800293 <__data_end+0x3>
		Buzzer_soundOff();
     7b8:	7f d4       	rcall	.+2302   	; 0x10b8 <Buzzer_soundOff>
     7ba:	ff 90       	pop	r15
	}
}
     7bc:	ef 90       	pop	r14
     7be:	df 90       	pop	r13
     7c0:	cf 90       	pop	r12
     7c2:	08 95       	ret

000007c4 <Fan_ManualMode_presenter>:
     7c4:	78 df       	rcall	.-272    	; 0x6b6 <Model_getmanualModeStateData>
		break;
	}
}
void Fan_ManualMode_presenter()
{
	ManualModeState = Model_getmanualModeStateData();
     7c6:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <ManualModeState>
	
	switch(ManualModeState)
     7ca:	81 30       	cpi	r24, 0x01	; 1
     7cc:	e1 f0       	breq	.+56     	; 0x806 <Fan_ManualMode_presenter+0x42>
     7ce:	18 f0       	brcs	.+6      	; 0x7d6 <Fan_ManualMode_presenter+0x12>
     7d0:	82 30       	cpi	r24, 0x02	; 2
     7d2:	89 f1       	breq	.+98     	; 0x836 <Fan_ManualMode_presenter+0x72>
     7d4:	08 95       	ret
	{
		case SlowState:
		if(strcmp(buff_POWER,"Slow Speed"))
     7d6:	6b e2       	ldi	r22, 0x2B	; 43
     7d8:	72 e0       	ldi	r23, 0x02	; 2
     7da:	8b e0       	ldi	r24, 0x0B	; 11
     7dc:	93 e0       	ldi	r25, 0x03	; 3
     7de:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     7e2:	89 2b       	or	r24, r25
		{
			LCD_displayClear();
     7e4:	09 f0       	breq	.+2      	; 0x7e8 <Fan_ManualMode_presenter+0x24>
     7e6:	67 d6       	rcall	.+3278   	; 0x14b6 <LCD_displayClear>
		}
		sprintf(buff_POWER,"Slow Speed");
     7e8:	8b e0       	ldi	r24, 0x0B	; 11
     7ea:	eb e2       	ldi	r30, 0x2B	; 43
     7ec:	f2 e0       	ldi	r31, 0x02	; 2
     7ee:	ab e0       	ldi	r26, 0x0B	; 11
     7f0:	b3 e0       	ldi	r27, 0x03	; 3
     7f2:	01 90       	ld	r0, Z+
     7f4:	0d 92       	st	X+, r0
     7f6:	8a 95       	dec	r24
     7f8:	e1 f7       	brne	.-8      	; 0x7f2 <Fan_ManualMode_presenter+0x2e>
		LCD_writeStringXY(0,3,buff_POWER);
     7fa:	4b e0       	ldi	r20, 0x0B	; 11
     7fc:	53 e0       	ldi	r21, 0x03	; 3
     7fe:	63 e0       	ldi	r22, 0x03	; 3
     800:	80 e0       	ldi	r24, 0x00	; 0
     802:	50 c6       	rjmp	.+3232   	; 0x14a4 <LCD_writeStringXY>
		break;
     804:	08 95       	ret
		
		case MiddleState:
		if(strcmp(buff_POWER,"Middle Speed"))
     806:	62 e4       	ldi	r22, 0x42	; 66
     808:	72 e0       	ldi	r23, 0x02	; 2
     80a:	8b e0       	ldi	r24, 0x0B	; 11
     80c:	93 e0       	ldi	r25, 0x03	; 3
     80e:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     812:	89 2b       	or	r24, r25
		{
			LCD_displayClear();
     814:	09 f0       	breq	.+2      	; 0x818 <Fan_ManualMode_presenter+0x54>
     816:	4f d6       	rcall	.+3230   	; 0x14b6 <LCD_displayClear>
		}
		sprintf(buff_POWER,"Middle Speed");
     818:	8d e0       	ldi	r24, 0x0D	; 13
     81a:	e2 e4       	ldi	r30, 0x42	; 66
     81c:	f2 e0       	ldi	r31, 0x02	; 2
     81e:	ab e0       	ldi	r26, 0x0B	; 11
     820:	b3 e0       	ldi	r27, 0x03	; 3
     822:	01 90       	ld	r0, Z+
     824:	0d 92       	st	X+, r0
     826:	8a 95       	dec	r24
     828:	e1 f7       	brne	.-8      	; 0x822 <Fan_ManualMode_presenter+0x5e>
		LCD_writeStringXY(0,2,buff_POWER);
     82a:	4b e0       	ldi	r20, 0x0B	; 11
     82c:	53 e0       	ldi	r21, 0x03	; 3
     82e:	62 e0       	ldi	r22, 0x02	; 2
     830:	80 e0       	ldi	r24, 0x00	; 0
     832:	38 c6       	rjmp	.+3184   	; 0x14a4 <LCD_writeStringXY>
		break;
     834:	08 95       	ret
		
		case FastState:
		if(strcmp(buff_POWER,"Fast Speed"))
     836:	6b e5       	ldi	r22, 0x5B	; 91
     838:	72 e0       	ldi	r23, 0x02	; 2
     83a:	8b e0       	ldi	r24, 0x0B	; 11
     83c:	93 e0       	ldi	r25, 0x03	; 3
     83e:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     842:	89 2b       	or	r24, r25
		{
			LCD_displayClear();
     844:	09 f0       	breq	.+2      	; 0x848 <Fan_ManualMode_presenter+0x84>
     846:	37 d6       	rcall	.+3182   	; 0x14b6 <LCD_displayClear>
		}
		sprintf(buff_POWER,"Fast Speed");
     848:	8b e0       	ldi	r24, 0x0B	; 11
     84a:	eb e5       	ldi	r30, 0x5B	; 91
     84c:	f2 e0       	ldi	r31, 0x02	; 2
     84e:	ab e0       	ldi	r26, 0x0B	; 11
     850:	b3 e0       	ldi	r27, 0x03	; 3
     852:	01 90       	ld	r0, Z+
     854:	0d 92       	st	X+, r0
     856:	8a 95       	dec	r24
		LCD_writeStringXY(0,3,buff_POWER);
     858:	e1 f7       	brne	.-8      	; 0x852 <Fan_ManualMode_presenter+0x8e>
     85a:	4b e0       	ldi	r20, 0x0B	; 11
     85c:	53 e0       	ldi	r21, 0x03	; 3
     85e:	63 e0       	ldi	r22, 0x03	; 3
     860:	80 e0       	ldi	r24, 0x00	; 0
     862:	20 c6       	rjmp	.+3136   	; 0x14a4 <LCD_writeStringXY>
     864:	08 95       	ret

00000866 <Fan_Mode_presenter>:
	}
}

void Fan_Mode_presenter()
{
	uint16_t TimeClockFND = Model_getTimeClockDataFND();	//FND
     866:	3c df       	rcall	.-392    	; 0x6e0 <Model_getTimeClockDataFND>
	uint8_t TimeClockhour = Model_getTimeClockDatahour();	//hour
     868:	32 df       	rcall	.-412    	; 0x6ce <Model_getTimeClockDatahour>
	uint8_t TimeClockmin = Model_getTimeClockDatamin();		//min
     86a:	34 df       	rcall	.-408    	; 0x6d4 <Model_getTimeClockDatamin>
	uint8_t TimeClocksec = Model_getTimeClockDatasec();		//sec
     86c:	36 df       	rcall	.-404    	; 0x6da <Model_getTimeClockDatasec>
	DeviceState = Model_getdeviceStateData();	//ON,OFF
     86e:	1d df       	rcall	.-454    	; 0x6aa <Model_getdeviceStateData>
     870:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <DeviceState>
     874:	26 df       	rcall	.-436    	; 0x6c2 <Model_getmodeStateData>
	
	ModeState = Model_getmodeStateData();	//Mode
     876:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <ModeState>
     87a:	81 30       	cpi	r24, 0x01	; 1
     87c:	19 f1       	breq	.+70     	; 0x8c4 <Fan_Mode_presenter+0x5e>
	
	switch(ModeState)
     87e:	38 f0       	brcs	.+14     	; 0x88e <Fan_Mode_presenter+0x28>
     880:	82 30       	cpi	r24, 0x02	; 2
     882:	09 f4       	brne	.+2      	; 0x886 <Fan_Mode_presenter+0x20>
     884:	3a c0       	rjmp	.+116    	; 0x8fa <Fan_Mode_presenter+0x94>
     886:	83 30       	cpi	r24, 0x03	; 3
     888:	09 f4       	brne	.+2      	; 0x88c <Fan_Mode_presenter+0x26>
     88a:	52 c0       	rjmp	.+164    	; 0x930 <Fan_Mode_presenter+0xca>
     88c:	08 95       	ret
     88e:	65 eb       	ldi	r22, 0xB5	; 181
     890:	71 e0       	ldi	r23, 0x01	; 1
	{
		case ManualState:
		if(strcmp(buff_MODE,"Manual"))	//출력이 Manual 다를때 LCD Clear
     892:	89 e2       	ldi	r24, 0x29	; 41
     894:	93 e0       	ldi	r25, 0x03	; 3
     896:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     89a:	89 2b       	or	r24, r25
     89c:	09 f0       	breq	.+2      	; 0x8a0 <Fan_Mode_presenter+0x3a>
     89e:	c5 d6       	rcall	.+3466   	; 0x162a <LCD_I2C_displayClear>
		{
			LCD_I2C_displayClear();
     8a0:	87 e0       	ldi	r24, 0x07	; 7
     8a2:	e5 eb       	ldi	r30, 0xB5	; 181
		}
		sprintf(buff_MODE,"Manual");
     8a4:	f1 e0       	ldi	r31, 0x01	; 1
     8a6:	a9 e2       	ldi	r26, 0x29	; 41
     8a8:	b3 e0       	ldi	r27, 0x03	; 3
     8aa:	01 90       	ld	r0, Z+
     8ac:	0d 92       	st	X+, r0
     8ae:	8a 95       	dec	r24
     8b0:	e1 f7       	brne	.-8      	; 0x8aa <Fan_Mode_presenter+0x44>
     8b2:	49 e2       	ldi	r20, 0x29	; 41
		LCD_I2C_writeStringXY(1,5,buff_MODE);
     8b4:	53 e0       	ldi	r21, 0x03	; 3
     8b6:	65 e0       	ldi	r22, 0x05	; 5
     8b8:	70 e0       	ldi	r23, 0x00	; 0
     8ba:	81 e0       	ldi	r24, 0x01	; 1
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	ac d6       	rcall	.+3416   	; 0x1618 <LCD_I2C_writeStringXY>
     8c0:	81 cf       	rjmp	.-254    	; 0x7c4 <Fan_ManualMode_presenter>
		Fan_ManualMode_presenter();
     8c2:	08 95       	ret
     8c4:	6c eb       	ldi	r22, 0xBC	; 188
		break;
		
		case AutoState:
		if(strcmp(buff_MODE,"Auto"))	//출력이 Auto와 다를때 LCD Clear
     8c6:	71 e0       	ldi	r23, 0x01	; 1
     8c8:	89 e2       	ldi	r24, 0x29	; 41
     8ca:	93 e0       	ldi	r25, 0x03	; 3
     8cc:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     8d0:	89 2b       	or	r24, r25
     8d2:	11 f0       	breq	.+4      	; 0x8d8 <Fan_Mode_presenter+0x72>
		{
			LCD_I2C_displayClear();
     8d4:	aa d6       	rcall	.+3412   	; 0x162a <LCD_I2C_displayClear>
     8d6:	ef d5       	rcall	.+3038   	; 0x14b6 <LCD_displayClear>
			LCD_displayClear();
     8d8:	85 e0       	ldi	r24, 0x05	; 5
     8da:	ec eb       	ldi	r30, 0xBC	; 188
		}
		sprintf(buff_MODE,"Auto");
     8dc:	f1 e0       	ldi	r31, 0x01	; 1
     8de:	a9 e2       	ldi	r26, 0x29	; 41
     8e0:	b3 e0       	ldi	r27, 0x03	; 3
     8e2:	01 90       	ld	r0, Z+
     8e4:	0d 92       	st	X+, r0
     8e6:	8a 95       	dec	r24
     8e8:	e1 f7       	brne	.-8      	; 0x8e2 <Fan_Mode_presenter+0x7c>
     8ea:	49 e2       	ldi	r20, 0x29	; 41
		LCD_I2C_writeStringXY(1,6,buff_MODE);
     8ec:	53 e0       	ldi	r21, 0x03	; 3
     8ee:	66 e0       	ldi	r22, 0x06	; 6
     8f0:	70 e0       	ldi	r23, 0x00	; 0
     8f2:	81 e0       	ldi	r24, 0x01	; 1
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	90 c6       	rjmp	.+3360   	; 0x1618 <LCD_I2C_writeStringXY>
		break;
     8f8:	08 95       	ret
		
		case TimerState:
		if(strcmp(buff_MODE,"Timer"))	//출력이 Timer와 다를때 LCD Clear
     8fa:	61 ec       	ldi	r22, 0xC1	; 193
     8fc:	71 e0       	ldi	r23, 0x01	; 1
     8fe:	89 e2       	ldi	r24, 0x29	; 41
     900:	93 e0       	ldi	r25, 0x03	; 3
     902:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     906:	89 2b       	or	r24, r25
     908:	11 f0       	breq	.+4      	; 0x90e <Fan_Mode_presenter+0xa8>
		{
			LCD_I2C_displayClear();
     90a:	8f d6       	rcall	.+3358   	; 0x162a <LCD_I2C_displayClear>
     90c:	d4 d5       	rcall	.+2984   	; 0x14b6 <LCD_displayClear>
			LCD_displayClear();
     90e:	86 e0       	ldi	r24, 0x06	; 6
     910:	e1 ec       	ldi	r30, 0xC1	; 193
		}
		sprintf(buff_MODE,"Timer");
     912:	f1 e0       	ldi	r31, 0x01	; 1
     914:	a9 e2       	ldi	r26, 0x29	; 41
     916:	b3 e0       	ldi	r27, 0x03	; 3
     918:	01 90       	ld	r0, Z+
     91a:	0d 92       	st	X+, r0
     91c:	8a 95       	dec	r24
     91e:	e1 f7       	brne	.-8      	; 0x918 <Fan_Mode_presenter+0xb2>
     920:	49 e2       	ldi	r20, 0x29	; 41
		LCD_I2C_writeStringXY(1,5,buff_MODE);
     922:	53 e0       	ldi	r21, 0x03	; 3
     924:	65 e0       	ldi	r22, 0x05	; 5
     926:	70 e0       	ldi	r23, 0x00	; 0
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	75 c6       	rjmp	.+3306   	; 0x1618 <LCD_I2C_writeStringXY>
		break;
     92e:	08 95       	ret
		
		case WarningState:
		if(strcmp(buff_MODE,"Warning"))	//출력이 Auto와 다를때 LCD Clear
     930:	67 ec       	ldi	r22, 0xC7	; 199
     932:	71 e0       	ldi	r23, 0x01	; 1
     934:	89 e2       	ldi	r24, 0x29	; 41
     936:	93 e0       	ldi	r25, 0x03	; 3
     938:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     93c:	89 2b       	or	r24, r25
     93e:	11 f0       	breq	.+4      	; 0x944 <Fan_Mode_presenter+0xde>
		{
			LCD_I2C_displayClear();
     940:	74 d6       	rcall	.+3304   	; 0x162a <LCD_I2C_displayClear>
     942:	b9 d5       	rcall	.+2930   	; 0x14b6 <LCD_displayClear>
			LCD_displayClear();
     944:	88 e0       	ldi	r24, 0x08	; 8
		}
		sprintf(buff_MODE,"Warning");
     946:	e7 ec       	ldi	r30, 0xC7	; 199
     948:	f1 e0       	ldi	r31, 0x01	; 1
     94a:	a9 e2       	ldi	r26, 0x29	; 41
     94c:	b3 e0       	ldi	r27, 0x03	; 3
     94e:	01 90       	ld	r0, Z+
     950:	0d 92       	st	X+, r0
     952:	8a 95       	dec	r24
     954:	e1 f7       	brne	.-8      	; 0x94e <Fan_Mode_presenter+0xe8>
     956:	49 e2       	ldi	r20, 0x29	; 41
		LCD_I2C_writeStringXY(1,6,buff_MODE);
     958:	53 e0       	ldi	r21, 0x03	; 3
     95a:	66 e0       	ldi	r22, 0x06	; 6
     95c:	70 e0       	ldi	r23, 0x00	; 0
     95e:	81 e0       	ldi	r24, 0x01	; 1
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	5a c6       	rjmp	.+3252   	; 0x1618 <LCD_I2C_writeStringXY>
     964:	08 95       	ret

00000966 <Fan_presenter>:
     966:	ff 92       	push	r15
     968:	0f 93       	push	r16
		Buzzer_soundOff();
	}
}

void Fan_presenter()
{
     96a:	1f 93       	push	r17
     96c:	cf 93       	push	r28
     96e:	df 93       	push	r29
	uint16_t TimeClockFND = Model_getTimeClockDataFND();	//FND
     970:	b7 de       	rcall	.-658    	; 0x6e0 <Model_getTimeClockDataFND>
     972:	ec 01       	movw	r28, r24
	uint8_t TimeClockhour = Model_getTimeClockDatahour();	//hour
     974:	ac de       	rcall	.-680    	; 0x6ce <Model_getTimeClockDatahour>
     976:	18 2f       	mov	r17, r24
	uint8_t TimeClockmin = Model_getTimeClockDatamin();		//min
     978:	ad de       	rcall	.-678    	; 0x6d4 <Model_getTimeClockDatamin>
     97a:	08 2f       	mov	r16, r24
	uint8_t TimeClocksec = Model_getTimeClockDatasec();		//sec
     97c:	ae de       	rcall	.-676    	; 0x6da <Model_getTimeClockDatasec>
     97e:	f8 2e       	mov	r15, r24
	DeviceState = Model_getdeviceStateData();	//ON,OFF
     980:	94 de       	rcall	.-728    	; 0x6aa <Model_getdeviceStateData>
     982:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <DeviceState>
	UltraSonicOnOffFlag = Model_getUltraSonicOnOffFlagData(); //초음파 센서 On, Off
     986:	cf de       	rcall	.-610    	; 0x726 <Model_getUltraSonicOnOffFlagData>
     988:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <UltraSonicOnOffFlag>
     98c:	d7 de       	rcall	.-594    	; 0x73c <Button_buzzer>
	
	Button_buzzer();
     98e:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <UltraSonicOnOffFlag>
	
	if(UltraSonicOnOffFlag == NONAPPLY)
     992:	81 30       	cpi	r24, 0x01	; 1
     994:	e1 f4       	brne	.+56     	; 0x9ce <Fan_presenter+0x68>
     996:	6f ec       	ldi	r22, 0xCF	; 207
     998:	71 e0       	ldi	r23, 0x01	; 1
	{
		if(strcmp(buff_NAME, "Smart IOT Fan"))
     99a:	8f ec       	ldi	r24, 0xCF	; 207
     99c:	92 e0       	ldi	r25, 0x02	; 2
     99e:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     9a2:	89 2b       	or	r24, r25
     9a4:	11 f0       	breq	.+4      	; 0x9aa <Fan_presenter+0x44>
		{
			LCD_I2C_displayClear();
     9a6:	41 d6       	rcall	.+3202   	; 0x162a <LCD_I2C_displayClear>
     9a8:	86 d5       	rcall	.+2828   	; 0x14b6 <LCD_displayClear>
			LCD_displayClear();
     9aa:	8e e0       	ldi	r24, 0x0E	; 14
     9ac:	ef ec       	ldi	r30, 0xCF	; 207
		}
		sprintf(buff_NAME,"Smart IOT Fan");	//LCD_I2C 첫번째 줄 제품명
     9ae:	f1 e0       	ldi	r31, 0x01	; 1
     9b0:	af ec       	ldi	r26, 0xCF	; 207
     9b2:	b2 e0       	ldi	r27, 0x02	; 2
     9b4:	01 90       	ld	r0, Z+
     9b6:	0d 92       	st	X+, r0
     9b8:	8a 95       	dec	r24
     9ba:	e1 f7       	brne	.-8      	; 0x9b4 <Fan_presenter+0x4e>
     9bc:	4f ec       	ldi	r20, 0xCF	; 207
		LCD_I2C_writeStringXY(0,1,buff_NAME);
     9be:	52 e0       	ldi	r21, 0x02	; 2
     9c0:	61 e0       	ldi	r22, 0x01	; 1
     9c2:	70 e0       	ldi	r23, 0x00	; 0
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	27 d6       	rcall	.+3150   	; 0x1618 <LCD_I2C_writeStringXY>
     9ca:	ce 01       	movw	r24, r28
     9cc:	ba d4       	rcall	.+2420   	; 0x1342 <FND_setFndData>
		FND_setFndData(TimeClockFND);	//FND 출력
     9ce:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <UltraSonicOnOffFlag>
     9d2:	81 11       	cpse	r24, r1
	}
	if(UltraSonicOnOffFlag == APPLY)
     9d4:	1c c0       	rjmp	.+56     	; 0xa0e <Fan_presenter+0xa8>
     9d6:	6d ed       	ldi	r22, 0xDD	; 221
	{
		if(strcmp(buff_NAME, "*Smart IOT Fan*"))
     9d8:	71 e0       	ldi	r23, 0x01	; 1
     9da:	8f ec       	ldi	r24, 0xCF	; 207
     9dc:	92 e0       	ldi	r25, 0x02	; 2
     9de:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     9e2:	89 2b       	or	r24, r25
     9e4:	11 f0       	breq	.+4      	; 0x9ea <Fan_presenter+0x84>
     9e6:	21 d6       	rcall	.+3138   	; 0x162a <LCD_I2C_displayClear>
		{
			LCD_I2C_displayClear();
     9e8:	66 d5       	rcall	.+2764   	; 0x14b6 <LCD_displayClear>
     9ea:	80 e1       	ldi	r24, 0x10	; 16
			LCD_displayClear();
     9ec:	ed ed       	ldi	r30, 0xDD	; 221
     9ee:	f1 e0       	ldi	r31, 0x01	; 1
		}
		sprintf(buff_NAME,"*Smart IOT Fan*");	//LCD_I2C 첫번째 줄 제품명
     9f0:	af ec       	ldi	r26, 0xCF	; 207
     9f2:	b2 e0       	ldi	r27, 0x02	; 2
     9f4:	01 90       	ld	r0, Z+
     9f6:	0d 92       	st	X+, r0
     9f8:	8a 95       	dec	r24
     9fa:	e1 f7       	brne	.-8      	; 0x9f4 <Fan_presenter+0x8e>
     9fc:	4f ec       	ldi	r20, 0xCF	; 207
		LCD_I2C_writeStringXY(0,1,buff_NAME);
     9fe:	52 e0       	ldi	r21, 0x02	; 2
     a00:	61 e0       	ldi	r22, 0x01	; 1
     a02:	70 e0       	ldi	r23, 0x00	; 0
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	07 d6       	rcall	.+3086   	; 0x1618 <LCD_I2C_writeStringXY>
     a0a:	ce 01       	movw	r24, r28
     a0c:	9a d4       	rcall	.+2356   	; 0x1342 <FND_setFndData>
		FND_setFndData(TimeClockFND);	//FND 출력
     a0e:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <DeviceState>
     a12:	88 23       	and	r24, r24
	}
	
	switch(DeviceState){
     a14:	19 f0       	breq	.+6      	; 0xa1c <Fan_presenter+0xb6>
     a16:	81 30       	cpi	r24, 0x01	; 1
     a18:	f9 f0       	breq	.+62     	; 0xa58 <Fan_presenter+0xf2>
     a1a:	3c c0       	rjmp	.+120    	; 0xa94 <Fan_presenter+0x12e>
     a1c:	6b e1       	ldi	r22, 0x1B	; 27
		case OFFState:
		if(strcmp(buff_MODE,"OFF"))		//출력이 OFF와 다를때 LCD Clear
     a1e:	72 e0       	ldi	r23, 0x02	; 2
     a20:	89 e2       	ldi	r24, 0x29	; 41
     a22:	93 e0       	ldi	r25, 0x03	; 3
     a24:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     a28:	89 2b       	or	r24, r25
     a2a:	11 f0       	breq	.+4      	; 0xa30 <Fan_presenter+0xca>
     a2c:	fe d5       	rcall	.+3068   	; 0x162a <LCD_I2C_displayClear>
		{
			LCD_I2C_displayClear();
     a2e:	43 d5       	rcall	.+2694   	; 0x14b6 <LCD_displayClear>
     a30:	e9 e2       	ldi	r30, 0x29	; 41
			LCD_displayClear();
     a32:	f3 e0       	ldi	r31, 0x03	; 3
		}
		sprintf(buff_MODE,"OFF");
     a34:	8f e4       	ldi	r24, 0x4F	; 79
     a36:	96 e4       	ldi	r25, 0x46	; 70
     a38:	91 83       	std	Z+1, r25	; 0x01
     a3a:	80 83       	st	Z, r24
     a3c:	86 e4       	ldi	r24, 0x46	; 70
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	93 83       	std	Z+3, r25	; 0x03
     a42:	82 83       	std	Z+2, r24	; 0x02
     a44:	af 01       	movw	r20, r30
		LCD_I2C_writeStringXY(1,7,buff_MODE);	//LCD_I2C 두번째 줄 OFF-Mode(ON)
     a46:	67 e0       	ldi	r22, 0x07	; 7
     a48:	70 e0       	ldi	r23, 0x00	; 0
     a4a:	81 e0       	ldi	r24, 0x01	; 1
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	e4 d5       	rcall	.+3016   	; 0x1618 <LCD_I2C_writeStringXY>
     a50:	82 e3       	ldi	r24, 0x32	; 50
     a52:	90 e0       	ldi	r25, 0x00	; 0
		LED_Alloff(&LED_PORT);
     a54:	ed d5       	rcall	.+3034   	; 0x1630 <LED_Alloff>
     a56:	1e c0       	rjmp	.+60     	; 0xa94 <Fan_presenter+0x12e>
     a58:	1f 92       	push	r1
     a5a:	ff 92       	push	r15
		break;
     a5c:	1f 92       	push	r1
		
		case OnState:
		sprintf(buff_TIMER,"%02d:%02d:%02d",TimeClockhour,TimeClockmin,TimeClocksec);	//LCD 두번째 줄 Timer시간
     a5e:	0f 93       	push	r16
     a60:	1f 92       	push	r1
     a62:	1f 93       	push	r17
     a64:	8d ee       	ldi	r24, 0xED	; 237
     a66:	91 e0       	ldi	r25, 0x01	; 1
     a68:	9f 93       	push	r25
     a6a:	8f 93       	push	r24
     a6c:	8d ee       	ldi	r24, 0xED	; 237
     a6e:	92 e0       	ldi	r25, 0x02	; 2
     a70:	9f 93       	push	r25
     a72:	8f 93       	push	r24
     a74:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <sprintf>
     a78:	4d ee       	ldi	r20, 0xED	; 237
		LCD_writeStringXY(1,4,buff_TIMER);
     a7a:	52 e0       	ldi	r21, 0x02	; 2
     a7c:	64 e0       	ldi	r22, 0x04	; 4
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	11 d5       	rcall	.+2594   	; 0x14a4 <LCD_writeStringXY>
     a82:	f1 de       	rcall	.-542    	; 0x866 <Fan_Mode_presenter>
     a84:	8d b7       	in	r24, 0x3d	; 61
		Fan_Mode_presenter();
     a86:	9e b7       	in	r25, 0x3e	; 62
     a88:	0a 96       	adiw	r24, 0x0a	; 10
		break;
     a8a:	0f b6       	in	r0, 0x3f	; 63
     a8c:	f8 94       	cli
     a8e:	9e bf       	out	0x3e, r25	; 62
     a90:	0f be       	out	0x3f, r0	; 63
     a92:	8d bf       	out	0x3d, r24	; 61
     a94:	df 91       	pop	r29
     a96:	cf 91       	pop	r28
     a98:	1f 91       	pop	r17
	}
}
     a9a:	0f 91       	pop	r16
     a9c:	ff 90       	pop	r15
     a9e:	08 95       	ret

00000aa0 <Fan_UART0_presenter>:
     aa0:	cf 93       	push	r28
     aa2:	df 93       	push	r29
     aa4:	02 de       	rcall	.-1020   	; 0x6aa <Model_getdeviceStateData>
	}
}

void Fan_UART0_presenter()
{
	DeviceState = Model_getdeviceStateData();
     aa6:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <DeviceState>
	ModeState = Model_getmodeStateData();
     aaa:	0b de       	rcall	.-1002   	; 0x6c2 <Model_getmodeStateData>
     aac:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <ModeState>
	ManualModeState = Model_getmanualModeStateData();
     ab0:	02 de       	rcall	.-1020   	; 0x6b6 <Model_getmanualModeStateData>
     ab2:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <ManualModeState>
	TimerModeState = Model_gettimermodeStateData();
     ab6:	25 de       	rcall	.-950    	; 0x702 <Model_gettimermodeStateData>
     ab8:	80 93 a5 02 	sts	0x02A5, r24	; 0x8002a5 <TimerModeState>
	
	char * Rxstring = UART0_getRxBuff();
     abc:	2d d7       	rcall	.+3674   	; 0x1918 <UART0_getRxBuff>
     abe:	ec 01       	movw	r28, r24
     ac0:	6a e1       	ldi	r22, 0x1A	; 26
	
	if(!(strcmp(Rxstring,"Smart IOT Fan ON\n"))){
     ac2:	71 e0       	ldi	r23, 0x01	; 1
     ac4:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     ac8:	89 2b       	or	r24, r25
     aca:	51 f4       	brne	.+20     	; 0xae0 <Fan_UART0_presenter+0x40>
     acc:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <DeviceState>
		if(DeviceState==OnState){
     ad0:	81 30       	cpi	r24, 0x01	; 1
     ad2:	09 f0       	breq	.+2      	; 0xad6 <Fan_UART0_presenter+0x36>
     ad4:	75 c0       	rjmp	.+234    	; 0xbc0 <Fan_UART0_presenter+0x120>
     ad6:	8c ef       	ldi	r24, 0xFC	; 252
			printf("Smart IOT Fan ON\n");
     ad8:	91 e0       	ldi	r25, 0x01	; 1
     ada:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
     ade:	70 c0       	rjmp	.+224    	; 0xbc0 <Fan_UART0_presenter+0x120>
     ae0:	6c e2       	ldi	r22, 0x2C	; 44
		}
		return;
	}
	if(!(strcmp(Rxstring,"Smart IOT Fan OFF\n"))){
     ae2:	71 e0       	ldi	r23, 0x01	; 1
     ae4:	ce 01       	movw	r24, r28
     ae6:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     aea:	89 2b       	or	r24, r25
     aec:	49 f4       	brne	.+18     	; 0xb00 <Fan_UART0_presenter+0x60>
     aee:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <DeviceState>
		if(DeviceState==OFFState){
     af2:	81 11       	cpse	r24, r1
     af4:	65 c0       	rjmp	.+202    	; 0xbc0 <Fan_UART0_presenter+0x120>
     af6:	8d e0       	ldi	r24, 0x0D	; 13
			printf("Smart IOT Fan OFF\n");
     af8:	92 e0       	ldi	r25, 0x02	; 2
     afa:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
     afe:	60 c0       	rjmp	.+192    	; 0xbc0 <Fan_UART0_presenter+0x120>
     b00:	6f e3       	ldi	r22, 0x3F	; 63
		}
		return;
	}
	
	if(!(strcmp(Rxstring,"Manual Mode Slow Speed\n"))){
     b02:	71 e0       	ldi	r23, 0x01	; 1
     b04:	ce 01       	movw	r24, r28
     b06:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     b0a:	89 2b       	or	r24, r25
     b0c:	49 f4       	brne	.+18     	; 0xb20 <Fan_UART0_presenter+0x80>
     b0e:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <ManualModeState>
		if(ManualModeState == SlowState){
     b12:	81 11       	cpse	r24, r1
     b14:	55 c0       	rjmp	.+170    	; 0xbc0 <Fan_UART0_presenter+0x120>
     b16:	8f e1       	ldi	r24, 0x1F	; 31
			printf("Manual Mode Slow Speed\n");
     b18:	92 e0       	ldi	r25, 0x02	; 2
     b1a:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
     b1e:	50 c0       	rjmp	.+160    	; 0xbc0 <Fan_UART0_presenter+0x120>
     b20:	67 e5       	ldi	r22, 0x57	; 87
		}
		return;
	}
	if(!(strcmp(Rxstring,"Manual Mode Middle Speed\n"))){
     b22:	71 e0       	ldi	r23, 0x01	; 1
     b24:	ce 01       	movw	r24, r28
     b26:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     b2a:	89 2b       	or	r24, r25
     b2c:	51 f4       	brne	.+20     	; 0xb42 <Fan_UART0_presenter+0xa2>
     b2e:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <ManualModeState>
		if(ManualModeState == MiddleState){
     b32:	81 30       	cpi	r24, 0x01	; 1
     b34:	09 f0       	breq	.+2      	; 0xb38 <Fan_UART0_presenter+0x98>
     b36:	44 c0       	rjmp	.+136    	; 0xbc0 <Fan_UART0_presenter+0x120>
     b38:	86 e3       	ldi	r24, 0x36	; 54
			printf("Manual Mode Middle Speed\n");
     b3a:	92 e0       	ldi	r25, 0x02	; 2
     b3c:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
     b40:	3f c0       	rjmp	.+126    	; 0xbc0 <Fan_UART0_presenter+0x120>
     b42:	61 e7       	ldi	r22, 0x71	; 113
		}
		return;
	}
	if(!(strcmp(Rxstring,"Manual Mode Fast Speed\n"))){
     b44:	71 e0       	ldi	r23, 0x01	; 1
     b46:	ce 01       	movw	r24, r28
     b48:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     b4c:	89 2b       	or	r24, r25
     b4e:	49 f4       	brne	.+18     	; 0xb62 <Fan_UART0_presenter+0xc2>
     b50:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <ManualModeState>
		if(ManualModeState == FastState){
     b54:	82 30       	cpi	r24, 0x02	; 2
     b56:	a1 f5       	brne	.+104    	; 0xbc0 <Fan_UART0_presenter+0x120>
     b58:	8f e4       	ldi	r24, 0x4F	; 79
			printf("Manual Mode Fast Speed\n");
     b5a:	92 e0       	ldi	r25, 0x02	; 2
     b5c:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
     b60:	2f c0       	rjmp	.+94     	; 0xbc0 <Fan_UART0_presenter+0x120>
     b62:	69 e8       	ldi	r22, 0x89	; 137
		}
		return;
	}
	if(!(strcmp(Rxstring,"Auto Mode\n"))){
     b64:	71 e0       	ldi	r23, 0x01	; 1
     b66:	ce 01       	movw	r24, r28
     b68:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     b6c:	89 2b       	or	r24, r25
     b6e:	49 f4       	brne	.+18     	; 0xb82 <Fan_UART0_presenter+0xe2>
     b70:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <ModeState>
		if(ModeState == AutoState){
     b74:	81 30       	cpi	r24, 0x01	; 1
     b76:	21 f5       	brne	.+72     	; 0xbc0 <Fan_UART0_presenter+0x120>
     b78:	86 e6       	ldi	r24, 0x66	; 102
			printf("Auto Mode\n");
     b7a:	92 e0       	ldi	r25, 0x02	; 2
     b7c:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
     b80:	1f c0       	rjmp	.+62     	; 0xbc0 <Fan_UART0_presenter+0x120>
     b82:	64 e9       	ldi	r22, 0x94	; 148
		}
		return;
	}
	if(!(strcmp(Rxstring,"Timer Mode\n"))){
     b84:	71 e0       	ldi	r23, 0x01	; 1
     b86:	ce 01       	movw	r24, r28
     b88:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     b8c:	89 2b       	or	r24, r25
     b8e:	49 f4       	brne	.+18     	; 0xba2 <Fan_UART0_presenter+0x102>
     b90:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <ModeState>
		if((ModeState == TimerState)){
     b94:	82 30       	cpi	r24, 0x02	; 2
     b96:	a1 f4       	brne	.+40     	; 0xbc0 <Fan_UART0_presenter+0x120>
     b98:	80 e7       	ldi	r24, 0x70	; 112
			printf("Timer Mode\n");		
     b9a:	92 e0       	ldi	r25, 0x02	; 2
     b9c:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
     ba0:	0f c0       	rjmp	.+30     	; 0xbc0 <Fan_UART0_presenter+0x120>
     ba2:	60 ea       	ldi	r22, 0xA0	; 160
		}
		return;
	}
	if(!(strcmp(Rxstring,"Timer Thirty Min Up\n"))){
     ba4:	71 e0       	ldi	r23, 0x01	; 1
     ba6:	ce 01       	movw	r24, r28
     ba8:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <strcmp>
     bac:	89 2b       	or	r24, r25
     bae:	41 f4       	brne	.+16     	; 0xbc0 <Fan_UART0_presenter+0x120>
     bb0:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <TimerModeState>
		if((TimerModeState == minUp))
     bb4:	81 30       	cpi	r24, 0x01	; 1
     bb6:	21 f4       	brne	.+8      	; 0xbc0 <Fan_UART0_presenter+0x120>
     bb8:	8b e7       	ldi	r24, 0x7B	; 123
		{
			printf("Timer Thirty Min Up\n");	
     bba:	92 e0       	ldi	r25, 0x02	; 2
     bbc:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
     bc0:	df 91       	pop	r29
		}
		return;
	}
}
     bc2:	cf 91       	pop	r28
     bc4:	08 95       	ret

00000bc6 <Fan_AutoMode_Service>:
     bc6:	0f 93       	push	r16
     bc8:	1f 93       	push	r17
     bca:	2c d2       	rcall	.+1112   	; 0x1024 <getTick>
     bcc:	60 93 47 03 	sts	0x0347, r22	; 0x800347 <curTime>
     bd0:	70 93 48 03 	sts	0x0348, r23	; 0x800348 <curTime+0x1>
     bd4:	80 93 49 03 	sts	0x0349, r24	; 0x800349 <curTime+0x2>
     bd8:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <curTime+0x3>
     bdc:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <i>
     be0:	70 e0       	ldi	r23, 0x00	; 0
     be2:	80 e0       	ldi	r24, 0x00	; 0
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	c9 d6       	rcall	.+3474   	; 0x197a <__floatsisf>
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	40 e0       	ldi	r20, 0x00	; 0
     bee:	5f e3       	ldi	r21, 0x3F	; 63
     bf0:	28 d7       	rcall	.+3664   	; 0x1a42 <__mulsf3>
     bf2:	95 d6       	rcall	.+3370   	; 0x191e <__fixunssfsi>
     bf4:	88 ee       	ldi	r24, 0xE8	; 232
     bf6:	93 e0       	ldi	r25, 0x03	; 3
     bf8:	33 d5       	rcall	.+2662   	; 0x1660 <Motor_makeHerzDuty>
     bfa:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <curTime>
     bfe:	90 91 48 03 	lds	r25, 0x0348	; 0x800348 <curTime+0x1>
     c02:	a0 91 49 03 	lds	r26, 0x0349	; 0x800349 <curTime+0x2>
     c06:	b0 91 4a 03 	lds	r27, 0x034A	; 0x80034a <curTime+0x3>
     c0a:	40 91 94 02 	lds	r20, 0x0294	; 0x800294 <prevTime>
     c0e:	50 91 95 02 	lds	r21, 0x0295	; 0x800295 <prevTime+0x1>
     c12:	60 91 96 02 	lds	r22, 0x0296	; 0x800296 <prevTime+0x2>
     c16:	70 91 97 02 	lds	r23, 0x0297	; 0x800297 <prevTime+0x3>
     c1a:	8c 01       	movw	r16, r24
     c1c:	9d 01       	movw	r18, r26
     c1e:	04 1b       	sub	r16, r20
     c20:	15 0b       	sbc	r17, r21
     c22:	26 0b       	sbc	r18, r22
     c24:	37 0b       	sbc	r19, r23
     c26:	b9 01       	movw	r22, r18
     c28:	a8 01       	movw	r20, r16
     c2a:	48 3e       	cpi	r20, 0xE8	; 232
     c2c:	53 40       	sbci	r21, 0x03	; 3
     c2e:	61 05       	cpc	r22, r1
     c30:	71 05       	cpc	r23, r1
     c32:	90 f0       	brcs	.+36     	; 0xc58 <Fan_AutoMode_Service+0x92>
     c34:	80 93 94 02 	sts	0x0294, r24	; 0x800294 <prevTime>
     c38:	90 93 95 02 	sts	0x0295, r25	; 0x800295 <prevTime+0x1>
     c3c:	a0 93 96 02 	sts	0x0296, r26	; 0x800296 <prevTime+0x2>
     c40:	b0 93 97 02 	sts	0x0297, r27	; 0x800297 <prevTime+0x3>
     c44:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <i>
     c48:	8f 5f       	subi	r24, 0xFF	; 255
     c4a:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <i>
     c4e:	89 30       	cpi	r24, 0x09	; 9
     c50:	18 f0       	brcs	.+6      	; 0xc58 <Fan_AutoMode_Service+0x92>
     c52:	82 e0       	ldi	r24, 0x02	; 2
     c54:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <i>
     c58:	1f 91       	pop	r17
     c5a:	0f 91       	pop	r16
     c5c:	08 95       	ret

00000c5e <Fan_ultrasonic_init>:

uint8_t distance, UltraSonicFlag, UltraSonicOnOffFlag;

void Fan_ultrasonic_init()
{
	Ultrasonic_init();
     c5e:	27 d5       	rcall	.+2638   	; 0x16ae <Ultrasonic_init>
	distance = 0;
     c60:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <distance>
	UltraSonicFlag = Detecting;
     c64:	81 e0       	ldi	r24, 0x01	; 1
     c66:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <UltraSonicFlag>
	UltraSonicOnOffFlag = NONAPPLY;
     c6a:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <UltraSonicOnOffFlag>
	LED_DDR &= ~(1<<LED_GOOD_GREEN)|(1<<LED_WARING_YELLOW)|(1<<LED_WARING_RED);
     c6e:	81 b3       	in	r24, 0x11	; 17
     c70:	8f 7e       	andi	r24, 0xEF	; 239
     c72:	81 bb       	out	0x11, r24	; 17
     c74:	08 95       	ret

00000c76 <Fan_ultrasonic_distance>:
}

void Fan_ultrasonic_distance()
{
     c76:	cf 92       	push	r12
     c78:	df 92       	push	r13
     c7a:	ef 92       	push	r14
     c7c:	ff 92       	push	r15
     c7e:	0f 93       	push	r16
     c80:	1f 93       	push	r17
	Ultrasonic_trigger();
     c82:	2a d5       	rcall	.+2644   	; 0x16d8 <Ultrasonic_trigger>
	
	//초음파 수신을 기달려 줘야함
	static uint32_t prevTime = 0;
	uint32_t curTime = getTick();
     c84:	cf d1       	rcall	.+926    	; 0x1024 <getTick>
     c86:	00 91 98 02 	lds	r16, 0x0298	; 0x800298 <prevTime.1772>
	if(curTime-prevTime < 100) return;
     c8a:	10 91 99 02 	lds	r17, 0x0299	; 0x800299 <prevTime.1772+0x1>
     c8e:	20 91 9a 02 	lds	r18, 0x029A	; 0x80029a <prevTime.1772+0x2>
     c92:	30 91 9b 02 	lds	r19, 0x029B	; 0x80029b <prevTime.1772+0x3>
     c96:	6b 01       	movw	r12, r22
     c98:	7c 01       	movw	r14, r24
     c9a:	c0 1a       	sub	r12, r16
     c9c:	d1 0a       	sbc	r13, r17
     c9e:	e2 0a       	sbc	r14, r18
     ca0:	f3 0a       	sbc	r15, r19
     ca2:	97 01       	movw	r18, r14
     ca4:	86 01       	movw	r16, r12
     ca6:	04 36       	cpi	r16, 0x64	; 100
     ca8:	11 05       	cpc	r17, r1
     caa:	21 05       	cpc	r18, r1
     cac:	31 05       	cpc	r19, r1
     cae:	08 f4       	brcc	.+2      	; 0xcb2 <Fan_ultrasonic_distance+0x3c>
     cb0:	4b c0       	rjmp	.+150    	; 0xd48 <Fan_ultrasonic_distance+0xd2>
     cb2:	60 93 98 02 	sts	0x0298, r22	; 0x800298 <prevTime.1772>
	prevTime = curTime;	
     cb6:	70 93 99 02 	sts	0x0299, r23	; 0x800299 <prevTime.1772+0x1>
     cba:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <prevTime.1772+0x2>
     cbe:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <prevTime.1772+0x3>
	
	if(Ultrasonic_getComplitFlag())      // 만약 Ultrasonic_getcompltFlag() 함수가 참이면(거리 측정이 완료되면) 실행
     cc2:	43 d5       	rcall	.+2694   	; 0x174a <Ultrasonic_getComplitFlag>
     cc4:	89 2b       	or	r24, r25
     cc6:	09 f4       	brne	.+2      	; 0xcca <Fan_ultrasonic_distance+0x54>
	{
		// 거리 계산을 하겠다.
		Ultrasonic_clearComplitFlag();   // 다음에 또 써야되니까 초기화
     cc8:	3f c0       	rjmp	.+126    	; 0xd48 <Fan_ultrasonic_distance+0xd2>
		distance = Ultrasoinc_getDistance();
     cca:	51 d5       	rcall	.+2722   	; 0x176e <Ultrasonic_clearComplitFlag>
     ccc:	31 d5       	rcall	.+2658   	; 0x1730 <Ultrasoinc_getDistance>
     cce:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <distance>
		UltraSonicFlag = Model_getUltraSonicFlagData();
     cd2:	23 dd       	rcall	.-1466   	; 0x71a <Model_getUltraSonicFlagData>
     cd4:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <UltraSonicFlag>
     cd8:	90 91 4c 03 	lds	r25, 0x034C	; 0x80034c <distance>
		
		if((distance<=10)&&(UltraSonicFlag == Detecting)&&(UltraSonicOnOffFlag == APPLY)) //10 이하시 WarningState로 감.
     cdc:	9b 30       	cpi	r25, 0x0B	; 11
     cde:	88 f4       	brcc	.+34     	; 0xd02 <Fan_ultrasonic_distance+0x8c>
     ce0:	81 30       	cpi	r24, 0x01	; 1
     ce2:	79 f4       	brne	.+30     	; 0xd02 <Fan_ultrasonic_distance+0x8c>
     ce4:	20 91 a6 02 	lds	r18, 0x02A6	; 0x8002a6 <UltraSonicOnOffFlag>
     ce8:	21 11       	cpse	r18, r1
		{
			Model_setmodeStateData(WarningState);
     cea:	0b c0       	rjmp	.+22     	; 0xd02 <Fan_ultrasonic_distance+0x8c>
     cec:	83 e0       	ldi	r24, 0x03	; 3
     cee:	ec dc       	rcall	.-1576   	; 0x6c8 <Model_setmodeStateData>
			UltraSonicFlag = StandBy;
     cf0:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <UltraSonicFlag>
			Model_setUltraSonicFlagData(UltraSonicFlag);
     cf4:	80 e0       	ldi	r24, 0x00	; 0
     cf6:	14 dd       	rcall	.-1496   	; 0x720 <Model_setUltraSonicFlagData>
			LED_outPutData(&LED_PORT, 0x40); //빨간불 나옴
     cf8:	60 e4       	ldi	r22, 0x40	; 64
     cfa:	82 e3       	ldi	r24, 0x32	; 50
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	9b d4       	rcall	.+2358   	; 0x1636 <LED_outPutData>
     d00:	23 c0       	rjmp	.+70     	; 0xd48 <Fan_ultrasonic_distance+0xd2>
			return;
		}
		if((distance>10)&&(UltraSonicFlag == StandBy)&&(UltraSonicOnOffFlag == APPLY)) // 10 이상이면 다시 재동작
     d02:	9b 30       	cpi	r25, 0x0B	; 11
     d04:	60 f0       	brcs	.+24     	; 0xd1e <Fan_ultrasonic_distance+0xa8>
     d06:	81 11       	cpse	r24, r1
     d08:	0a c0       	rjmp	.+20     	; 0xd1e <Fan_ultrasonic_distance+0xa8>
     d0a:	20 91 a6 02 	lds	r18, 0x02A6	; 0x8002a6 <UltraSonicOnOffFlag>
     d0e:	21 11       	cpse	r18, r1
		{
			Model_setmodeStateData(ManualState);
     d10:	06 c0       	rjmp	.+12     	; 0xd1e <Fan_ultrasonic_distance+0xa8>
     d12:	da dc       	rcall	.-1612   	; 0x6c8 <Model_setmodeStateData>
			UltraSonicFlag = Detecting;
     d14:	81 e0       	ldi	r24, 0x01	; 1
     d16:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <UltraSonicFlag>
			Model_setUltraSonicFlagData(UltraSonicFlag);
     d1a:	02 dd       	rcall	.-1532   	; 0x720 <Model_setUltraSonicFlagData>
     d1c:	15 c0       	rjmp	.+42     	; 0xd48 <Fan_ultrasonic_distance+0xd2>
			return;
     d1e:	25 ef       	ldi	r18, 0xF5	; 245
		}
		if((distance>10)&&(distance<=30)&&(UltraSonicFlag == Detecting)&&(UltraSonicOnOffFlag == APPLY)) // 경고등 노란불
     d20:	29 0f       	add	r18, r25
     d22:	24 31       	cpi	r18, 0x14	; 20
     d24:	58 f4       	brcc	.+22     	; 0xd3c <Fan_ultrasonic_distance+0xc6>
     d26:	81 30       	cpi	r24, 0x01	; 1
     d28:	49 f4       	brne	.+18     	; 0xd3c <Fan_ultrasonic_distance+0xc6>
     d2a:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <UltraSonicOnOffFlag>
     d2e:	81 11       	cpse	r24, r1
		{
			LED_outPutData(&LED_PORT, 0x20);
     d30:	05 c0       	rjmp	.+10     	; 0xd3c <Fan_ultrasonic_distance+0xc6>
     d32:	60 e2       	ldi	r22, 0x20	; 32
     d34:	82 e3       	ldi	r24, 0x32	; 50
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	7e d4       	rcall	.+2300   	; 0x1636 <LED_outPutData>
			return;
     d3a:	06 c0       	rjmp	.+12     	; 0xd48 <Fan_ultrasonic_distance+0xd2>
		}
		if((distance>30)) // 이땐 정상 가동
     d3c:	9f 31       	cpi	r25, 0x1F	; 31
     d3e:	20 f0       	brcs	.+8      	; 0xd48 <Fan_ultrasonic_distance+0xd2>
		{
			LED_outPutData(&LED_PORT, 0x10);
     d40:	60 e1       	ldi	r22, 0x10	; 16
     d42:	82 e3       	ldi	r24, 0x32	; 50
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	77 d4       	rcall	.+2286   	; 0x1636 <LED_outPutData>
     d48:	1f 91       	pop	r17
		}
	}
	
	
     d4a:	0f 91       	pop	r16
     d4c:	ff 90       	pop	r15
     d4e:	ef 90       	pop	r14
     d50:	df 90       	pop	r13
     d52:	cf 90       	pop	r12
     d54:	08 95       	ret

00000d56 <Fan_Sevice_init>:
﻿#include "Device.h"

void Fan_Sevice_init(){
	Motor_init();
     d56:	71 d4       	rcall	.+2274   	; 0x163a <Motor_init>
	Fan_ultrasonic_init();
     d58:	82 cf       	rjmp	.-252    	; 0xc5e <Fan_ultrasonic_init>
     d5a:	08 95       	ret

00000d5c <Fan_reset>:
     d5c:	a2 d4       	rcall	.+2372   	; 0x16a2 <Motor_Off>
}

void Fan_reset()
{
	Motor_Off();
	Model_setmodeStateData(ManualState);		//ModeState = ManualState;
     d5e:	80 e0       	ldi	r24, 0x00	; 0
     d60:	b3 dc       	rcall	.-1690   	; 0x6c8 <Model_setmodeStateData>
	Model_setmanualModeStateData(SlowState);	//ManualModeState = SlowState;
     d62:	80 e0       	ldi	r24, 0x00	; 0
     d64:	ab dc       	rcall	.-1706   	; 0x6bc <Model_setmanualModeStateData>
	Model_settimermodeStateData(Setting);		//TimerModeState = Setting;
     d66:	80 e0       	ldi	r24, 0x00	; 0
	Model_settimermodeFlagData(Stop);			//TimerModeFlag = Stop;
     d68:	cf dc       	rcall	.-1634   	; 0x708 <Model_settimermodeStateData>
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	d3 dc       	rcall	.-1626   	; 0x714 <Model_settimermodeFlagData>
	Time_init();	//TimeClockDatahour = 0,TimeClockDatamin = 0, TimeClockDatasec = 0, TimeClockDataFND = 0
     d6e:	42 c0       	rjmp	.+132    	; 0xdf4 <Time_init>
     d70:	08 95       	ret

00000d72 <Fan_device_Sevice>:
     d72:	9b dc       	rcall	.-1738   	; 0x6aa <Model_getdeviceStateData>
{
	
	uint8_t deviceState;
	deviceState = Model_getdeviceStateData();
	
	switch(deviceState)
     d74:	88 23       	and	r24, r24
     d76:	19 f0       	breq	.+6      	; 0xd7e <Fan_device_Sevice+0xc>
     d78:	81 30       	cpi	r24, 0x01	; 1
     d7a:	19 f0       	breq	.+6      	; 0xd82 <Fan_device_Sevice+0x10>
	{
		case OFFState:	
		Fan_reset();
     d7c:	08 95       	ret
		break;
		
		case OnState:
		Fan_ultrasonic_distance();
     d7e:	ee cf       	rjmp	.-36     	; 0xd5c <Fan_reset>
		Motor_On();
     d80:	08 95       	ret
     d82:	79 df       	rcall	.-270    	; 0xc76 <Fan_ultrasonic_distance>
		Fan_Mode_Sevice();
     d84:	88 d4       	rcall	.+2320   	; 0x1696 <Motor_On>
     d86:	17 c0       	rjmp	.+46     	; 0xdb6 <Fan_Mode_Sevice>
     d88:	08 95       	ret

00000d8a <Fan_ManualMode_Sevice>:
﻿#include "Manual.h"

void Fan_ManualMode_Sevice()
{
	uint8_t ManualModeState;
	ManualModeState = Model_getmanualModeStateData();
     d8a:	95 dc       	rcall	.-1750   	; 0x6b6 <Model_getmanualModeStateData>
	
	switch(ManualModeState){
     d8c:	81 30       	cpi	r24, 0x01	; 1
     d8e:	49 f0       	breq	.+18     	; 0xda2 <Fan_ManualMode_Sevice+0x18>
     d90:	18 f0       	brcs	.+6      	; 0xd98 <Fan_ManualMode_Sevice+0xe>
     d92:	82 30       	cpi	r24, 0x02	; 2
     d94:	59 f0       	breq	.+22     	; 0xdac <Fan_ManualMode_Sevice+0x22>
     d96:	08 95       	ret
		case SlowState:
		Motor_makeHerzDuty(1000,4.5);
     d98:	64 e0       	ldi	r22, 0x04	; 4
     d9a:	88 ee       	ldi	r24, 0xE8	; 232
     d9c:	93 e0       	ldi	r25, 0x03	; 3
     d9e:	60 c4       	rjmp	.+2240   	; 0x1660 <Motor_makeHerzDuty>
		break;
     da0:	08 95       	ret
		
		case MiddleState:
		Motor_makeHerzDuty(1000,3);
     da2:	63 e0       	ldi	r22, 0x03	; 3
     da4:	88 ee       	ldi	r24, 0xE8	; 232
     da6:	93 e0       	ldi	r25, 0x03	; 3
     da8:	5b c4       	rjmp	.+2230   	; 0x1660 <Motor_makeHerzDuty>
		break;
     daa:	08 95       	ret
		
		case FastState:
		Motor_makeHerzDuty(1000,1.5);
     dac:	61 e0       	ldi	r22, 0x01	; 1
     dae:	88 ee       	ldi	r24, 0xE8	; 232
     db0:	93 e0       	ldi	r25, 0x03	; 3
     db2:	56 c4       	rjmp	.+2220   	; 0x1660 <Motor_makeHerzDuty>
     db4:	08 95       	ret

00000db6 <Fan_Mode_Sevice>:
﻿#include "Mode.h"

void Fan_Mode_Sevice()
{
     db6:	cf 93       	push	r28
	uint8_t ModeState,TimerModeFlag, UltraSonicFlag;
	ModeState = Model_getmodeStateData();
     db8:	84 dc       	rcall	.-1784   	; 0x6c2 <Model_getmodeStateData>
     dba:	c8 2f       	mov	r28, r24
	TimerModeFlag = Model_gettimermodeFlagData();
     dbc:	a8 dc       	rcall	.-1712   	; 0x70e <Model_gettimermodeFlagData>
     dbe:	c1 30       	cpi	r28, 0x01	; 1
	
	switch(ModeState)
     dc0:	59 f0       	breq	.+22     	; 0xdd8 <Fan_Mode_Sevice+0x22>
     dc2:	28 f0       	brcs	.+10     	; 0xdce <Fan_Mode_Sevice+0x18>
     dc4:	c2 30       	cpi	r28, 0x02	; 2
     dc6:	69 f0       	breq	.+26     	; 0xde2 <Fan_Mode_Sevice+0x2c>
     dc8:	c3 30       	cpi	r28, 0x03	; 3
     dca:	81 f0       	breq	.+32     	; 0xdec <Fan_Mode_Sevice+0x36>
     dcc:	11 c0       	rjmp	.+34     	; 0xdf0 <Fan_Mode_Sevice+0x3a>
     dce:	81 11       	cpse	r24, r1
	{
		case ManualState:
		if(TimerModeFlag == Start)
     dd0:	01 c0       	rjmp	.+2      	; 0xdd4 <Fan_Mode_Sevice+0x1e>
		{
			timercounter();
     dd2:	56 d0       	rcall	.+172    	; 0xe80 <timercounter>
     dd4:	da df       	rcall	.-76     	; 0xd8a <Fan_ManualMode_Sevice>
		}
		Fan_ManualMode_Sevice();
     dd6:	0c c0       	rjmp	.+24     	; 0xdf0 <Fan_Mode_Sevice+0x3a>
		break;
		
		case AutoState:
		if(TimerModeFlag == Start)
     dd8:	81 11       	cpse	r24, r1
     dda:	01 c0       	rjmp	.+2      	; 0xdde <Fan_Mode_Sevice+0x28>
		{
			timercounter();
     ddc:	51 d0       	rcall	.+162    	; 0xe80 <timercounter>
		}
		Fan_AutoMode_Service();
     dde:	f3 de       	rcall	.-538    	; 0xbc6 <Fan_AutoMode_Service>
		break;
		
		case TimerState:
		if(TimerModeFlag == Start)
     de0:	07 c0       	rjmp	.+14     	; 0xdf0 <Fan_Mode_Sevice+0x3a>
		{
			timercounter();
     de2:	81 11       	cpse	r24, r1
     de4:	01 c0       	rjmp	.+2      	; 0xde8 <Fan_Mode_Sevice+0x32>
		}
		Fan_TimerMode_Sevice();
     de6:	4c d0       	rcall	.+152    	; 0xe80 <timercounter>
     de8:	1f d0       	rcall	.+62     	; 0xe28 <Fan_TimerMode_Sevice>
		break;
     dea:	02 c0       	rjmp	.+4      	; 0xdf0 <Fan_Mode_Sevice+0x3a>
		
		case WarningState:
		Motor_Off();
     dec:	5a d4       	rcall	.+2228   	; 0x16a2 <Motor_Off>
     dee:	43 df       	rcall	.-378    	; 0xc76 <Fan_ultrasonic_distance>
		Fan_ultrasonic_distance();
     df0:	cf 91       	pop	r28
     df2:	08 95       	ret

00000df4 <Time_init>:
uint8_t sec,TimeClocksec;
uint8_t min,TimeClockmin;
uint8_t hour,TimeClockhour;

void Time_init(){
	TimeClocksec = 0;
     df4:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <TimeClocksec>
	TimeClockmin = 0;
     df8:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <TimeClockmin>
	TimeClockhour =0;
     dfc:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <TimeClockhour>
	milisec = 0;
     e00:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <milisec+0x1>
     e04:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <milisec>
	sec = 0;
     e08:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <sec>
	min = 0;
     e0c:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <min>
	hour = 0;
     e10:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <hour>
	Model_settimermodeFlagData(Stop); //timermodeFlag = Stop으로 초기화
     e14:	81 e0       	ldi	r24, 0x01	; 1
     e16:	7e dc       	rcall	.-1796   	; 0x714 <Model_settimermodeFlagData>
	Model_setTimeClockData(0,0,0);	//TimeClockDatahour = 0,TimeClockDatamin = 0, TimeClockDatasec = 0로 초기화
     e18:	40 e0       	ldi	r20, 0x00	; 0
     e1a:	60 e0       	ldi	r22, 0x00	; 0
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	65 dc       	rcall	.-1846   	; 0x6ea <Model_setTimeClockData>
	Model_setTimeClockDataFND(0);	//TimeClockDataFND = 0로 초기화
     e20:	80 e0       	ldi	r24, 0x00	; 0
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	69 cc       	rjmp	.-1838   	; 0x6f8 <Model_setTimeClockDataFND>
     e26:	08 95       	ret

00000e28 <Fan_TimerMode_Sevice>:
}

void Fan_TimerMode_Sevice()
{
     e28:	cf 93       	push	r28
     e2a:	df 93       	push	r29
	uint8_t TimerModeState;
	uint16_t TimeClockFND;
	
	TimerModeState = Model_gettimermodeStateData();
     e2c:	6a dc       	rcall	.-1836   	; 0x702 <Model_gettimermodeStateData>
	
	switch(TimerModeState)
     e2e:	81 30       	cpi	r24, 0x01	; 1
     e30:	21 f5       	brne	.+72     	; 0xe7a <Fan_TimerMode_Sevice+0x52>
	{
		case minUp:
		TimeClockmin = (TimeClockmin+30)%60;	//30분씩 증가
     e32:	80 91 4f 03 	lds	r24, 0x034F	; 0x80034f <TimeClockmin>
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	4e 96       	adiw	r24, 0x1e	; 30
     e3a:	6c e3       	ldi	r22, 0x3C	; 60
     e3c:	70 e0       	ldi	r23, 0x00	; 0
     e3e:	a0 d6       	rcall	.+3392   	; 0x1b80 <__divmodhi4>
     e40:	28 2f       	mov	r18, r24
     e42:	80 93 4f 03 	sts	0x034F, r24	; 0x80034f <TimeClockmin>
		if(TimeClockmin < 30)
     e46:	8e 31       	cpi	r24, 0x1E	; 30
     e48:	48 f4       	brcc	.+18     	; 0xe5c <Fan_TimerMode_Sevice+0x34>
		{
			TimeClockhour = (TimeClockhour+1)%24;
     e4a:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <TimeClockhour>
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	01 96       	adiw	r24, 0x01	; 1
     e52:	68 e1       	ldi	r22, 0x18	; 24
     e54:	70 e0       	ldi	r23, 0x00	; 0
     e56:	94 d6       	rcall	.+3368   	; 0x1b80 <__divmodhi4>
     e58:	80 93 50 03 	sts	0x0350, r24	; 0x800350 <TimeClockhour>
		}
		TimeClockFND = (TimeClockmin*100)+TimeClocksec;		//분:초 삽입
     e5c:	40 91 54 03 	lds	r20, 0x0354	; 0x800354 <TimeClocksec>
     e60:	c4 2f       	mov	r28, r20
     e62:	d0 e0       	ldi	r29, 0x00	; 0
     e64:	84 e6       	ldi	r24, 0x64	; 100
     e66:	28 9f       	mul	r18, r24
     e68:	c0 0d       	add	r28, r0
     e6a:	d1 1d       	adc	r29, r1
     e6c:	11 24       	eor	r1, r1
		Model_setTimeClockData(TimeClockhour,TimeClockmin,TimeClocksec); //LCD 출력을 위한 Model
     e6e:	62 2f       	mov	r22, r18
     e70:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <TimeClockhour>
		Model_setTimeClockDataFND(TimeClockFND);	//FND 출력을 위한 Model
     e74:	3a dc       	rcall	.-1932   	; 0x6ea <Model_setTimeClockData>
     e76:	ce 01       	movw	r24, r28
     e78:	3f dc       	rcall	.-1922   	; 0x6f8 <Model_setTimeClockDataFND>
		break;
	}
}
     e7a:	df 91       	pop	r29
     e7c:	cf 91       	pop	r28
     e7e:	08 95       	ret

00000e80 <timercounter>:

void timercounter()
{
     e80:	cf 93       	push	r28
     e82:	df 93       	push	r29
	uint16_t TimeClockFND;

	if(((TimeClockhour-hour)==0)&&((TimeClockmin-min)==0)&&((TimeClocksec-sec==0))){	//0시0분0초 = OFF
     e84:	90 91 50 03 	lds	r25, 0x0350	; 0x800350 <TimeClockhour>
     e88:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <hour>
     e8c:	98 13       	cpse	r25, r24
     e8e:	0e c0       	rjmp	.+28     	; 0xeac <timercounter+0x2c>
     e90:	90 91 4f 03 	lds	r25, 0x034F	; 0x80034f <TimeClockmin>
     e94:	80 91 52 03 	lds	r24, 0x0352	; 0x800352 <min>
     e98:	98 13       	cpse	r25, r24
     e9a:	08 c0       	rjmp	.+16     	; 0xeac <timercounter+0x2c>
     e9c:	90 91 54 03 	lds	r25, 0x0354	; 0x800354 <TimeClocksec>
     ea0:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <sec>
     ea4:	98 13       	cpse	r25, r24
     ea6:	02 c0       	rjmp	.+4      	; 0xeac <timercounter+0x2c>
		Model_setdeviceStateData(OFFState);
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	02 dc       	rcall	.-2044   	; 0x6b0 <Model_setdeviceStateData>
	}
	if(((TimeClockmin-min) <= 0)&&(TimeClockhour)){		//시간이 있고 0분보다 작아지면
     eac:	80 91 4f 03 	lds	r24, 0x034F	; 0x80034f <TimeClockmin>
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	20 91 52 03 	lds	r18, 0x0352	; 0x800352 <min>
     eb6:	82 1b       	sub	r24, r18
     eb8:	91 09       	sbc	r25, r1
     eba:	18 16       	cp	r1, r24
     ebc:	19 06       	cpc	r1, r25
     ebe:	54 f0       	brlt	.+20     	; 0xed4 <timercounter+0x54>
     ec0:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <TimeClockhour>
     ec4:	88 23       	and	r24, r24
     ec6:	31 f0       	breq	.+12     	; 0xed4 <timercounter+0x54>
		TimeClockmin = 59;
     ec8:	9b e3       	ldi	r25, 0x3B	; 59
     eca:	90 93 4f 03 	sts	0x034F, r25	; 0x80034f <TimeClockmin>
		TimeClockhour--;
     ece:	81 50       	subi	r24, 0x01	; 1
     ed0:	80 93 50 03 	sts	0x0350, r24	; 0x800350 <TimeClockhour>
	}
	if((TimeClocksec-sec) <= 0){	//0초보다 작아지면
     ed4:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <TimeClocksec>
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	20 91 53 03 	lds	r18, 0x0353	; 0x800353 <sec>
     ede:	82 1b       	sub	r24, r18
     ee0:	91 09       	sbc	r25, r1
     ee2:	18 16       	cp	r1, r24
     ee4:	19 06       	cpc	r1, r25
     ee6:	44 f0       	brlt	.+16     	; 0xef8 <timercounter+0x78>
		TimeClocksec = 59;
     ee8:	8b e3       	ldi	r24, 0x3B	; 59
     eea:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <TimeClocksec>
		TimeClockmin--;
     eee:	80 91 4f 03 	lds	r24, 0x034F	; 0x80034f <TimeClockmin>
     ef2:	81 50       	subi	r24, 0x01	; 1
     ef4:	80 93 4f 03 	sts	0x034F, r24	; 0x80034f <TimeClockmin>
	}
	if(TimeClockhour>7)		//8시간보다 커지면 타이머 종료 
     ef8:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <TimeClockhour>
     efc:	88 30       	cpi	r24, 0x08	; 8
     efe:	70 f0       	brcs	.+28     	; 0xf1c <timercounter+0x9c>
	{
		Model_settimermodeFlagData(Stop);
     f00:	81 e0       	ldi	r24, 0x01	; 1
     f02:	08 dc       	rcall	.-2032   	; 0x714 <Model_settimermodeFlagData>
		TimeClocksec = 0;
     f04:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <TimeClocksec>
		TimeClockmin = 0;
     f08:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <TimeClockmin>
		TimeClockhour =0;
     f0c:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <TimeClockhour>
		hour = 0;
     f10:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <hour>
		min = 0;
     f14:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <min>
		sec = 0;
     f18:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <sec>
	}
	TimeClockFND = ((TimeClockmin-min)*100)+(TimeClocksec-sec);	//분:초 삽입
     f1c:	60 91 4f 03 	lds	r22, 0x034F	; 0x80034f <TimeClockmin>
     f20:	20 91 52 03 	lds	r18, 0x0352	; 0x800352 <min>
     f24:	86 2f       	mov	r24, r22
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	82 1b       	sub	r24, r18
     f2a:	91 09       	sbc	r25, r1
     f2c:	34 e6       	ldi	r19, 0x64	; 100
     f2e:	38 9f       	mul	r19, r24
     f30:	f0 01       	movw	r30, r0
     f32:	39 9f       	mul	r19, r25
     f34:	f0 0d       	add	r31, r0
     f36:	11 24       	eor	r1, r1
     f38:	40 91 54 03 	lds	r20, 0x0354	; 0x800354 <TimeClocksec>
     f3c:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <sec>
     f40:	c4 2f       	mov	r28, r20
     f42:	d0 e0       	ldi	r29, 0x00	; 0
     f44:	c8 1b       	sub	r28, r24
     f46:	d1 09       	sbc	r29, r1
     f48:	ce 0f       	add	r28, r30
     f4a:	df 1f       	adc	r29, r31
	Model_setTimeClockData((TimeClockhour-hour),(TimeClockmin-min),(TimeClocksec-sec));	//LCD 출력을 위한 Model
     f4c:	48 1b       	sub	r20, r24
     f4e:	62 1b       	sub	r22, r18
     f50:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <TimeClockhour>
     f54:	90 91 51 03 	lds	r25, 0x0351	; 0x800351 <hour>
     f58:	89 1b       	sub	r24, r25
	Model_setTimeClockDataFND(TimeClockFND);	//FND 출력을 위한 Model
     f5a:	c7 db       	rcall	.-2162   	; 0x6ea <Model_setTimeClockData>
     f5c:	ce 01       	movw	r24, r28
     f5e:	cc db       	rcall	.-2152   	; 0x6f8 <Model_setTimeClockDataFND>
}
     f60:	df 91       	pop	r29
     f62:	cf 91       	pop	r28
     f64:	08 95       	ret

00000f66 <timer_incmilisec>:

void timer_incmilisec()
{
	uint8_t TimerModeFlag;
	TimerModeFlag = Model_gettimermodeFlagData();
     f66:	d3 db       	rcall	.-2138   	; 0x70e <Model_gettimermodeFlagData>
	if(TimerModeFlag == Start)	//minUp이 된 순간
     f68:	81 11       	cpse	r24, r1
     f6a:	47 c0       	rjmp	.+142    	; 0xffa <timer_incmilisec+0x94>
	{
		milisec = (milisec+1)%1000; // 0 ~ 999
     f6c:	40 91 4d 03 	lds	r20, 0x034D	; 0x80034d <milisec>
     f70:	50 91 4e 03 	lds	r21, 0x034E	; 0x80034e <milisec+0x1>
     f74:	4f 5f       	subi	r20, 0xFF	; 255
     f76:	5f 4f       	sbci	r21, 0xFF	; 255
     f78:	9a 01       	movw	r18, r20
     f7a:	36 95       	lsr	r19
     f7c:	27 95       	ror	r18
     f7e:	36 95       	lsr	r19
     f80:	27 95       	ror	r18
     f82:	36 95       	lsr	r19
     f84:	27 95       	ror	r18
     f86:	a5 ec       	ldi	r26, 0xC5	; 197
     f88:	b0 e2       	ldi	r27, 0x20	; 32
     f8a:	29 d6       	rcall	.+3154   	; 0x1bde <__umulhisi3>
     f8c:	92 95       	swap	r25
     f8e:	82 95       	swap	r24
     f90:	8f 70       	andi	r24, 0x0F	; 15
     f92:	89 27       	eor	r24, r25
     f94:	9f 70       	andi	r25, 0x0F	; 15
     f96:	89 27       	eor	r24, r25
     f98:	68 ee       	ldi	r22, 0xE8	; 232
     f9a:	73 e0       	ldi	r23, 0x03	; 3
     f9c:	86 9f       	mul	r24, r22
     f9e:	90 01       	movw	r18, r0
     fa0:	87 9f       	mul	r24, r23
     fa2:	30 0d       	add	r19, r0
     fa4:	96 9f       	mul	r25, r22
     fa6:	30 0d       	add	r19, r0
     fa8:	11 24       	eor	r1, r1
     faa:	ca 01       	movw	r24, r20
     fac:	82 1b       	sub	r24, r18
     fae:	93 0b       	sbc	r25, r19
     fb0:	90 93 4e 03 	sts	0x034E, r25	; 0x80034e <milisec+0x1>
     fb4:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <milisec>
		if(milisec) return;         //milisec:1~999 일때 return
     fb8:	89 2b       	or	r24, r25
     fba:	f9 f4       	brne	.+62     	; 0xffa <timer_incmilisec+0x94>
		sec = (sec+1)%60;         //milisec:0 일때 sec 증가
     fbc:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <sec>
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	01 96       	adiw	r24, 0x01	; 1
     fc4:	6c e3       	ldi	r22, 0x3C	; 60
     fc6:	70 e0       	ldi	r23, 0x00	; 0
     fc8:	db d5       	rcall	.+2998   	; 0x1b80 <__divmodhi4>
     fca:	80 93 53 03 	sts	0x0353, r24	; 0x800353 <sec>
		if(sec) return;            //sec:1~60 일때 return
     fce:	81 11       	cpse	r24, r1
     fd0:	14 c0       	rjmp	.+40     	; 0xffa <timer_incmilisec+0x94>
		min = (min+1)%60;         //sec:0 일때 min 증가
     fd2:	80 91 52 03 	lds	r24, 0x0352	; 0x800352 <min>
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	01 96       	adiw	r24, 0x01	; 1
     fda:	6c e3       	ldi	r22, 0x3C	; 60
     fdc:	70 e0       	ldi	r23, 0x00	; 0
     fde:	d0 d5       	rcall	.+2976   	; 0x1b80 <__divmodhi4>
     fe0:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <min>
		if(min) return;            //min:1~60 일때 return
     fe4:	81 11       	cpse	r24, r1
     fe6:	09 c0       	rjmp	.+18     	; 0xffa <timer_incmilisec+0x94>
		hour = (hour+1)%24;         //min:0 일때 hour 증가
     fe8:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <hour>
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	01 96       	adiw	r24, 0x01	; 1
     ff0:	68 e1       	ldi	r22, 0x18	; 24
     ff2:	70 e0       	ldi	r23, 0x00	; 0
     ff4:	c5 d5       	rcall	.+2954   	; 0x1b80 <__divmodhi4>
     ff6:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <hour>
     ffa:	08 95       	ret

00000ffc <incTick>:
     ffc:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <timeTick>
    1000:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <timeTick+0x1>
    1004:	a0 91 9e 02 	lds	r26, 0x029E	; 0x80029e <timeTick+0x2>
    1008:	b0 91 9f 02 	lds	r27, 0x029F	; 0x80029f <timeTick+0x3>
    100c:	01 96       	adiw	r24, 0x01	; 1
    100e:	a1 1d       	adc	r26, r1
    1010:	b1 1d       	adc	r27, r1
    1012:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <timeTick>
    1016:	90 93 9d 02 	sts	0x029D, r25	; 0x80029d <timeTick+0x1>
    101a:	a0 93 9e 02 	sts	0x029E, r26	; 0x80029e <timeTick+0x2>
    101e:	b0 93 9f 02 	sts	0x029F, r27	; 0x80029f <timeTick+0x3>
    1022:	08 95       	ret

00001024 <getTick>:
    1024:	60 91 9c 02 	lds	r22, 0x029C	; 0x80029c <timeTick>
    1028:	70 91 9d 02 	lds	r23, 0x029D	; 0x80029d <timeTick+0x1>
    102c:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <timeTick+0x2>
    1030:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <timeTick+0x3>
    1034:	08 95       	ret

00001036 <Button_init>:
    1036:	fc 01       	movw	r30, r24
    1038:	cb 01       	movw	r24, r22
    103a:	71 83       	std	Z+1, r23	; 0x01
    103c:	60 83       	st	Z, r22
    103e:	53 83       	std	Z+3, r21	; 0x03
    1040:	42 83       	std	Z+2, r20	; 0x02
    1042:	24 83       	std	Z+4, r18	; 0x04
    1044:	31 e0       	ldi	r19, 0x01	; 1
    1046:	35 83       	std	Z+5, r19	; 0x05
    1048:	40 e0       	ldi	r20, 0x00	; 0
    104a:	62 2f       	mov	r22, r18
    104c:	a1 c3       	rjmp	.+1858   	; 0x1790 <Gpio_initPin>
    104e:	08 95       	ret

00001050 <Button_GetState>:
    1050:	cf 93       	push	r28
    1052:	df 93       	push	r29
    1054:	ec 01       	movw	r28, r24
    1056:	6c 81       	ldd	r22, Y+4	; 0x04
    1058:	8a 81       	ldd	r24, Y+2	; 0x02
    105a:	9b 81       	ldd	r25, Y+3	; 0x03
    105c:	d0 d3       	rcall	.+1952   	; 0x17fe <Gpio_readPin>
    105e:	81 11       	cpse	r24, r1
    1060:	06 c0       	rjmp	.+12     	; 0x106e <Button_GetState+0x1e>
    1062:	9d 81       	ldd	r25, Y+5	; 0x05
    1064:	91 30       	cpi	r25, 0x01	; 1
    1066:	19 f4       	brne	.+6      	; 0x106e <Button_GetState+0x1e>
    1068:	1d 82       	std	Y+5, r1	; 0x05
    106a:	82 e0       	ldi	r24, 0x02	; 2
    106c:	0b c0       	rjmp	.+22     	; 0x1084 <Button_GetState+0x34>
    106e:	88 23       	and	r24, r24
    1070:	31 f0       	breq	.+12     	; 0x107e <Button_GetState+0x2e>
    1072:	8d 81       	ldd	r24, Y+5	; 0x05
    1074:	81 11       	cpse	r24, r1
    1076:	05 c0       	rjmp	.+10     	; 0x1082 <Button_GetState+0x32>
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	8d 83       	std	Y+5, r24	; 0x05
    107c:	03 c0       	rjmp	.+6      	; 0x1084 <Button_GetState+0x34>
    107e:	80 e0       	ldi	r24, 0x00	; 0
    1080:	01 c0       	rjmp	.+2      	; 0x1084 <Button_GetState+0x34>
    1082:	80 e0       	ldi	r24, 0x00	; 0
    1084:	df 91       	pop	r29
    1086:	cf 91       	pop	r28
    1088:	08 95       	ret

0000108a <Buzzer_init>:
    108a:	41 e0       	ldi	r20, 0x01	; 1
    108c:	64 e0       	ldi	r22, 0x04	; 4
    108e:	87 e3       	ldi	r24, 0x37	; 55
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	7e d3       	rcall	.+1788   	; 0x1790 <Gpio_initPin>
    1094:	83 b7       	in	r24, 0x33	; 51
    1096:	84 60       	ori	r24, 0x04	; 4
    1098:	83 bf       	out	0x33, r24	; 51
    109a:	83 b7       	in	r24, 0x33	; 51
    109c:	88 64       	ori	r24, 0x48	; 72
    109e:	83 bf       	out	0x33, r24	; 51
    10a0:	08 95       	ret

000010a2 <Buzzer_makeduty>:
    10a2:	68 2f       	mov	r22, r24
    10a4:	70 e0       	ldi	r23, 0x00	; 0
    10a6:	8f ef       	ldi	r24, 0xFF	; 255
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	6a d5       	rcall	.+2772   	; 0x1b80 <__divmodhi4>
    10ac:	61 bf       	out	0x31, r22	; 49
    10ae:	08 95       	ret

000010b0 <Buzzer_soundOn>:
    10b0:	83 b7       	in	r24, 0x33	; 51
    10b2:	80 62       	ori	r24, 0x20	; 32
    10b4:	83 bf       	out	0x33, r24	; 51
    10b6:	08 95       	ret

000010b8 <Buzzer_soundOff>:
    10b8:	83 b7       	in	r24, 0x33	; 51
    10ba:	8f 7c       	andi	r24, 0xCF	; 207
    10bc:	83 bf       	out	0x33, r24	; 51
    10be:	08 95       	ret

000010c0 <FND_init>:
    10c0:	41 e0       	ldi	r20, 0x01	; 1
    10c2:	67 e0       	ldi	r22, 0x07	; 7
    10c4:	82 e2       	ldi	r24, 0x22	; 34
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	63 d3       	rcall	.+1734   	; 0x1790 <Gpio_initPin>
    10ca:	41 e0       	ldi	r20, 0x01	; 1
    10cc:	66 e0       	ldi	r22, 0x06	; 6
    10ce:	82 e2       	ldi	r24, 0x22	; 34
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	5e d3       	rcall	.+1724   	; 0x1790 <Gpio_initPin>
    10d4:	41 e0       	ldi	r20, 0x01	; 1
    10d6:	65 e0       	ldi	r22, 0x05	; 5
    10d8:	82 e2       	ldi	r24, 0x22	; 34
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	59 d3       	rcall	.+1714   	; 0x1790 <Gpio_initPin>
    10de:	41 e0       	ldi	r20, 0x01	; 1
    10e0:	64 e0       	ldi	r22, 0x04	; 4
    10e2:	82 e2       	ldi	r24, 0x22	; 34
    10e4:	90 e0       	ldi	r25, 0x00	; 0
    10e6:	54 d3       	rcall	.+1704   	; 0x1790 <Gpio_initPin>
    10e8:	61 e0       	ldi	r22, 0x01	; 1
    10ea:	81 e6       	ldi	r24, 0x61	; 97
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	47 c3       	rjmp	.+1678   	; 0x177e <Gpio_initPort>
    10f0:	08 95       	ret

000010f2 <FND_display>:
    10f2:	0f 93       	push	r16
    10f4:	1f 93       	push	r17
    10f6:	cf 93       	push	r28
    10f8:	df 93       	push	r29
    10fa:	cd b7       	in	r28, 0x3d	; 61
    10fc:	de b7       	in	r29, 0x3e	; 62
    10fe:	2b 97       	sbiw	r28, 0x0b	; 11
    1100:	0f b6       	in	r0, 0x3f	; 63
    1102:	f8 94       	cli
    1104:	de bf       	out	0x3e, r29	; 62
    1106:	0f be       	out	0x3f, r0	; 63
    1108:	cd bf       	out	0x3d, r28	; 61
    110a:	8c 01       	movw	r16, r24
    110c:	8b e0       	ldi	r24, 0x0B	; 11
    110e:	ef e0       	ldi	r30, 0x0F	; 15
    1110:	f1 e0       	ldi	r31, 0x01	; 1
    1112:	de 01       	movw	r26, r28
    1114:	11 96       	adiw	r26, 0x01	; 1
    1116:	01 90       	ld	r0, Z+
    1118:	0d 92       	st	X+, r0
    111a:	8a 95       	dec	r24
    111c:	e1 f7       	brne	.-8      	; 0x1116 <__stack+0x17>
    111e:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <fndDigitState.1774>
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	01 96       	adiw	r24, 0x01	; 1
    1126:	65 e0       	ldi	r22, 0x05	; 5
    1128:	70 e0       	ldi	r23, 0x00	; 0
    112a:	2a d5       	rcall	.+2644   	; 0x1b80 <__divmodhi4>
    112c:	80 93 a0 02 	sts	0x02A0, r24	; 0x8002a0 <fndDigitState.1774>
    1130:	41 e0       	ldi	r20, 0x01	; 1
    1132:	67 e0       	ldi	r22, 0x07	; 7
    1134:	83 e2       	ldi	r24, 0x23	; 35
    1136:	90 e0       	ldi	r25, 0x00	; 0
    1138:	48 d3       	rcall	.+1680   	; 0x17ca <Gpio_writePin>
    113a:	41 e0       	ldi	r20, 0x01	; 1
    113c:	66 e0       	ldi	r22, 0x06	; 6
    113e:	83 e2       	ldi	r24, 0x23	; 35
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	43 d3       	rcall	.+1670   	; 0x17ca <Gpio_writePin>
    1144:	41 e0       	ldi	r20, 0x01	; 1
    1146:	65 e0       	ldi	r22, 0x05	; 5
    1148:	83 e2       	ldi	r24, 0x23	; 35
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	3e d3       	rcall	.+1660   	; 0x17ca <Gpio_writePin>
    114e:	41 e0       	ldi	r20, 0x01	; 1
    1150:	64 e0       	ldi	r22, 0x04	; 4
    1152:	83 e2       	ldi	r24, 0x23	; 35
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	39 d3       	rcall	.+1650   	; 0x17ca <Gpio_writePin>
    1158:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <fndDigitState.1774>
    115c:	82 30       	cpi	r24, 0x02	; 2
    115e:	09 f4       	brne	.+2      	; 0x1162 <__stack+0x63>
    1160:	7a c0       	rjmp	.+244    	; 0x1256 <__stack+0x157>
    1162:	30 f4       	brcc	.+12     	; 0x1170 <__stack+0x71>
    1164:	88 23       	and	r24, r24
    1166:	59 f0       	breq	.+22     	; 0x117e <__stack+0x7f>
    1168:	81 30       	cpi	r24, 0x01	; 1
    116a:	09 f4       	brne	.+2      	; 0x116e <__stack+0x6f>
    116c:	41 c0       	rjmp	.+130    	; 0x11f0 <__stack+0xf1>
    116e:	de c0       	rjmp	.+444    	; 0x132c <__stack+0x22d>
    1170:	83 30       	cpi	r24, 0x03	; 3
    1172:	09 f4       	brne	.+2      	; 0x1176 <__stack+0x77>
    1174:	a1 c0       	rjmp	.+322    	; 0x12b8 <__stack+0x1b9>
    1176:	84 30       	cpi	r24, 0x04	; 4
    1178:	09 f4       	brne	.+2      	; 0x117c <__stack+0x7d>
    117a:	c6 c0       	rjmp	.+396    	; 0x1308 <__stack+0x209>
    117c:	d7 c0       	rjmp	.+430    	; 0x132c <__stack+0x22d>
    117e:	98 01       	movw	r18, r16
    1180:	36 95       	lsr	r19
    1182:	27 95       	ror	r18
    1184:	36 95       	lsr	r19
    1186:	27 95       	ror	r18
    1188:	36 95       	lsr	r19
    118a:	27 95       	ror	r18
    118c:	a5 ec       	ldi	r26, 0xC5	; 197
    118e:	b0 e2       	ldi	r27, 0x20	; 32
    1190:	26 d5       	rcall	.+2636   	; 0x1bde <__umulhisi3>
    1192:	ac 01       	movw	r20, r24
    1194:	52 95       	swap	r21
    1196:	42 95       	swap	r20
    1198:	4f 70       	andi	r20, 0x0F	; 15
    119a:	45 27       	eor	r20, r21
    119c:	5f 70       	andi	r21, 0x0F	; 15
    119e:	45 27       	eor	r20, r21
    11a0:	9a 01       	movw	r18, r20
    11a2:	ad ec       	ldi	r26, 0xCD	; 205
    11a4:	bc ec       	ldi	r27, 0xCC	; 204
    11a6:	1b d5       	rcall	.+2614   	; 0x1bde <__umulhisi3>
    11a8:	96 95       	lsr	r25
    11aa:	87 95       	ror	r24
    11ac:	96 95       	lsr	r25
    11ae:	87 95       	ror	r24
    11b0:	96 95       	lsr	r25
    11b2:	87 95       	ror	r24
    11b4:	9c 01       	movw	r18, r24
    11b6:	22 0f       	add	r18, r18
    11b8:	33 1f       	adc	r19, r19
    11ba:	88 0f       	add	r24, r24
    11bc:	99 1f       	adc	r25, r25
    11be:	88 0f       	add	r24, r24
    11c0:	99 1f       	adc	r25, r25
    11c2:	88 0f       	add	r24, r24
    11c4:	99 1f       	adc	r25, r25
    11c6:	82 0f       	add	r24, r18
    11c8:	93 1f       	adc	r25, r19
    11ca:	9a 01       	movw	r18, r20
    11cc:	28 1b       	sub	r18, r24
    11ce:	39 0b       	sbc	r19, r25
    11d0:	e1 e0       	ldi	r30, 0x01	; 1
    11d2:	f0 e0       	ldi	r31, 0x00	; 0
    11d4:	ec 0f       	add	r30, r28
    11d6:	fd 1f       	adc	r31, r29
    11d8:	e2 0f       	add	r30, r18
    11da:	f3 1f       	adc	r31, r19
    11dc:	60 81       	ld	r22, Z
    11de:	82 e6       	ldi	r24, 0x62	; 98
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	f0 d2       	rcall	.+1504   	; 0x17c4 <Gpio_writePort>
    11e4:	40 e0       	ldi	r20, 0x00	; 0
    11e6:	64 e0       	ldi	r22, 0x04	; 4
    11e8:	83 e2       	ldi	r24, 0x23	; 35
    11ea:	90 e0       	ldi	r25, 0x00	; 0
    11ec:	ee d2       	rcall	.+1500   	; 0x17ca <Gpio_writePin>
    11ee:	9e c0       	rjmp	.+316    	; 0x132c <__stack+0x22d>
    11f0:	98 01       	movw	r18, r16
    11f2:	36 95       	lsr	r19
    11f4:	27 95       	ror	r18
    11f6:	36 95       	lsr	r19
    11f8:	27 95       	ror	r18
    11fa:	ab e7       	ldi	r26, 0x7B	; 123
    11fc:	b4 e1       	ldi	r27, 0x14	; 20
    11fe:	ef d4       	rcall	.+2526   	; 0x1bde <__umulhisi3>
    1200:	ac 01       	movw	r20, r24
    1202:	56 95       	lsr	r21
    1204:	47 95       	ror	r20
    1206:	9a 01       	movw	r18, r20
    1208:	ad ec       	ldi	r26, 0xCD	; 205
    120a:	bc ec       	ldi	r27, 0xCC	; 204
    120c:	e8 d4       	rcall	.+2512   	; 0x1bde <__umulhisi3>
    120e:	96 95       	lsr	r25
    1210:	87 95       	ror	r24
    1212:	96 95       	lsr	r25
    1214:	87 95       	ror	r24
    1216:	96 95       	lsr	r25
    1218:	87 95       	ror	r24
    121a:	9c 01       	movw	r18, r24
    121c:	22 0f       	add	r18, r18
    121e:	33 1f       	adc	r19, r19
    1220:	88 0f       	add	r24, r24
    1222:	99 1f       	adc	r25, r25
    1224:	88 0f       	add	r24, r24
    1226:	99 1f       	adc	r25, r25
    1228:	88 0f       	add	r24, r24
    122a:	99 1f       	adc	r25, r25
    122c:	82 0f       	add	r24, r18
    122e:	93 1f       	adc	r25, r19
    1230:	9a 01       	movw	r18, r20
    1232:	28 1b       	sub	r18, r24
    1234:	39 0b       	sbc	r19, r25
    1236:	e1 e0       	ldi	r30, 0x01	; 1
    1238:	f0 e0       	ldi	r31, 0x00	; 0
    123a:	ec 0f       	add	r30, r28
    123c:	fd 1f       	adc	r31, r29
    123e:	e2 0f       	add	r30, r18
    1240:	f3 1f       	adc	r31, r19
    1242:	60 81       	ld	r22, Z
    1244:	82 e6       	ldi	r24, 0x62	; 98
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	bd d2       	rcall	.+1402   	; 0x17c4 <Gpio_writePort>
    124a:	40 e0       	ldi	r20, 0x00	; 0
    124c:	65 e0       	ldi	r22, 0x05	; 5
    124e:	83 e2       	ldi	r24, 0x23	; 35
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	bb d2       	rcall	.+1398   	; 0x17ca <Gpio_writePin>
    1254:	6b c0       	rjmp	.+214    	; 0x132c <__stack+0x22d>
    1256:	98 01       	movw	r18, r16
    1258:	ad ec       	ldi	r26, 0xCD	; 205
    125a:	bc ec       	ldi	r27, 0xCC	; 204
    125c:	c0 d4       	rcall	.+2432   	; 0x1bde <__umulhisi3>
    125e:	ac 01       	movw	r20, r24
    1260:	56 95       	lsr	r21
    1262:	47 95       	ror	r20
    1264:	56 95       	lsr	r21
    1266:	47 95       	ror	r20
    1268:	56 95       	lsr	r21
    126a:	47 95       	ror	r20
    126c:	9a 01       	movw	r18, r20
    126e:	b7 d4       	rcall	.+2414   	; 0x1bde <__umulhisi3>
    1270:	96 95       	lsr	r25
    1272:	87 95       	ror	r24
    1274:	96 95       	lsr	r25
    1276:	87 95       	ror	r24
    1278:	96 95       	lsr	r25
    127a:	87 95       	ror	r24
    127c:	9c 01       	movw	r18, r24
    127e:	22 0f       	add	r18, r18
    1280:	33 1f       	adc	r19, r19
    1282:	88 0f       	add	r24, r24
    1284:	99 1f       	adc	r25, r25
    1286:	88 0f       	add	r24, r24
    1288:	99 1f       	adc	r25, r25
    128a:	88 0f       	add	r24, r24
    128c:	99 1f       	adc	r25, r25
    128e:	82 0f       	add	r24, r18
    1290:	93 1f       	adc	r25, r19
    1292:	9a 01       	movw	r18, r20
    1294:	28 1b       	sub	r18, r24
    1296:	39 0b       	sbc	r19, r25
    1298:	e1 e0       	ldi	r30, 0x01	; 1
    129a:	f0 e0       	ldi	r31, 0x00	; 0
    129c:	ec 0f       	add	r30, r28
    129e:	fd 1f       	adc	r31, r29
    12a0:	e2 0f       	add	r30, r18
    12a2:	f3 1f       	adc	r31, r19
    12a4:	60 81       	ld	r22, Z
    12a6:	82 e6       	ldi	r24, 0x62	; 98
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	8c d2       	rcall	.+1304   	; 0x17c4 <Gpio_writePort>
    12ac:	40 e0       	ldi	r20, 0x00	; 0
    12ae:	66 e0       	ldi	r22, 0x06	; 6
    12b0:	83 e2       	ldi	r24, 0x23	; 35
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	8a d2       	rcall	.+1300   	; 0x17ca <Gpio_writePin>
    12b6:	3a c0       	rjmp	.+116    	; 0x132c <__stack+0x22d>
    12b8:	98 01       	movw	r18, r16
    12ba:	ad ec       	ldi	r26, 0xCD	; 205
    12bc:	bc ec       	ldi	r27, 0xCC	; 204
    12be:	8f d4       	rcall	.+2334   	; 0x1bde <__umulhisi3>
    12c0:	96 95       	lsr	r25
    12c2:	87 95       	ror	r24
    12c4:	96 95       	lsr	r25
    12c6:	87 95       	ror	r24
    12c8:	96 95       	lsr	r25
    12ca:	87 95       	ror	r24
    12cc:	9c 01       	movw	r18, r24
    12ce:	22 0f       	add	r18, r18
    12d0:	33 1f       	adc	r19, r19
    12d2:	88 0f       	add	r24, r24
    12d4:	99 1f       	adc	r25, r25
    12d6:	88 0f       	add	r24, r24
    12d8:	99 1f       	adc	r25, r25
    12da:	88 0f       	add	r24, r24
    12dc:	99 1f       	adc	r25, r25
    12de:	82 0f       	add	r24, r18
    12e0:	93 1f       	adc	r25, r19
    12e2:	98 01       	movw	r18, r16
    12e4:	28 1b       	sub	r18, r24
    12e6:	39 0b       	sbc	r19, r25
    12e8:	e1 e0       	ldi	r30, 0x01	; 1
    12ea:	f0 e0       	ldi	r31, 0x00	; 0
    12ec:	ec 0f       	add	r30, r28
    12ee:	fd 1f       	adc	r31, r29
    12f0:	e2 0f       	add	r30, r18
    12f2:	f3 1f       	adc	r31, r19
    12f4:	60 81       	ld	r22, Z
    12f6:	82 e6       	ldi	r24, 0x62	; 98
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	64 d2       	rcall	.+1224   	; 0x17c4 <Gpio_writePort>
    12fc:	40 e0       	ldi	r20, 0x00	; 0
    12fe:	67 e0       	ldi	r22, 0x07	; 7
    1300:	83 e2       	ldi	r24, 0x23	; 35
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	62 d2       	rcall	.+1220   	; 0x17ca <Gpio_writePin>
    1306:	12 c0       	rjmp	.+36     	; 0x132c <__stack+0x22d>
    1308:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <fndColonFlag>
    130c:	88 23       	and	r24, r24
    130e:	29 f0       	breq	.+10     	; 0x131a <__stack+0x21b>
    1310:	60 e8       	ldi	r22, 0x80	; 128
    1312:	82 e6       	ldi	r24, 0x62	; 98
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	56 d2       	rcall	.+1196   	; 0x17c4 <Gpio_writePort>
    1318:	04 c0       	rjmp	.+8      	; 0x1322 <__stack+0x223>
    131a:	60 e0       	ldi	r22, 0x00	; 0
    131c:	82 e6       	ldi	r24, 0x62	; 98
    131e:	90 e0       	ldi	r25, 0x00	; 0
    1320:	51 d2       	rcall	.+1186   	; 0x17c4 <Gpio_writePort>
    1322:	40 e0       	ldi	r20, 0x00	; 0
    1324:	65 e0       	ldi	r22, 0x05	; 5
    1326:	83 e2       	ldi	r24, 0x23	; 35
    1328:	90 e0       	ldi	r25, 0x00	; 0
    132a:	4f d2       	rcall	.+1182   	; 0x17ca <Gpio_writePin>
    132c:	2b 96       	adiw	r28, 0x0b	; 11
    132e:	0f b6       	in	r0, 0x3f	; 63
    1330:	f8 94       	cli
    1332:	de bf       	out	0x3e, r29	; 62
    1334:	0f be       	out	0x3f, r0	; 63
    1336:	cd bf       	out	0x3d, r28	; 61
    1338:	df 91       	pop	r29
    133a:	cf 91       	pop	r28
    133c:	1f 91       	pop	r17
    133e:	0f 91       	pop	r16
    1340:	08 95       	ret

00001342 <FND_setFndData>:
    1342:	90 93 a2 02 	sts	0x02A2, r25	; 0x8002a2 <fndData+0x1>
    1346:	80 93 a1 02 	sts	0x02A1, r24	; 0x8002a1 <fndData>
    134a:	08 95       	ret

0000134c <FND_ISR_Process>:
    134c:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <fndData>
    1350:	90 91 a2 02 	lds	r25, 0x02A2	; 0x8002a2 <fndData+0x1>
    1354:	ce ce       	rjmp	.-612    	; 0x10f2 <FND_display>
    1356:	08 95       	ret

00001358 <GPIO_LCD_init>:
    1358:	41 e0       	ldi	r20, 0x01	; 1
    135a:	65 e0       	ldi	r22, 0x05	; 5
    135c:	87 e3       	ldi	r24, 0x37	; 55
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	17 d2       	rcall	.+1070   	; 0x1790 <Gpio_initPin>
    1362:	41 e0       	ldi	r20, 0x01	; 1
    1364:	66 e0       	ldi	r22, 0x06	; 6
    1366:	87 e3       	ldi	r24, 0x37	; 55
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	12 d2       	rcall	.+1060   	; 0x1790 <Gpio_initPin>
    136c:	41 e0       	ldi	r20, 0x01	; 1
    136e:	67 e0       	ldi	r22, 0x07	; 7
    1370:	87 e3       	ldi	r24, 0x37	; 55
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	0d d2       	rcall	.+1050   	; 0x1790 <Gpio_initPin>
    1376:	61 e0       	ldi	r22, 0x01	; 1
    1378:	84 e3       	ldi	r24, 0x34	; 52
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	00 c2       	rjmp	.+1024   	; 0x177e <Gpio_initPort>
    137e:	08 95       	ret

00001380 <gpio_writeControlData>:
    1380:	68 2f       	mov	r22, r24
    1382:	88 e3       	ldi	r24, 0x38	; 56
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	1e c2       	rjmp	.+1084   	; 0x17c4 <Gpio_writePort>
    1388:	08 95       	ret

0000138a <gpio_writeData>:
    138a:	68 2f       	mov	r22, r24
    138c:	85 e3       	ldi	r24, 0x35	; 53
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	19 c2       	rjmp	.+1074   	; 0x17c4 <Gpio_writePort>
    1392:	08 95       	ret

00001394 <LCD_cmdMode>:
    1394:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <lcdControlData>
    1398:	8f 7d       	andi	r24, 0xDF	; 223
    139a:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <lcdControlData>
    139e:	f0 cf       	rjmp	.-32     	; 0x1380 <gpio_writeControlData>
    13a0:	08 95       	ret

000013a2 <LCD_charMode>:
    13a2:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <lcdControlData>
    13a6:	80 62       	ori	r24, 0x20	; 32
    13a8:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <lcdControlData>
    13ac:	e9 cf       	rjmp	.-46     	; 0x1380 <gpio_writeControlData>
    13ae:	08 95       	ret

000013b0 <LCD_writeMode>:
    13b0:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <lcdControlData>
    13b4:	8f 7b       	andi	r24, 0xBF	; 191
    13b6:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <lcdControlData>
    13ba:	e2 cf       	rjmp	.-60     	; 0x1380 <gpio_writeControlData>
    13bc:	08 95       	ret

000013be <LCD_enableHigh>:
    13be:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <lcdControlData>
    13c2:	80 68       	ori	r24, 0x80	; 128
    13c4:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <lcdControlData>
    13c8:	db df       	rcall	.-74     	; 0x1380 <gpio_writeControlData>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    13ca:	8f e9       	ldi	r24, 0x9F	; 159
    13cc:	9f e0       	ldi	r25, 0x0F	; 15
    13ce:	01 97       	sbiw	r24, 0x01	; 1
    13d0:	f1 f7       	brne	.-4      	; 0x13ce <LCD_enableHigh+0x10>
    13d2:	00 c0       	rjmp	.+0      	; 0x13d4 <LCD_enableHigh+0x16>
    13d4:	00 00       	nop
    13d6:	08 95       	ret

000013d8 <LCD_writeByte>:
    13d8:	d8 cf       	rjmp	.-80     	; 0x138a <gpio_writeData>
    13da:	08 95       	ret

000013dc <LCD_enableLow>:
    13dc:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <lcdControlData>
    13e0:	8f 77       	andi	r24, 0x7F	; 127
    13e2:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <lcdControlData>
    13e6:	cc df       	rcall	.-104    	; 0x1380 <gpio_writeControlData>
    13e8:	8f e9       	ldi	r24, 0x9F	; 159
    13ea:	9f e0       	ldi	r25, 0x0F	; 15
    13ec:	01 97       	sbiw	r24, 0x01	; 1
    13ee:	f1 f7       	brne	.-4      	; 0x13ec <LCD_enableLow+0x10>
    13f0:	00 c0       	rjmp	.+0      	; 0x13f2 <LCD_enableLow+0x16>
    13f2:	00 00       	nop
    13f4:	08 95       	ret

000013f6 <LCD_WriteCmdData>:
    13f6:	cf 93       	push	r28
    13f8:	c8 2f       	mov	r28, r24
    13fa:	cc df       	rcall	.-104    	; 0x1394 <LCD_cmdMode>
    13fc:	d9 df       	rcall	.-78     	; 0x13b0 <LCD_writeMode>
    13fe:	df df       	rcall	.-66     	; 0x13be <LCD_enableHigh>
    1400:	8c 2f       	mov	r24, r28
    1402:	ea df       	rcall	.-44     	; 0x13d8 <LCD_writeByte>
    1404:	eb df       	rcall	.-42     	; 0x13dc <LCD_enableLow>
    1406:	cf 91       	pop	r28
    1408:	08 95       	ret

0000140a <LCD_init>:
    140a:	a6 df       	rcall	.-180    	; 0x1358 <GPIO_LCD_init>
    140c:	8f e5       	ldi	r24, 0x5F	; 95
    140e:	9a ee       	ldi	r25, 0xEA	; 234
    1410:	01 97       	sbiw	r24, 0x01	; 1
    1412:	f1 f7       	brne	.-4      	; 0x1410 <LCD_init+0x6>
    1414:	00 c0       	rjmp	.+0      	; 0x1416 <LCD_init+0xc>
    1416:	00 00       	nop
    1418:	88 e3       	ldi	r24, 0x38	; 56
    141a:	ed df       	rcall	.-38     	; 0x13f6 <LCD_WriteCmdData>
    141c:	8f e1       	ldi	r24, 0x1F	; 31
    141e:	9e e4       	ldi	r25, 0x4E	; 78
    1420:	01 97       	sbiw	r24, 0x01	; 1
    1422:	f1 f7       	brne	.-4      	; 0x1420 <LCD_init+0x16>
    1424:	00 c0       	rjmp	.+0      	; 0x1426 <LCD_init+0x1c>
    1426:	00 00       	nop
    1428:	88 e3       	ldi	r24, 0x38	; 56
    142a:	e5 df       	rcall	.-54     	; 0x13f6 <LCD_WriteCmdData>
    142c:	8f e9       	ldi	r24, 0x9F	; 159
    142e:	9f e0       	ldi	r25, 0x0F	; 15
    1430:	01 97       	sbiw	r24, 0x01	; 1
    1432:	f1 f7       	brne	.-4      	; 0x1430 <LCD_init+0x26>
    1434:	00 c0       	rjmp	.+0      	; 0x1436 <LCD_init+0x2c>
    1436:	00 00       	nop
    1438:	88 e3       	ldi	r24, 0x38	; 56
    143a:	dd df       	rcall	.-70     	; 0x13f6 <LCD_WriteCmdData>
    143c:	88 e3       	ldi	r24, 0x38	; 56
    143e:	db df       	rcall	.-74     	; 0x13f6 <LCD_WriteCmdData>
    1440:	88 e0       	ldi	r24, 0x08	; 8
    1442:	d9 df       	rcall	.-78     	; 0x13f6 <LCD_WriteCmdData>
    1444:	81 e0       	ldi	r24, 0x01	; 1
    1446:	d7 df       	rcall	.-82     	; 0x13f6 <LCD_WriteCmdData>
    1448:	86 e0       	ldi	r24, 0x06	; 6
    144a:	d5 df       	rcall	.-86     	; 0x13f6 <LCD_WriteCmdData>
    144c:	8c e0       	ldi	r24, 0x0C	; 12
    144e:	d3 cf       	rjmp	.-90     	; 0x13f6 <LCD_WriteCmdData>
    1450:	08 95       	ret

00001452 <LCD_WriteCharData>:
    1452:	cf 93       	push	r28
    1454:	c8 2f       	mov	r28, r24
    1456:	a5 df       	rcall	.-182    	; 0x13a2 <LCD_charMode>
    1458:	ab df       	rcall	.-170    	; 0x13b0 <LCD_writeMode>
    145a:	b1 df       	rcall	.-158    	; 0x13be <LCD_enableHigh>
    145c:	8c 2f       	mov	r24, r28
    145e:	bc df       	rcall	.-136    	; 0x13d8 <LCD_writeByte>
    1460:	bd df       	rcall	.-134    	; 0x13dc <LCD_enableLow>
    1462:	cf 91       	pop	r28
    1464:	08 95       	ret

00001466 <LCD_writeString>:
    1466:	0f 93       	push	r16
    1468:	1f 93       	push	r17
    146a:	cf 93       	push	r28
    146c:	df 93       	push	r29
    146e:	8c 01       	movw	r16, r24
    1470:	c0 e0       	ldi	r28, 0x00	; 0
    1472:	d0 e0       	ldi	r29, 0x00	; 0
    1474:	02 c0       	rjmp	.+4      	; 0x147a <LCD_writeString+0x14>
    1476:	ed df       	rcall	.-38     	; 0x1452 <LCD_WriteCharData>
    1478:	21 96       	adiw	r28, 0x01	; 1
    147a:	f8 01       	movw	r30, r16
    147c:	ec 0f       	add	r30, r28
    147e:	fd 1f       	adc	r31, r29
    1480:	80 81       	ld	r24, Z
    1482:	81 11       	cpse	r24, r1
    1484:	f8 cf       	rjmp	.-16     	; 0x1476 <LCD_writeString+0x10>
    1486:	df 91       	pop	r29
    1488:	cf 91       	pop	r28
    148a:	1f 91       	pop	r17
    148c:	0f 91       	pop	r16
    148e:	08 95       	ret

00001490 <LCD_gotoXY>:
    1490:	6f 70       	andi	r22, 0x0F	; 15
    1492:	81 70       	andi	r24, 0x01	; 1
    1494:	90 e4       	ldi	r25, 0x40	; 64
    1496:	89 9f       	mul	r24, r25
    1498:	60 0d       	add	r22, r0
    149a:	11 24       	eor	r1, r1
    149c:	86 2f       	mov	r24, r22
    149e:	80 58       	subi	r24, 0x80	; 128
    14a0:	aa cf       	rjmp	.-172    	; 0x13f6 <LCD_WriteCmdData>
    14a2:	08 95       	ret

000014a4 <LCD_writeStringXY>:
    14a4:	cf 93       	push	r28
    14a6:	df 93       	push	r29
    14a8:	ea 01       	movw	r28, r20
    14aa:	f2 df       	rcall	.-28     	; 0x1490 <LCD_gotoXY>
    14ac:	ce 01       	movw	r24, r28
    14ae:	db df       	rcall	.-74     	; 0x1466 <LCD_writeString>
    14b0:	df 91       	pop	r29
    14b2:	cf 91       	pop	r28
    14b4:	08 95       	ret

000014b6 <LCD_displayClear>:
    14b6:	81 e0       	ldi	r24, 0x01	; 1
    14b8:	9e cf       	rjmp	.-196    	; 0x13f6 <LCD_WriteCmdData>
    14ba:	08 95       	ret

000014bc <LCD_sendToI2C>:
    14bc:	d3 c1       	rjmp	.+934    	; 0x1864 <I2C_txByte>
    14be:	08 95       	ret

000014c0 <LCD_I2C_BackLightOn>:
    14c0:	60 91 56 03 	lds	r22, 0x0356	; 0x800356 <lcdControlData>
    14c4:	68 60       	ori	r22, 0x08	; 8
    14c6:	60 93 56 03 	sts	0x0356, r22	; 0x800356 <lcdControlData>
    14ca:	8e e4       	ldi	r24, 0x4E	; 78
    14cc:	f7 cf       	rjmp	.-18     	; 0x14bc <LCD_sendToI2C>
    14ce:	08 95       	ret

000014d0 <LCD_I2C_cmdMode>:
    14d0:	60 91 56 03 	lds	r22, 0x0356	; 0x800356 <lcdControlData>
    14d4:	6e 7f       	andi	r22, 0xFE	; 254
    14d6:	60 93 56 03 	sts	0x0356, r22	; 0x800356 <lcdControlData>
    14da:	8e e4       	ldi	r24, 0x4E	; 78
    14dc:	ef cf       	rjmp	.-34     	; 0x14bc <LCD_sendToI2C>
    14de:	08 95       	ret

000014e0 <LCD_I2C_charMode>:
    14e0:	60 91 56 03 	lds	r22, 0x0356	; 0x800356 <lcdControlData>
    14e4:	61 60       	ori	r22, 0x01	; 1
    14e6:	60 93 56 03 	sts	0x0356, r22	; 0x800356 <lcdControlData>
    14ea:	8e e4       	ldi	r24, 0x4E	; 78
    14ec:	e7 cf       	rjmp	.-50     	; 0x14bc <LCD_sendToI2C>
    14ee:	08 95       	ret

000014f0 <LCD_I2C_writeMode>:
    14f0:	60 91 56 03 	lds	r22, 0x0356	; 0x800356 <lcdControlData>
    14f4:	6d 7f       	andi	r22, 0xFD	; 253
    14f6:	60 93 56 03 	sts	0x0356, r22	; 0x800356 <lcdControlData>
    14fa:	8e e4       	ldi	r24, 0x4E	; 78
    14fc:	df cf       	rjmp	.-66     	; 0x14bc <LCD_sendToI2C>
    14fe:	08 95       	ret

00001500 <LCD_I2C_enableHigh>:
    1500:	60 91 56 03 	lds	r22, 0x0356	; 0x800356 <lcdControlData>
    1504:	64 60       	ori	r22, 0x04	; 4
    1506:	60 93 56 03 	sts	0x0356, r22	; 0x800356 <lcdControlData>
    150a:	8e e4       	ldi	r24, 0x4E	; 78
    150c:	d7 df       	rcall	.-82     	; 0x14bc <LCD_sendToI2C>
    150e:	8f e9       	ldi	r24, 0x9F	; 159
    1510:	9f e0       	ldi	r25, 0x0F	; 15
    1512:	01 97       	sbiw	r24, 0x01	; 1
    1514:	f1 f7       	brne	.-4      	; 0x1512 <LCD_I2C_enableHigh+0x12>
    1516:	00 c0       	rjmp	.+0      	; 0x1518 <LCD_I2C_enableHigh+0x18>
    1518:	00 00       	nop
    151a:	08 95       	ret

0000151c <LCD_I2C_enableLow>:
    151c:	60 91 56 03 	lds	r22, 0x0356	; 0x800356 <lcdControlData>
    1520:	6b 7f       	andi	r22, 0xFB	; 251
    1522:	60 93 56 03 	sts	0x0356, r22	; 0x800356 <lcdControlData>
    1526:	8e e4       	ldi	r24, 0x4E	; 78
    1528:	c9 df       	rcall	.-110    	; 0x14bc <LCD_sendToI2C>
    152a:	8f e9       	ldi	r24, 0x9F	; 159
    152c:	9f e0       	ldi	r25, 0x0F	; 15
    152e:	01 97       	sbiw	r24, 0x01	; 1
    1530:	f1 f7       	brne	.-4      	; 0x152e <LCD_I2C_enableLow+0x12>
    1532:	00 c0       	rjmp	.+0      	; 0x1534 <LCD_I2C_enableLow+0x18>
    1534:	00 00       	nop
    1536:	08 95       	ret

00001538 <LCD_I2C_writeNibble>:
    1538:	cf 93       	push	r28
    153a:	c8 2f       	mov	r28, r24
    153c:	e1 df       	rcall	.-62     	; 0x1500 <LCD_I2C_enableHigh>
    153e:	60 91 56 03 	lds	r22, 0x0356	; 0x800356 <lcdControlData>
    1542:	6f 70       	andi	r22, 0x0F	; 15
    1544:	c0 7f       	andi	r28, 0xF0	; 240
    1546:	6c 2b       	or	r22, r28
    1548:	8e e4       	ldi	r24, 0x4E	; 78
    154a:	b8 df       	rcall	.-144    	; 0x14bc <LCD_sendToI2C>
    154c:	e7 df       	rcall	.-50     	; 0x151c <LCD_I2C_enableLow>
    154e:	cf 91       	pop	r28
    1550:	08 95       	ret

00001552 <LCD_I2C_writeByte>:
    1552:	cf 93       	push	r28
    1554:	c8 2f       	mov	r28, r24
    1556:	f0 df       	rcall	.-32     	; 0x1538 <LCD_I2C_writeNibble>
    1558:	8c 2f       	mov	r24, r28
    155a:	82 95       	swap	r24
    155c:	80 7f       	andi	r24, 0xF0	; 240
    155e:	ec df       	rcall	.-40     	; 0x1538 <LCD_I2C_writeNibble>
    1560:	cf 91       	pop	r28
    1562:	08 95       	ret

00001564 <LCD_I2C_WriteCmdData>:
    1564:	cf 93       	push	r28
    1566:	c8 2f       	mov	r28, r24
    1568:	b3 df       	rcall	.-154    	; 0x14d0 <LCD_I2C_cmdMode>
    156a:	c2 df       	rcall	.-124    	; 0x14f0 <LCD_I2C_writeMode>
    156c:	8c 2f       	mov	r24, r28
    156e:	f1 df       	rcall	.-30     	; 0x1552 <LCD_I2C_writeByte>
    1570:	cf 91       	pop	r28
    1572:	08 95       	ret

00001574 <LCD_I2C_init>:
    1574:	10 92 56 03 	sts	0x0356, r1	; 0x800356 <lcdControlData>
    1578:	4c d1       	rcall	.+664    	; 0x1812 <I2C_init>
    157a:	8f e5       	ldi	r24, 0x5F	; 95
    157c:	9a ee       	ldi	r25, 0xEA	; 234
    157e:	01 97       	sbiw	r24, 0x01	; 1
    1580:	f1 f7       	brne	.-4      	; 0x157e <LCD_I2C_init+0xa>
    1582:	00 c0       	rjmp	.+0      	; 0x1584 <LCD_I2C_init+0x10>
    1584:	00 00       	nop
    1586:	a4 df       	rcall	.-184    	; 0x14d0 <LCD_I2C_cmdMode>
    1588:	b3 df       	rcall	.-154    	; 0x14f0 <LCD_I2C_writeMode>
    158a:	88 e3       	ldi	r24, 0x38	; 56
    158c:	d5 df       	rcall	.-86     	; 0x1538 <LCD_I2C_writeNibble>
    158e:	8f e1       	ldi	r24, 0x1F	; 31
    1590:	9e e4       	ldi	r25, 0x4E	; 78
    1592:	01 97       	sbiw	r24, 0x01	; 1
    1594:	f1 f7       	brne	.-4      	; 0x1592 <LCD_I2C_init+0x1e>
    1596:	00 c0       	rjmp	.+0      	; 0x1598 <LCD_I2C_init+0x24>
    1598:	00 00       	nop
    159a:	88 e3       	ldi	r24, 0x38	; 56
    159c:	cd df       	rcall	.-102    	; 0x1538 <LCD_I2C_writeNibble>
    159e:	8f e9       	ldi	r24, 0x9F	; 159
    15a0:	9f e0       	ldi	r25, 0x0F	; 15
    15a2:	01 97       	sbiw	r24, 0x01	; 1
    15a4:	f1 f7       	brne	.-4      	; 0x15a2 <LCD_I2C_init+0x2e>
    15a6:	00 c0       	rjmp	.+0      	; 0x15a8 <LCD_I2C_init+0x34>
    15a8:	00 00       	nop
    15aa:	88 e3       	ldi	r24, 0x38	; 56
    15ac:	c5 df       	rcall	.-118    	; 0x1538 <LCD_I2C_writeNibble>
    15ae:	88 e2       	ldi	r24, 0x28	; 40
    15b0:	c3 df       	rcall	.-122    	; 0x1538 <LCD_I2C_writeNibble>
    15b2:	88 e2       	ldi	r24, 0x28	; 40
    15b4:	d7 df       	rcall	.-82     	; 0x1564 <LCD_I2C_WriteCmdData>
    15b6:	88 e0       	ldi	r24, 0x08	; 8
    15b8:	d5 df       	rcall	.-86     	; 0x1564 <LCD_I2C_WriteCmdData>
    15ba:	81 e0       	ldi	r24, 0x01	; 1
    15bc:	d3 df       	rcall	.-90     	; 0x1564 <LCD_I2C_WriteCmdData>
    15be:	86 e0       	ldi	r24, 0x06	; 6
    15c0:	d1 df       	rcall	.-94     	; 0x1564 <LCD_I2C_WriteCmdData>
    15c2:	8c e0       	ldi	r24, 0x0C	; 12
    15c4:	cf df       	rcall	.-98     	; 0x1564 <LCD_I2C_WriteCmdData>
    15c6:	7c cf       	rjmp	.-264    	; 0x14c0 <LCD_I2C_BackLightOn>
    15c8:	08 95       	ret

000015ca <LCD_I2C_WriteCharData>:
    15ca:	cf 93       	push	r28
    15cc:	c8 2f       	mov	r28, r24
    15ce:	88 df       	rcall	.-240    	; 0x14e0 <LCD_I2C_charMode>
    15d0:	8f df       	rcall	.-226    	; 0x14f0 <LCD_I2C_writeMode>
    15d2:	8c 2f       	mov	r24, r28
    15d4:	be df       	rcall	.-132    	; 0x1552 <LCD_I2C_writeByte>
    15d6:	cf 91       	pop	r28
    15d8:	08 95       	ret

000015da <LCD_I2C_writeString>:
    15da:	0f 93       	push	r16
    15dc:	1f 93       	push	r17
    15de:	cf 93       	push	r28
    15e0:	df 93       	push	r29
    15e2:	8c 01       	movw	r16, r24
    15e4:	c0 e0       	ldi	r28, 0x00	; 0
    15e6:	d0 e0       	ldi	r29, 0x00	; 0
    15e8:	02 c0       	rjmp	.+4      	; 0x15ee <LCD_I2C_writeString+0x14>
    15ea:	ef df       	rcall	.-34     	; 0x15ca <LCD_I2C_WriteCharData>
    15ec:	21 96       	adiw	r28, 0x01	; 1
    15ee:	f8 01       	movw	r30, r16
    15f0:	ec 0f       	add	r30, r28
    15f2:	fd 1f       	adc	r31, r29
    15f4:	80 81       	ld	r24, Z
    15f6:	81 11       	cpse	r24, r1
    15f8:	f8 cf       	rjmp	.-16     	; 0x15ea <LCD_I2C_writeString+0x10>
    15fa:	df 91       	pop	r29
    15fc:	cf 91       	pop	r28
    15fe:	1f 91       	pop	r17
    1600:	0f 91       	pop	r16
    1602:	08 95       	ret

00001604 <LCD_I2C_gotoXY>:
    1604:	6f 70       	andi	r22, 0x0F	; 15
    1606:	81 70       	andi	r24, 0x01	; 1
    1608:	90 e4       	ldi	r25, 0x40	; 64
    160a:	89 9f       	mul	r24, r25
    160c:	60 0d       	add	r22, r0
    160e:	11 24       	eor	r1, r1
    1610:	86 2f       	mov	r24, r22
    1612:	80 58       	subi	r24, 0x80	; 128
    1614:	a7 cf       	rjmp	.-178    	; 0x1564 <LCD_I2C_WriteCmdData>
    1616:	08 95       	ret

00001618 <LCD_I2C_writeStringXY>:
    1618:	cf 93       	push	r28
    161a:	df 93       	push	r29
    161c:	ea 01       	movw	r28, r20
    161e:	f2 df       	rcall	.-28     	; 0x1604 <LCD_I2C_gotoXY>
    1620:	ce 01       	movw	r24, r28
    1622:	db df       	rcall	.-74     	; 0x15da <LCD_I2C_writeString>
    1624:	df 91       	pop	r29
    1626:	cf 91       	pop	r28
    1628:	08 95       	ret

0000162a <LCD_I2C_displayClear>:
    162a:	81 e0       	ldi	r24, 0x01	; 1
    162c:	9b cf       	rjmp	.-202    	; 0x1564 <LCD_I2C_WriteCmdData>
    162e:	08 95       	ret

00001630 <LED_Alloff>:
	Gpio_writePort(PORT, 0xff);
}

void LED_Alloff(volatile uint8_t *PORT) // 모든 것이 다 꺼지도록 함.
{
	Gpio_writePort(PORT, 0x00);
    1630:	60 e0       	ldi	r22, 0x00	; 0
    1632:	c8 c0       	rjmp	.+400    	; 0x17c4 <Gpio_writePort>
    1634:	08 95       	ret

00001636 <LED_outPutData>:
}

void LED_outPutData(volatile uint8_t *PORT, uint8_t data) // 임의로 지정한 값에 대해서만 켜지도록 함.
{
	Gpio_writePort(PORT, data);
    1636:	c6 c0       	rjmp	.+396    	; 0x17c4 <Gpio_writePort>
    1638:	08 95       	ret

0000163a <Motor_init>:
    163a:	41 e0       	ldi	r20, 0x01	; 1
    163c:	63 e0       	ldi	r22, 0x03	; 3
    163e:	82 e2       	ldi	r24, 0x22	; 34
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	a6 d0       	rcall	.+332    	; 0x1790 <Gpio_initPin>
    1644:	ea e8       	ldi	r30, 0x8A	; 138
    1646:	f0 e0       	ldi	r31, 0x00	; 0
    1648:	80 81       	ld	r24, Z
    164a:	83 60       	ori	r24, 0x03	; 3
    164c:	80 83       	st	Z, r24
    164e:	ab e8       	ldi	r26, 0x8B	; 139
    1650:	b0 e0       	ldi	r27, 0x00	; 0
    1652:	8c 91       	ld	r24, X
    1654:	82 60       	ori	r24, 0x02	; 2
    1656:	8c 93       	st	X, r24
    1658:	80 81       	ld	r24, Z
    165a:	88 61       	ori	r24, 0x18	; 24
    165c:	80 83       	st	Z, r24
    165e:	08 95       	ret

00001660 <Motor_makeHerzDuty>:
    1660:	cf 93       	push	r28
    1662:	c6 2f       	mov	r28, r22
    1664:	9c 01       	movw	r18, r24
    1666:	40 e0       	ldi	r20, 0x00	; 0
    1668:	50 e0       	ldi	r21, 0x00	; 0
    166a:	60 e9       	ldi	r22, 0x90	; 144
    166c:	70 ed       	ldi	r23, 0xD0	; 208
    166e:	83 e0       	ldi	r24, 0x03	; 3
    1670:	90 e0       	ldi	r25, 0x00	; 0
    1672:	99 d2       	rcall	.+1330   	; 0x1ba6 <__divmodsi4>
    1674:	21 50       	subi	r18, 0x01	; 1
    1676:	31 09       	sbc	r19, r1
    1678:	e0 e8       	ldi	r30, 0x80	; 128
    167a:	f0 e0       	ldi	r31, 0x00	; 0
    167c:	31 83       	std	Z+1, r19	; 0x01
    167e:	20 83       	st	Z, r18
    1680:	80 81       	ld	r24, Z
    1682:	91 81       	ldd	r25, Z+1	; 0x01
    1684:	6c 2f       	mov	r22, r28
    1686:	70 e0       	ldi	r23, 0x00	; 0
    1688:	67 d2       	rcall	.+1230   	; 0x1b58 <__udivmodhi4>
    168a:	70 93 87 00 	sts	0x0087, r23	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
    168e:	60 93 86 00 	sts	0x0086, r22	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
    1692:	cf 91       	pop	r28
    1694:	08 95       	ret

00001696 <Motor_On>:
    1696:	eb e8       	ldi	r30, 0x8B	; 139
    1698:	f0 e0       	ldi	r31, 0x00	; 0
    169a:	80 81       	ld	r24, Z
    169c:	80 68       	ori	r24, 0x80	; 128
    169e:	80 83       	st	Z, r24
    16a0:	08 95       	ret

000016a2 <Motor_Off>:
    16a2:	eb e8       	ldi	r30, 0x8B	; 139
    16a4:	f0 e0       	ldi	r31, 0x00	; 0
    16a6:	80 81       	ld	r24, Z
    16a8:	8f 73       	andi	r24, 0x3F	; 63
    16aa:	80 83       	st	Z, r24
    16ac:	08 95       	ret

000016ae <Ultrasonic_init>:
    16ae:	40 e0       	ldi	r20, 0x00	; 0
    16b0:	62 e0       	ldi	r22, 0x02	; 2
    16b2:	81 e3       	ldi	r24, 0x31	; 49
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	6c d0       	rcall	.+216    	; 0x1790 <Gpio_initPin>
    16b8:	41 e0       	ldi	r20, 0x01	; 1
    16ba:	63 e0       	ldi	r22, 0x03	; 3
    16bc:	81 e3       	ldi	r24, 0x31	; 49
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	67 d0       	rcall	.+206    	; 0x1790 <Gpio_initPin>
    16c2:	ea e6       	ldi	r30, 0x6A	; 106
    16c4:	f0 e0       	ldi	r31, 0x00	; 0
    16c6:	80 81       	ld	r24, Z
    16c8:	80 63       	ori	r24, 0x30	; 48
    16ca:	80 83       	st	Z, r24
    16cc:	89 b7       	in	r24, 0x39	; 57
    16ce:	84 60       	ori	r24, 0x04	; 4
    16d0:	89 bf       	out	0x39, r24	; 57
    16d2:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <UltrasonicDistanceFlag>
    16d6:	08 95       	ret

000016d8 <Ultrasonic_trigger>:
    16d8:	41 e0       	ldi	r20, 0x01	; 1
    16da:	63 e0       	ldi	r22, 0x03	; 3
    16dc:	82 e3       	ldi	r24, 0x32	; 50
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	74 d0       	rcall	.+232    	; 0x17ca <Gpio_writePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    16e2:	80 e5       	ldi	r24, 0x50	; 80
    16e4:	8a 95       	dec	r24
    16e6:	f1 f7       	brne	.-4      	; 0x16e4 <Ultrasonic_trigger+0xc>
    16e8:	40 e0       	ldi	r20, 0x00	; 0
    16ea:	63 e0       	ldi	r22, 0x03	; 3
    16ec:	82 e3       	ldi	r24, 0x32	; 50
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	6c c0       	rjmp	.+216    	; 0x17ca <Gpio_writePin>
    16f2:	08 95       	ret

000016f4 <Ultrasonic_timerStart>:
    16f4:	1d bc       	out	0x2d, r1	; 45
    16f6:	1c bc       	out	0x2c, r1	; 44
    16f8:	8e b5       	in	r24, 0x2e	; 46
    16fa:	83 60       	ori	r24, 0x03	; 3
    16fc:	8e bd       	out	0x2e, r24	; 46
    16fe:	08 95       	ret

00001700 <Ultrasonic_timerStop>:
    1700:	8e b5       	in	r24, 0x2e	; 46
    1702:	88 7f       	andi	r24, 0xF8	; 248
    1704:	8e bd       	out	0x2e, r24	; 46
    1706:	08 95       	ret

00001708 <Ultrasonic_switchInterrupt>:
    1708:	81 11       	cpse	r24, r1
    170a:	09 c0       	rjmp	.+18     	; 0x171e <Ultrasonic_switchInterrupt+0x16>
    170c:	ea e6       	ldi	r30, 0x6A	; 106
    170e:	f0 e0       	ldi	r31, 0x00	; 0
    1710:	80 81       	ld	r24, Z
    1712:	8f 7c       	andi	r24, 0xCF	; 207
    1714:	80 83       	st	Z, r24
    1716:	80 81       	ld	r24, Z
    1718:	80 62       	ori	r24, 0x20	; 32
    171a:	80 83       	st	Z, r24
    171c:	08 95       	ret
    171e:	ea e6       	ldi	r30, 0x6A	; 106
    1720:	f0 e0       	ldi	r31, 0x00	; 0
    1722:	80 81       	ld	r24, Z
    1724:	8f 7c       	andi	r24, 0xCF	; 207
    1726:	80 83       	st	Z, r24
    1728:	80 81       	ld	r24, Z
    172a:	80 63       	ori	r24, 0x30	; 48
    172c:	80 83       	st	Z, r24
    172e:	08 95       	ret

00001730 <Ultrasoinc_getDistance>:
    1730:	6c b5       	in	r22, 0x2c	; 44
    1732:	7d b5       	in	r23, 0x2d	; 45
    1734:	80 e0       	ldi	r24, 0x00	; 0
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	1e d1       	rcall	.+572    	; 0x1976 <__floatunsisf>
    173a:	26 e9       	ldi	r18, 0x96	; 150
    173c:	33 e4       	ldi	r19, 0x43	; 67
    173e:	4b e8       	ldi	r20, 0x8B	; 139
    1740:	5d e3       	ldi	r21, 0x3D	; 61
    1742:	7f d1       	rcall	.+766    	; 0x1a42 <__mulsf3>
    1744:	ec d0       	rcall	.+472    	; 0x191e <__fixunssfsi>
    1746:	cb 01       	movw	r24, r22
    1748:	08 95       	ret

0000174a <Ultrasonic_getComplitFlag>:
    174a:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <UltrasonicDistanceFlag>
    174e:	08 95       	ret

00001750 <Ultrasonic_setComplitFlag>:
    1750:	81 e0       	ldi	r24, 0x01	; 1
    1752:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <UltrasonicDistanceFlag>
    1756:	08 95       	ret

00001758 <Ultrasonic_ISR_Process>:
    1758:	82 9b       	sbis	0x10, 2	; 16
    175a:	04 c0       	rjmp	.+8      	; 0x1764 <Ultrasonic_ISR_Process+0xc>
    175c:	cb df       	rcall	.-106    	; 0x16f4 <Ultrasonic_timerStart>
    175e:	80 e0       	ldi	r24, 0x00	; 0
    1760:	d3 cf       	rjmp	.-90     	; 0x1708 <Ultrasonic_switchInterrupt>
    1762:	08 95       	ret
    1764:	cd df       	rcall	.-102    	; 0x1700 <Ultrasonic_timerStop>
    1766:	f4 df       	rcall	.-24     	; 0x1750 <Ultrasonic_setComplitFlag>
    1768:	81 e0       	ldi	r24, 0x01	; 1
    176a:	ce cf       	rjmp	.-100    	; 0x1708 <Ultrasonic_switchInterrupt>
    176c:	08 95       	ret

0000176e <Ultrasonic_clearComplitFlag>:
    176e:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <UltrasonicDistanceFlag>
    1772:	08 95       	ret

00001774 <main>:

#include "ap/apMain.h"

int main(void)
{
	ap_init();
    1774:	0e 94 08 01 	call	0x210	; 0x210 <ap_init>
	
    while (1) 
    {
		ap_excute();
    1778:	0e 94 19 01 	call	0x232	; 0x232 <ap_excute>
    177c:	fd cf       	rjmp	.-6      	; 0x1778 <main+0x4>

0000177e <Gpio_initPort>:
    177e:	61 30       	cpi	r22, 0x01	; 1
    1780:	21 f4       	brne	.+8      	; 0x178a <Gpio_initPort+0xc>
    1782:	2f ef       	ldi	r18, 0xFF	; 255
    1784:	fc 01       	movw	r30, r24
    1786:	20 83       	st	Z, r18
    1788:	08 95       	ret
    178a:	fc 01       	movw	r30, r24
    178c:	10 82       	st	Z, r1
    178e:	08 95       	ret

00001790 <Gpio_initPin>:
    1790:	fc 01       	movw	r30, r24
    1792:	41 30       	cpi	r20, 0x01	; 1
    1794:	59 f4       	brne	.+22     	; 0x17ac <Gpio_initPin+0x1c>
    1796:	20 81       	ld	r18, Z
    1798:	81 e0       	ldi	r24, 0x01	; 1
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	02 c0       	rjmp	.+4      	; 0x17a2 <Gpio_initPin+0x12>
    179e:	88 0f       	add	r24, r24
    17a0:	99 1f       	adc	r25, r25
    17a2:	6a 95       	dec	r22
    17a4:	e2 f7       	brpl	.-8      	; 0x179e <Gpio_initPin+0xe>
    17a6:	82 2b       	or	r24, r18
    17a8:	80 83       	st	Z, r24
    17aa:	08 95       	ret
    17ac:	90 81       	ld	r25, Z
    17ae:	21 e0       	ldi	r18, 0x01	; 1
    17b0:	30 e0       	ldi	r19, 0x00	; 0
    17b2:	02 c0       	rjmp	.+4      	; 0x17b8 <Gpio_initPin+0x28>
    17b4:	22 0f       	add	r18, r18
    17b6:	33 1f       	adc	r19, r19
    17b8:	6a 95       	dec	r22
    17ba:	e2 f7       	brpl	.-8      	; 0x17b4 <Gpio_initPin+0x24>
    17bc:	20 95       	com	r18
    17be:	29 23       	and	r18, r25
    17c0:	20 83       	st	Z, r18
    17c2:	08 95       	ret

000017c4 <Gpio_writePort>:
    17c4:	fc 01       	movw	r30, r24
    17c6:	60 83       	st	Z, r22
    17c8:	08 95       	ret

000017ca <Gpio_writePin>:
    17ca:	fc 01       	movw	r30, r24
    17cc:	41 30       	cpi	r20, 0x01	; 1
    17ce:	59 f4       	brne	.+22     	; 0x17e6 <Gpio_writePin+0x1c>
    17d0:	20 81       	ld	r18, Z
    17d2:	81 e0       	ldi	r24, 0x01	; 1
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	02 c0       	rjmp	.+4      	; 0x17dc <Gpio_writePin+0x12>
    17d8:	88 0f       	add	r24, r24
    17da:	99 1f       	adc	r25, r25
    17dc:	6a 95       	dec	r22
    17de:	e2 f7       	brpl	.-8      	; 0x17d8 <Gpio_writePin+0xe>
    17e0:	82 2b       	or	r24, r18
    17e2:	80 83       	st	Z, r24
    17e4:	08 95       	ret
    17e6:	90 81       	ld	r25, Z
    17e8:	21 e0       	ldi	r18, 0x01	; 1
    17ea:	30 e0       	ldi	r19, 0x00	; 0
    17ec:	02 c0       	rjmp	.+4      	; 0x17f2 <Gpio_writePin+0x28>
    17ee:	22 0f       	add	r18, r18
    17f0:	33 1f       	adc	r19, r19
    17f2:	6a 95       	dec	r22
    17f4:	e2 f7       	brpl	.-8      	; 0x17ee <Gpio_writePin+0x24>
    17f6:	20 95       	com	r18
    17f8:	29 23       	and	r18, r25
    17fa:	20 83       	st	Z, r18
    17fc:	08 95       	ret

000017fe <Gpio_readPin>:
    17fe:	fc 01       	movw	r30, r24
    1800:	80 81       	ld	r24, Z
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	02 c0       	rjmp	.+4      	; 0x180a <Gpio_readPin+0xc>
    1806:	95 95       	asr	r25
    1808:	87 95       	ror	r24
    180a:	6a 95       	dec	r22
    180c:	e2 f7       	brpl	.-8      	; 0x1806 <Gpio_readPin+0x8>
    180e:	81 70       	andi	r24, 0x01	; 1
    1810:	08 95       	ret

00001812 <I2C_init>:
    1812:	81 b3       	in	r24, 0x11	; 17
    1814:	83 60       	ori	r24, 0x03	; 3
    1816:	81 bb       	out	0x11, r24	; 17
    1818:	88 e4       	ldi	r24, 0x48	; 72
    181a:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    181e:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1822:	08 95       	ret

00001824 <I2C_start>:
    1824:	84 ea       	ldi	r24, 0xA4	; 164
    1826:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    182a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    182e:	88 23       	and	r24, r24
    1830:	e4 f7       	brge	.-8      	; 0x182a <I2C_start+0x6>
    1832:	08 95       	ret

00001834 <I2C_txDevAddress>:
    1834:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    1838:	84 e8       	ldi	r24, 0x84	; 132
    183a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    183e:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1842:	88 23       	and	r24, r24
    1844:	e4 f7       	brge	.-8      	; 0x183e <I2C_txDevAddress+0xa>
    1846:	08 95       	ret

00001848 <I2C_txData>:
    1848:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    184c:	84 e8       	ldi	r24, 0x84	; 132
    184e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1852:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1856:	88 23       	and	r24, r24
    1858:	e4 f7       	brge	.-8      	; 0x1852 <I2C_txData+0xa>
    185a:	08 95       	ret

0000185c <I2C_stop>:
    185c:	84 e9       	ldi	r24, 0x94	; 148
    185e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    1862:	08 95       	ret

00001864 <I2C_txByte>:
    1864:	cf 93       	push	r28
    1866:	df 93       	push	r29
    1868:	d8 2f       	mov	r29, r24
    186a:	c6 2f       	mov	r28, r22
    186c:	db df       	rcall	.-74     	; 0x1824 <I2C_start>
    186e:	8d 2f       	mov	r24, r29
    1870:	e1 df       	rcall	.-62     	; 0x1834 <I2C_txDevAddress>
    1872:	8c 2f       	mov	r24, r28
    1874:	e9 df       	rcall	.-46     	; 0x1848 <I2C_txData>
    1876:	f2 df       	rcall	.-28     	; 0x185c <I2C_stop>
    1878:	df 91       	pop	r29
    187a:	cf 91       	pop	r28
    187c:	08 95       	ret

0000187e <TIM0_init>:
    187e:	83 b7       	in	r24, 0x33	; 51
    1880:	85 60       	ori	r24, 0x05	; 5
    1882:	83 bf       	out	0x33, r24	; 51
    1884:	87 b7       	in	r24, 0x37	; 55
    1886:	81 60       	ori	r24, 0x01	; 1
    1888:	87 bf       	out	0x37, r24	; 55
    188a:	82 e8       	ldi	r24, 0x82	; 130
    188c:	82 bf       	out	0x32, r24	; 50
    188e:	08 95       	ret

00001890 <TIM2_init>:
    1890:	85 b5       	in	r24, 0x25	; 37
    1892:	83 60       	ori	r24, 0x03	; 3
    1894:	85 bd       	out	0x25, r24	; 37
    1896:	85 b5       	in	r24, 0x25	; 37
    1898:	88 60       	ori	r24, 0x08	; 8
    189a:	85 bd       	out	0x25, r24	; 37
    189c:	87 b7       	in	r24, 0x37	; 55
    189e:	80 68       	ori	r24, 0x80	; 128
    18a0:	87 bf       	out	0x37, r24	; 55
    18a2:	89 ef       	ldi	r24, 0xF9	; 249
    18a4:	83 bd       	out	0x23, r24	; 35
    18a6:	08 95       	ret

000018a8 <UART0_ISR_Process>:
    18a8:	9c b1       	in	r25, 0x0c	; 12
    18aa:	9a 30       	cpi	r25, 0x0A	; 10
    18ac:	91 f4       	brne	.+36     	; 0x18d2 <UART0_ISR_Process+0x2a>
    18ae:	e0 91 a3 02 	lds	r30, 0x02A3	; 0x8002a3 <uart0RxTail.1745>
    18b2:	ae 2f       	mov	r26, r30
    18b4:	b0 e0       	ldi	r27, 0x00	; 0
    18b6:	a7 5a       	subi	r26, 0xA7	; 167
    18b8:	bc 4f       	sbci	r27, 0xFC	; 252
    18ba:	9c 93       	st	X, r25
    18bc:	ef 5f       	subi	r30, 0xFF	; 255
    18be:	f0 e0       	ldi	r31, 0x00	; 0
    18c0:	e7 5a       	subi	r30, 0xA7	; 167
    18c2:	fc 4f       	sbci	r31, 0xFC	; 252
    18c4:	10 82       	st	Z, r1
    18c6:	10 92 a3 02 	sts	0x02A3, r1	; 0x8002a3 <uart0RxTail.1745>
    18ca:	81 e0       	ldi	r24, 0x01	; 1
    18cc:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <uart0RxFlag>
    18d0:	08 95       	ret
    18d2:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <uart0RxTail.1745>
    18d6:	e8 2f       	mov	r30, r24
    18d8:	f0 e0       	ldi	r31, 0x00	; 0
    18da:	e7 5a       	subi	r30, 0xA7	; 167
    18dc:	fc 4f       	sbci	r31, 0xFC	; 252
    18de:	90 83       	st	Z, r25
    18e0:	8f 5f       	subi	r24, 0xFF	; 255
    18e2:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <uart0RxTail.1745>
    18e6:	08 95       	ret

000018e8 <UART0_init>:
    18e8:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <uart0RxFlag>
    18ec:	8a b1       	in	r24, 0x0a	; 10
    18ee:	88 61       	ori	r24, 0x18	; 24
    18f0:	8a b9       	out	0x0a, r24	; 10
    18f2:	8b b1       	in	r24, 0x0b	; 11
    18f4:	82 60       	ori	r24, 0x02	; 2
    18f6:	8b b9       	out	0x0b, r24	; 11
    18f8:	8a b1       	in	r24, 0x0a	; 10
    18fa:	80 68       	ori	r24, 0x80	; 128
    18fc:	8a b9       	out	0x0a, r24	; 10
    18fe:	8f ec       	ldi	r24, 0xCF	; 207
    1900:	89 b9       	out	0x09, r24	; 9
    1902:	08 95       	ret

00001904 <UART0_Transmit>:
    1904:	5d 9b       	sbis	0x0b, 5	; 11
    1906:	fe cf       	rjmp	.-4      	; 0x1904 <UART0_Transmit>
    1908:	8c b9       	out	0x0c, r24	; 12
    190a:	08 95       	ret

0000190c <UART0_getRxFlag>:
    190c:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <uart0RxFlag>
    1910:	08 95       	ret

00001912 <UART0_clearRxFlag>:
    1912:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <uart0RxFlag>
    1916:	08 95       	ret

00001918 <UART0_getRxBuff>:
    1918:	89 e5       	ldi	r24, 0x59	; 89
    191a:	93 e0       	ldi	r25, 0x03	; 3
    191c:	08 95       	ret

0000191e <__fixunssfsi>:
    191e:	70 d0       	rcall	.+224    	; 0x1a00 <__fp_splitA>
    1920:	88 f0       	brcs	.+34     	; 0x1944 <__fixunssfsi+0x26>
    1922:	9f 57       	subi	r25, 0x7F	; 127
    1924:	90 f0       	brcs	.+36     	; 0x194a <__fixunssfsi+0x2c>
    1926:	b9 2f       	mov	r27, r25
    1928:	99 27       	eor	r25, r25
    192a:	b7 51       	subi	r27, 0x17	; 23
    192c:	a0 f0       	brcs	.+40     	; 0x1956 <__fixunssfsi+0x38>
    192e:	d1 f0       	breq	.+52     	; 0x1964 <__fixunssfsi+0x46>
    1930:	66 0f       	add	r22, r22
    1932:	77 1f       	adc	r23, r23
    1934:	88 1f       	adc	r24, r24
    1936:	99 1f       	adc	r25, r25
    1938:	1a f0       	brmi	.+6      	; 0x1940 <__fixunssfsi+0x22>
    193a:	ba 95       	dec	r27
    193c:	c9 f7       	brne	.-14     	; 0x1930 <__fixunssfsi+0x12>
    193e:	12 c0       	rjmp	.+36     	; 0x1964 <__fixunssfsi+0x46>
    1940:	b1 30       	cpi	r27, 0x01	; 1
    1942:	81 f0       	breq	.+32     	; 0x1964 <__fixunssfsi+0x46>
    1944:	77 d0       	rcall	.+238    	; 0x1a34 <__fp_zero>
    1946:	b1 e0       	ldi	r27, 0x01	; 1
    1948:	08 95       	ret
    194a:	74 c0       	rjmp	.+232    	; 0x1a34 <__fp_zero>
    194c:	67 2f       	mov	r22, r23
    194e:	78 2f       	mov	r23, r24
    1950:	88 27       	eor	r24, r24
    1952:	b8 5f       	subi	r27, 0xF8	; 248
    1954:	39 f0       	breq	.+14     	; 0x1964 <__fixunssfsi+0x46>
    1956:	b9 3f       	cpi	r27, 0xF9	; 249
    1958:	cc f3       	brlt	.-14     	; 0x194c <__fixunssfsi+0x2e>
    195a:	86 95       	lsr	r24
    195c:	77 95       	ror	r23
    195e:	67 95       	ror	r22
    1960:	b3 95       	inc	r27
    1962:	d9 f7       	brne	.-10     	; 0x195a <__fixunssfsi+0x3c>
    1964:	3e f4       	brtc	.+14     	; 0x1974 <__fixunssfsi+0x56>
    1966:	90 95       	com	r25
    1968:	80 95       	com	r24
    196a:	70 95       	com	r23
    196c:	61 95       	neg	r22
    196e:	7f 4f       	sbci	r23, 0xFF	; 255
    1970:	8f 4f       	sbci	r24, 0xFF	; 255
    1972:	9f 4f       	sbci	r25, 0xFF	; 255
    1974:	08 95       	ret

00001976 <__floatunsisf>:
    1976:	e8 94       	clt
    1978:	09 c0       	rjmp	.+18     	; 0x198c <__floatsisf+0x12>

0000197a <__floatsisf>:
    197a:	97 fb       	bst	r25, 7
    197c:	3e f4       	brtc	.+14     	; 0x198c <__floatsisf+0x12>
    197e:	90 95       	com	r25
    1980:	80 95       	com	r24
    1982:	70 95       	com	r23
    1984:	61 95       	neg	r22
    1986:	7f 4f       	sbci	r23, 0xFF	; 255
    1988:	8f 4f       	sbci	r24, 0xFF	; 255
    198a:	9f 4f       	sbci	r25, 0xFF	; 255
    198c:	99 23       	and	r25, r25
    198e:	a9 f0       	breq	.+42     	; 0x19ba <__floatsisf+0x40>
    1990:	f9 2f       	mov	r31, r25
    1992:	96 e9       	ldi	r25, 0x96	; 150
    1994:	bb 27       	eor	r27, r27
    1996:	93 95       	inc	r25
    1998:	f6 95       	lsr	r31
    199a:	87 95       	ror	r24
    199c:	77 95       	ror	r23
    199e:	67 95       	ror	r22
    19a0:	b7 95       	ror	r27
    19a2:	f1 11       	cpse	r31, r1
    19a4:	f8 cf       	rjmp	.-16     	; 0x1996 <__floatsisf+0x1c>
    19a6:	fa f4       	brpl	.+62     	; 0x19e6 <__floatsisf+0x6c>
    19a8:	bb 0f       	add	r27, r27
    19aa:	11 f4       	brne	.+4      	; 0x19b0 <__floatsisf+0x36>
    19ac:	60 ff       	sbrs	r22, 0
    19ae:	1b c0       	rjmp	.+54     	; 0x19e6 <__floatsisf+0x6c>
    19b0:	6f 5f       	subi	r22, 0xFF	; 255
    19b2:	7f 4f       	sbci	r23, 0xFF	; 255
    19b4:	8f 4f       	sbci	r24, 0xFF	; 255
    19b6:	9f 4f       	sbci	r25, 0xFF	; 255
    19b8:	16 c0       	rjmp	.+44     	; 0x19e6 <__floatsisf+0x6c>
    19ba:	88 23       	and	r24, r24
    19bc:	11 f0       	breq	.+4      	; 0x19c2 <__floatsisf+0x48>
    19be:	96 e9       	ldi	r25, 0x96	; 150
    19c0:	11 c0       	rjmp	.+34     	; 0x19e4 <__floatsisf+0x6a>
    19c2:	77 23       	and	r23, r23
    19c4:	21 f0       	breq	.+8      	; 0x19ce <__floatsisf+0x54>
    19c6:	9e e8       	ldi	r25, 0x8E	; 142
    19c8:	87 2f       	mov	r24, r23
    19ca:	76 2f       	mov	r23, r22
    19cc:	05 c0       	rjmp	.+10     	; 0x19d8 <__floatsisf+0x5e>
    19ce:	66 23       	and	r22, r22
    19d0:	71 f0       	breq	.+28     	; 0x19ee <__floatsisf+0x74>
    19d2:	96 e8       	ldi	r25, 0x86	; 134
    19d4:	86 2f       	mov	r24, r22
    19d6:	70 e0       	ldi	r23, 0x00	; 0
    19d8:	60 e0       	ldi	r22, 0x00	; 0
    19da:	2a f0       	brmi	.+10     	; 0x19e6 <__floatsisf+0x6c>
    19dc:	9a 95       	dec	r25
    19de:	66 0f       	add	r22, r22
    19e0:	77 1f       	adc	r23, r23
    19e2:	88 1f       	adc	r24, r24
    19e4:	da f7       	brpl	.-10     	; 0x19dc <__floatsisf+0x62>
    19e6:	88 0f       	add	r24, r24
    19e8:	96 95       	lsr	r25
    19ea:	87 95       	ror	r24
    19ec:	97 f9       	bld	r25, 7
    19ee:	08 95       	ret

000019f0 <__fp_split3>:
    19f0:	57 fd       	sbrc	r21, 7
    19f2:	90 58       	subi	r25, 0x80	; 128
    19f4:	44 0f       	add	r20, r20
    19f6:	55 1f       	adc	r21, r21
    19f8:	59 f0       	breq	.+22     	; 0x1a10 <__fp_splitA+0x10>
    19fa:	5f 3f       	cpi	r21, 0xFF	; 255
    19fc:	71 f0       	breq	.+28     	; 0x1a1a <__fp_splitA+0x1a>
    19fe:	47 95       	ror	r20

00001a00 <__fp_splitA>:
    1a00:	88 0f       	add	r24, r24
    1a02:	97 fb       	bst	r25, 7
    1a04:	99 1f       	adc	r25, r25
    1a06:	61 f0       	breq	.+24     	; 0x1a20 <__fp_splitA+0x20>
    1a08:	9f 3f       	cpi	r25, 0xFF	; 255
    1a0a:	79 f0       	breq	.+30     	; 0x1a2a <__fp_splitA+0x2a>
    1a0c:	87 95       	ror	r24
    1a0e:	08 95       	ret
    1a10:	12 16       	cp	r1, r18
    1a12:	13 06       	cpc	r1, r19
    1a14:	14 06       	cpc	r1, r20
    1a16:	55 1f       	adc	r21, r21
    1a18:	f2 cf       	rjmp	.-28     	; 0x19fe <__fp_split3+0xe>
    1a1a:	46 95       	lsr	r20
    1a1c:	f1 df       	rcall	.-30     	; 0x1a00 <__fp_splitA>
    1a1e:	08 c0       	rjmp	.+16     	; 0x1a30 <__fp_splitA+0x30>
    1a20:	16 16       	cp	r1, r22
    1a22:	17 06       	cpc	r1, r23
    1a24:	18 06       	cpc	r1, r24
    1a26:	99 1f       	adc	r25, r25
    1a28:	f1 cf       	rjmp	.-30     	; 0x1a0c <__fp_splitA+0xc>
    1a2a:	86 95       	lsr	r24
    1a2c:	71 05       	cpc	r23, r1
    1a2e:	61 05       	cpc	r22, r1
    1a30:	08 94       	sec
    1a32:	08 95       	ret

00001a34 <__fp_zero>:
    1a34:	e8 94       	clt

00001a36 <__fp_szero>:
    1a36:	bb 27       	eor	r27, r27
    1a38:	66 27       	eor	r22, r22
    1a3a:	77 27       	eor	r23, r23
    1a3c:	cb 01       	movw	r24, r22
    1a3e:	97 f9       	bld	r25, 7
    1a40:	08 95       	ret

00001a42 <__mulsf3>:
    1a42:	0b d0       	rcall	.+22     	; 0x1a5a <__mulsf3x>
    1a44:	78 c0       	rjmp	.+240    	; 0x1b36 <__fp_round>
    1a46:	69 d0       	rcall	.+210    	; 0x1b1a <__fp_pscA>
    1a48:	28 f0       	brcs	.+10     	; 0x1a54 <__mulsf3+0x12>
    1a4a:	6e d0       	rcall	.+220    	; 0x1b28 <__fp_pscB>
    1a4c:	18 f0       	brcs	.+6      	; 0x1a54 <__mulsf3+0x12>
    1a4e:	95 23       	and	r25, r21
    1a50:	09 f0       	breq	.+2      	; 0x1a54 <__mulsf3+0x12>
    1a52:	5a c0       	rjmp	.+180    	; 0x1b08 <__fp_inf>
    1a54:	5f c0       	rjmp	.+190    	; 0x1b14 <__fp_nan>
    1a56:	11 24       	eor	r1, r1
    1a58:	ee cf       	rjmp	.-36     	; 0x1a36 <__fp_szero>

00001a5a <__mulsf3x>:
    1a5a:	ca df       	rcall	.-108    	; 0x19f0 <__fp_split3>
    1a5c:	a0 f3       	brcs	.-24     	; 0x1a46 <__mulsf3+0x4>

00001a5e <__mulsf3_pse>:
    1a5e:	95 9f       	mul	r25, r21
    1a60:	d1 f3       	breq	.-12     	; 0x1a56 <__mulsf3+0x14>
    1a62:	95 0f       	add	r25, r21
    1a64:	50 e0       	ldi	r21, 0x00	; 0
    1a66:	55 1f       	adc	r21, r21
    1a68:	62 9f       	mul	r22, r18
    1a6a:	f0 01       	movw	r30, r0
    1a6c:	72 9f       	mul	r23, r18
    1a6e:	bb 27       	eor	r27, r27
    1a70:	f0 0d       	add	r31, r0
    1a72:	b1 1d       	adc	r27, r1
    1a74:	63 9f       	mul	r22, r19
    1a76:	aa 27       	eor	r26, r26
    1a78:	f0 0d       	add	r31, r0
    1a7a:	b1 1d       	adc	r27, r1
    1a7c:	aa 1f       	adc	r26, r26
    1a7e:	64 9f       	mul	r22, r20
    1a80:	66 27       	eor	r22, r22
    1a82:	b0 0d       	add	r27, r0
    1a84:	a1 1d       	adc	r26, r1
    1a86:	66 1f       	adc	r22, r22
    1a88:	82 9f       	mul	r24, r18
    1a8a:	22 27       	eor	r18, r18
    1a8c:	b0 0d       	add	r27, r0
    1a8e:	a1 1d       	adc	r26, r1
    1a90:	62 1f       	adc	r22, r18
    1a92:	73 9f       	mul	r23, r19
    1a94:	b0 0d       	add	r27, r0
    1a96:	a1 1d       	adc	r26, r1
    1a98:	62 1f       	adc	r22, r18
    1a9a:	83 9f       	mul	r24, r19
    1a9c:	a0 0d       	add	r26, r0
    1a9e:	61 1d       	adc	r22, r1
    1aa0:	22 1f       	adc	r18, r18
    1aa2:	74 9f       	mul	r23, r20
    1aa4:	33 27       	eor	r19, r19
    1aa6:	a0 0d       	add	r26, r0
    1aa8:	61 1d       	adc	r22, r1
    1aaa:	23 1f       	adc	r18, r19
    1aac:	84 9f       	mul	r24, r20
    1aae:	60 0d       	add	r22, r0
    1ab0:	21 1d       	adc	r18, r1
    1ab2:	82 2f       	mov	r24, r18
    1ab4:	76 2f       	mov	r23, r22
    1ab6:	6a 2f       	mov	r22, r26
    1ab8:	11 24       	eor	r1, r1
    1aba:	9f 57       	subi	r25, 0x7F	; 127
    1abc:	50 40       	sbci	r21, 0x00	; 0
    1abe:	8a f0       	brmi	.+34     	; 0x1ae2 <__mulsf3_pse+0x84>
    1ac0:	e1 f0       	breq	.+56     	; 0x1afa <__mulsf3_pse+0x9c>
    1ac2:	88 23       	and	r24, r24
    1ac4:	4a f0       	brmi	.+18     	; 0x1ad8 <__mulsf3_pse+0x7a>
    1ac6:	ee 0f       	add	r30, r30
    1ac8:	ff 1f       	adc	r31, r31
    1aca:	bb 1f       	adc	r27, r27
    1acc:	66 1f       	adc	r22, r22
    1ace:	77 1f       	adc	r23, r23
    1ad0:	88 1f       	adc	r24, r24
    1ad2:	91 50       	subi	r25, 0x01	; 1
    1ad4:	50 40       	sbci	r21, 0x00	; 0
    1ad6:	a9 f7       	brne	.-22     	; 0x1ac2 <__mulsf3_pse+0x64>
    1ad8:	9e 3f       	cpi	r25, 0xFE	; 254
    1ada:	51 05       	cpc	r21, r1
    1adc:	70 f0       	brcs	.+28     	; 0x1afa <__mulsf3_pse+0x9c>
    1ade:	14 c0       	rjmp	.+40     	; 0x1b08 <__fp_inf>
    1ae0:	aa cf       	rjmp	.-172    	; 0x1a36 <__fp_szero>
    1ae2:	5f 3f       	cpi	r21, 0xFF	; 255
    1ae4:	ec f3       	brlt	.-6      	; 0x1ae0 <__mulsf3_pse+0x82>
    1ae6:	98 3e       	cpi	r25, 0xE8	; 232
    1ae8:	dc f3       	brlt	.-10     	; 0x1ae0 <__mulsf3_pse+0x82>
    1aea:	86 95       	lsr	r24
    1aec:	77 95       	ror	r23
    1aee:	67 95       	ror	r22
    1af0:	b7 95       	ror	r27
    1af2:	f7 95       	ror	r31
    1af4:	e7 95       	ror	r30
    1af6:	9f 5f       	subi	r25, 0xFF	; 255
    1af8:	c1 f7       	brne	.-16     	; 0x1aea <__mulsf3_pse+0x8c>
    1afa:	fe 2b       	or	r31, r30
    1afc:	88 0f       	add	r24, r24
    1afe:	91 1d       	adc	r25, r1
    1b00:	96 95       	lsr	r25
    1b02:	87 95       	ror	r24
    1b04:	97 f9       	bld	r25, 7
    1b06:	08 95       	ret

00001b08 <__fp_inf>:
    1b08:	97 f9       	bld	r25, 7
    1b0a:	9f 67       	ori	r25, 0x7F	; 127
    1b0c:	80 e8       	ldi	r24, 0x80	; 128
    1b0e:	70 e0       	ldi	r23, 0x00	; 0
    1b10:	60 e0       	ldi	r22, 0x00	; 0
    1b12:	08 95       	ret

00001b14 <__fp_nan>:
    1b14:	9f ef       	ldi	r25, 0xFF	; 255
    1b16:	80 ec       	ldi	r24, 0xC0	; 192
    1b18:	08 95       	ret

00001b1a <__fp_pscA>:
    1b1a:	00 24       	eor	r0, r0
    1b1c:	0a 94       	dec	r0
    1b1e:	16 16       	cp	r1, r22
    1b20:	17 06       	cpc	r1, r23
    1b22:	18 06       	cpc	r1, r24
    1b24:	09 06       	cpc	r0, r25
    1b26:	08 95       	ret

00001b28 <__fp_pscB>:
    1b28:	00 24       	eor	r0, r0
    1b2a:	0a 94       	dec	r0
    1b2c:	12 16       	cp	r1, r18
    1b2e:	13 06       	cpc	r1, r19
    1b30:	14 06       	cpc	r1, r20
    1b32:	05 06       	cpc	r0, r21
    1b34:	08 95       	ret

00001b36 <__fp_round>:
    1b36:	09 2e       	mov	r0, r25
    1b38:	03 94       	inc	r0
    1b3a:	00 0c       	add	r0, r0
    1b3c:	11 f4       	brne	.+4      	; 0x1b42 <__fp_round+0xc>
    1b3e:	88 23       	and	r24, r24
    1b40:	52 f0       	brmi	.+20     	; 0x1b56 <__fp_round+0x20>
    1b42:	bb 0f       	add	r27, r27
    1b44:	40 f4       	brcc	.+16     	; 0x1b56 <__fp_round+0x20>
    1b46:	bf 2b       	or	r27, r31
    1b48:	11 f4       	brne	.+4      	; 0x1b4e <__fp_round+0x18>
    1b4a:	60 ff       	sbrs	r22, 0
    1b4c:	04 c0       	rjmp	.+8      	; 0x1b56 <__fp_round+0x20>
    1b4e:	6f 5f       	subi	r22, 0xFF	; 255
    1b50:	7f 4f       	sbci	r23, 0xFF	; 255
    1b52:	8f 4f       	sbci	r24, 0xFF	; 255
    1b54:	9f 4f       	sbci	r25, 0xFF	; 255
    1b56:	08 95       	ret

00001b58 <__udivmodhi4>:
    1b58:	aa 1b       	sub	r26, r26
    1b5a:	bb 1b       	sub	r27, r27
    1b5c:	51 e1       	ldi	r21, 0x11	; 17
    1b5e:	07 c0       	rjmp	.+14     	; 0x1b6e <__udivmodhi4_ep>

00001b60 <__udivmodhi4_loop>:
    1b60:	aa 1f       	adc	r26, r26
    1b62:	bb 1f       	adc	r27, r27
    1b64:	a6 17       	cp	r26, r22
    1b66:	b7 07       	cpc	r27, r23
    1b68:	10 f0       	brcs	.+4      	; 0x1b6e <__udivmodhi4_ep>
    1b6a:	a6 1b       	sub	r26, r22
    1b6c:	b7 0b       	sbc	r27, r23

00001b6e <__udivmodhi4_ep>:
    1b6e:	88 1f       	adc	r24, r24
    1b70:	99 1f       	adc	r25, r25
    1b72:	5a 95       	dec	r21
    1b74:	a9 f7       	brne	.-22     	; 0x1b60 <__udivmodhi4_loop>
    1b76:	80 95       	com	r24
    1b78:	90 95       	com	r25
    1b7a:	bc 01       	movw	r22, r24
    1b7c:	cd 01       	movw	r24, r26
    1b7e:	08 95       	ret

00001b80 <__divmodhi4>:
    1b80:	97 fb       	bst	r25, 7
    1b82:	07 2e       	mov	r0, r23
    1b84:	16 f4       	brtc	.+4      	; 0x1b8a <__divmodhi4+0xa>
    1b86:	00 94       	com	r0
    1b88:	06 d0       	rcall	.+12     	; 0x1b96 <__divmodhi4_neg1>
    1b8a:	77 fd       	sbrc	r23, 7
    1b8c:	08 d0       	rcall	.+16     	; 0x1b9e <__divmodhi4_neg2>
    1b8e:	e4 df       	rcall	.-56     	; 0x1b58 <__udivmodhi4>
    1b90:	07 fc       	sbrc	r0, 7
    1b92:	05 d0       	rcall	.+10     	; 0x1b9e <__divmodhi4_neg2>
    1b94:	3e f4       	brtc	.+14     	; 0x1ba4 <__divmodhi4_exit>

00001b96 <__divmodhi4_neg1>:
    1b96:	90 95       	com	r25
    1b98:	81 95       	neg	r24
    1b9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b9c:	08 95       	ret

00001b9e <__divmodhi4_neg2>:
    1b9e:	70 95       	com	r23
    1ba0:	61 95       	neg	r22
    1ba2:	7f 4f       	sbci	r23, 0xFF	; 255

00001ba4 <__divmodhi4_exit>:
    1ba4:	08 95       	ret

00001ba6 <__divmodsi4>:
    1ba6:	05 2e       	mov	r0, r21
    1ba8:	97 fb       	bst	r25, 7
    1baa:	16 f4       	brtc	.+4      	; 0x1bb0 <__divmodsi4+0xa>
    1bac:	00 94       	com	r0
    1bae:	0f d0       	rcall	.+30     	; 0x1bce <__negsi2>
    1bb0:	57 fd       	sbrc	r21, 7
    1bb2:	05 d0       	rcall	.+10     	; 0x1bbe <__divmodsi4_neg2>
    1bb4:	23 d0       	rcall	.+70     	; 0x1bfc <__udivmodsi4>
    1bb6:	07 fc       	sbrc	r0, 7
    1bb8:	02 d0       	rcall	.+4      	; 0x1bbe <__divmodsi4_neg2>
    1bba:	46 f4       	brtc	.+16     	; 0x1bcc <__divmodsi4_exit>
    1bbc:	08 c0       	rjmp	.+16     	; 0x1bce <__negsi2>

00001bbe <__divmodsi4_neg2>:
    1bbe:	50 95       	com	r21
    1bc0:	40 95       	com	r20
    1bc2:	30 95       	com	r19
    1bc4:	21 95       	neg	r18
    1bc6:	3f 4f       	sbci	r19, 0xFF	; 255
    1bc8:	4f 4f       	sbci	r20, 0xFF	; 255
    1bca:	5f 4f       	sbci	r21, 0xFF	; 255

00001bcc <__divmodsi4_exit>:
    1bcc:	08 95       	ret

00001bce <__negsi2>:
    1bce:	90 95       	com	r25
    1bd0:	80 95       	com	r24
    1bd2:	70 95       	com	r23
    1bd4:	61 95       	neg	r22
    1bd6:	7f 4f       	sbci	r23, 0xFF	; 255
    1bd8:	8f 4f       	sbci	r24, 0xFF	; 255
    1bda:	9f 4f       	sbci	r25, 0xFF	; 255
    1bdc:	08 95       	ret

00001bde <__umulhisi3>:
    1bde:	a2 9f       	mul	r26, r18
    1be0:	b0 01       	movw	r22, r0
    1be2:	b3 9f       	mul	r27, r19
    1be4:	c0 01       	movw	r24, r0
    1be6:	a3 9f       	mul	r26, r19
    1be8:	70 0d       	add	r23, r0
    1bea:	81 1d       	adc	r24, r1
    1bec:	11 24       	eor	r1, r1
    1bee:	91 1d       	adc	r25, r1
    1bf0:	b2 9f       	mul	r27, r18
    1bf2:	70 0d       	add	r23, r0
    1bf4:	81 1d       	adc	r24, r1
    1bf6:	11 24       	eor	r1, r1
    1bf8:	91 1d       	adc	r25, r1
    1bfa:	08 95       	ret

00001bfc <__udivmodsi4>:
    1bfc:	a1 e2       	ldi	r26, 0x21	; 33
    1bfe:	1a 2e       	mov	r1, r26
    1c00:	aa 1b       	sub	r26, r26
    1c02:	bb 1b       	sub	r27, r27
    1c04:	fd 01       	movw	r30, r26
    1c06:	0d c0       	rjmp	.+26     	; 0x1c22 <__udivmodsi4_ep>

00001c08 <__udivmodsi4_loop>:
    1c08:	aa 1f       	adc	r26, r26
    1c0a:	bb 1f       	adc	r27, r27
    1c0c:	ee 1f       	adc	r30, r30
    1c0e:	ff 1f       	adc	r31, r31
    1c10:	a2 17       	cp	r26, r18
    1c12:	b3 07       	cpc	r27, r19
    1c14:	e4 07       	cpc	r30, r20
    1c16:	f5 07       	cpc	r31, r21
    1c18:	20 f0       	brcs	.+8      	; 0x1c22 <__udivmodsi4_ep>
    1c1a:	a2 1b       	sub	r26, r18
    1c1c:	b3 0b       	sbc	r27, r19
    1c1e:	e4 0b       	sbc	r30, r20
    1c20:	f5 0b       	sbc	r31, r21

00001c22 <__udivmodsi4_ep>:
    1c22:	66 1f       	adc	r22, r22
    1c24:	77 1f       	adc	r23, r23
    1c26:	88 1f       	adc	r24, r24
    1c28:	99 1f       	adc	r25, r25
    1c2a:	1a 94       	dec	r1
    1c2c:	69 f7       	brne	.-38     	; 0x1c08 <__udivmodsi4_loop>
    1c2e:	60 95       	com	r22
    1c30:	70 95       	com	r23
    1c32:	80 95       	com	r24
    1c34:	90 95       	com	r25
    1c36:	9b 01       	movw	r18, r22
    1c38:	ac 01       	movw	r20, r24
    1c3a:	bd 01       	movw	r22, r26
    1c3c:	cf 01       	movw	r24, r30
    1c3e:	08 95       	ret

00001c40 <strcmp>:
    1c40:	fb 01       	movw	r30, r22
    1c42:	dc 01       	movw	r26, r24
    1c44:	8d 91       	ld	r24, X+
    1c46:	01 90       	ld	r0, Z+
    1c48:	80 19       	sub	r24, r0
    1c4a:	01 10       	cpse	r0, r1
    1c4c:	d9 f3       	breq	.-10     	; 0x1c44 <strcmp+0x4>
    1c4e:	99 0b       	sbc	r25, r25
    1c50:	08 95       	ret

00001c52 <puts>:
    1c52:	0f 93       	push	r16
    1c54:	1f 93       	push	r17
    1c56:	cf 93       	push	r28
    1c58:	df 93       	push	r29
    1c5a:	e0 91 bf 03 	lds	r30, 0x03BF	; 0x8003bf <__iob+0x2>
    1c5e:	f0 91 c0 03 	lds	r31, 0x03C0	; 0x8003c0 <__iob+0x3>
    1c62:	23 81       	ldd	r18, Z+3	; 0x03
    1c64:	21 ff       	sbrs	r18, 1
    1c66:	1b c0       	rjmp	.+54     	; 0x1c9e <puts+0x4c>
    1c68:	8c 01       	movw	r16, r24
    1c6a:	d0 e0       	ldi	r29, 0x00	; 0
    1c6c:	c0 e0       	ldi	r28, 0x00	; 0
    1c6e:	f8 01       	movw	r30, r16
    1c70:	81 91       	ld	r24, Z+
    1c72:	8f 01       	movw	r16, r30
    1c74:	60 91 bf 03 	lds	r22, 0x03BF	; 0x8003bf <__iob+0x2>
    1c78:	70 91 c0 03 	lds	r23, 0x03C0	; 0x8003c0 <__iob+0x3>
    1c7c:	db 01       	movw	r26, r22
    1c7e:	18 96       	adiw	r26, 0x08	; 8
    1c80:	ed 91       	ld	r30, X+
    1c82:	fc 91       	ld	r31, X
    1c84:	19 97       	sbiw	r26, 0x09	; 9
    1c86:	88 23       	and	r24, r24
    1c88:	31 f0       	breq	.+12     	; 0x1c96 <puts+0x44>
    1c8a:	09 95       	icall
    1c8c:	89 2b       	or	r24, r25
    1c8e:	79 f3       	breq	.-34     	; 0x1c6e <puts+0x1c>
    1c90:	df ef       	ldi	r29, 0xFF	; 255
    1c92:	cf ef       	ldi	r28, 0xFF	; 255
    1c94:	ec cf       	rjmp	.-40     	; 0x1c6e <puts+0x1c>
    1c96:	8a e0       	ldi	r24, 0x0A	; 10
    1c98:	09 95       	icall
    1c9a:	89 2b       	or	r24, r25
    1c9c:	19 f0       	breq	.+6      	; 0x1ca4 <puts+0x52>
    1c9e:	8f ef       	ldi	r24, 0xFF	; 255
    1ca0:	9f ef       	ldi	r25, 0xFF	; 255
    1ca2:	02 c0       	rjmp	.+4      	; 0x1ca8 <puts+0x56>
    1ca4:	8d 2f       	mov	r24, r29
    1ca6:	9c 2f       	mov	r25, r28
    1ca8:	df 91       	pop	r29
    1caa:	cf 91       	pop	r28
    1cac:	1f 91       	pop	r17
    1cae:	0f 91       	pop	r16
    1cb0:	08 95       	ret

00001cb2 <sprintf>:
    1cb2:	0f 93       	push	r16
    1cb4:	1f 93       	push	r17
    1cb6:	cf 93       	push	r28
    1cb8:	df 93       	push	r29
    1cba:	cd b7       	in	r28, 0x3d	; 61
    1cbc:	de b7       	in	r29, 0x3e	; 62
    1cbe:	2e 97       	sbiw	r28, 0x0e	; 14
    1cc0:	0f b6       	in	r0, 0x3f	; 63
    1cc2:	f8 94       	cli
    1cc4:	de bf       	out	0x3e, r29	; 62
    1cc6:	0f be       	out	0x3f, r0	; 63
    1cc8:	cd bf       	out	0x3d, r28	; 61
    1cca:	0d 89       	ldd	r16, Y+21	; 0x15
    1ccc:	1e 89       	ldd	r17, Y+22	; 0x16
    1cce:	86 e0       	ldi	r24, 0x06	; 6
    1cd0:	8c 83       	std	Y+4, r24	; 0x04
    1cd2:	1a 83       	std	Y+2, r17	; 0x02
    1cd4:	09 83       	std	Y+1, r16	; 0x01
    1cd6:	8f ef       	ldi	r24, 0xFF	; 255
    1cd8:	9f e7       	ldi	r25, 0x7F	; 127
    1cda:	9e 83       	std	Y+6, r25	; 0x06
    1cdc:	8d 83       	std	Y+5, r24	; 0x05
    1cde:	ae 01       	movw	r20, r28
    1ce0:	47 5e       	subi	r20, 0xE7	; 231
    1ce2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ce4:	6f 89       	ldd	r22, Y+23	; 0x17
    1ce6:	78 8d       	ldd	r23, Y+24	; 0x18
    1ce8:	ce 01       	movw	r24, r28
    1cea:	01 96       	adiw	r24, 0x01	; 1
    1cec:	10 d0       	rcall	.+32     	; 0x1d0e <vfprintf>
    1cee:	ef 81       	ldd	r30, Y+7	; 0x07
    1cf0:	f8 85       	ldd	r31, Y+8	; 0x08
    1cf2:	e0 0f       	add	r30, r16
    1cf4:	f1 1f       	adc	r31, r17
    1cf6:	10 82       	st	Z, r1
    1cf8:	2e 96       	adiw	r28, 0x0e	; 14
    1cfa:	0f b6       	in	r0, 0x3f	; 63
    1cfc:	f8 94       	cli
    1cfe:	de bf       	out	0x3e, r29	; 62
    1d00:	0f be       	out	0x3f, r0	; 63
    1d02:	cd bf       	out	0x3d, r28	; 61
    1d04:	df 91       	pop	r29
    1d06:	cf 91       	pop	r28
    1d08:	1f 91       	pop	r17
    1d0a:	0f 91       	pop	r16
    1d0c:	08 95       	ret

00001d0e <vfprintf>:
    1d0e:	2f 92       	push	r2
    1d10:	3f 92       	push	r3
    1d12:	4f 92       	push	r4
    1d14:	5f 92       	push	r5
    1d16:	6f 92       	push	r6
    1d18:	7f 92       	push	r7
    1d1a:	8f 92       	push	r8
    1d1c:	9f 92       	push	r9
    1d1e:	af 92       	push	r10
    1d20:	bf 92       	push	r11
    1d22:	cf 92       	push	r12
    1d24:	df 92       	push	r13
    1d26:	ef 92       	push	r14
    1d28:	ff 92       	push	r15
    1d2a:	0f 93       	push	r16
    1d2c:	1f 93       	push	r17
    1d2e:	cf 93       	push	r28
    1d30:	df 93       	push	r29
    1d32:	cd b7       	in	r28, 0x3d	; 61
    1d34:	de b7       	in	r29, 0x3e	; 62
    1d36:	2b 97       	sbiw	r28, 0x0b	; 11
    1d38:	0f b6       	in	r0, 0x3f	; 63
    1d3a:	f8 94       	cli
    1d3c:	de bf       	out	0x3e, r29	; 62
    1d3e:	0f be       	out	0x3f, r0	; 63
    1d40:	cd bf       	out	0x3d, r28	; 61
    1d42:	6c 01       	movw	r12, r24
    1d44:	7b 01       	movw	r14, r22
    1d46:	8a 01       	movw	r16, r20
    1d48:	fc 01       	movw	r30, r24
    1d4a:	17 82       	std	Z+7, r1	; 0x07
    1d4c:	16 82       	std	Z+6, r1	; 0x06
    1d4e:	83 81       	ldd	r24, Z+3	; 0x03
    1d50:	81 ff       	sbrs	r24, 1
    1d52:	bf c1       	rjmp	.+894    	; 0x20d2 <vfprintf+0x3c4>
    1d54:	ce 01       	movw	r24, r28
    1d56:	01 96       	adiw	r24, 0x01	; 1
    1d58:	3c 01       	movw	r6, r24
    1d5a:	f6 01       	movw	r30, r12
    1d5c:	93 81       	ldd	r25, Z+3	; 0x03
    1d5e:	f7 01       	movw	r30, r14
    1d60:	93 fd       	sbrc	r25, 3
    1d62:	85 91       	lpm	r24, Z+
    1d64:	93 ff       	sbrs	r25, 3
    1d66:	81 91       	ld	r24, Z+
    1d68:	7f 01       	movw	r14, r30
    1d6a:	88 23       	and	r24, r24
    1d6c:	09 f4       	brne	.+2      	; 0x1d70 <vfprintf+0x62>
    1d6e:	ad c1       	rjmp	.+858    	; 0x20ca <vfprintf+0x3bc>
    1d70:	85 32       	cpi	r24, 0x25	; 37
    1d72:	39 f4       	brne	.+14     	; 0x1d82 <vfprintf+0x74>
    1d74:	93 fd       	sbrc	r25, 3
    1d76:	85 91       	lpm	r24, Z+
    1d78:	93 ff       	sbrs	r25, 3
    1d7a:	81 91       	ld	r24, Z+
    1d7c:	7f 01       	movw	r14, r30
    1d7e:	85 32       	cpi	r24, 0x25	; 37
    1d80:	21 f4       	brne	.+8      	; 0x1d8a <vfprintf+0x7c>
    1d82:	b6 01       	movw	r22, r12
    1d84:	90 e0       	ldi	r25, 0x00	; 0
    1d86:	d6 d1       	rcall	.+940    	; 0x2134 <fputc>
    1d88:	e8 cf       	rjmp	.-48     	; 0x1d5a <vfprintf+0x4c>
    1d8a:	91 2c       	mov	r9, r1
    1d8c:	21 2c       	mov	r2, r1
    1d8e:	31 2c       	mov	r3, r1
    1d90:	ff e1       	ldi	r31, 0x1F	; 31
    1d92:	f3 15       	cp	r31, r3
    1d94:	d8 f0       	brcs	.+54     	; 0x1dcc <vfprintf+0xbe>
    1d96:	8b 32       	cpi	r24, 0x2B	; 43
    1d98:	79 f0       	breq	.+30     	; 0x1db8 <vfprintf+0xaa>
    1d9a:	38 f4       	brcc	.+14     	; 0x1daa <vfprintf+0x9c>
    1d9c:	80 32       	cpi	r24, 0x20	; 32
    1d9e:	79 f0       	breq	.+30     	; 0x1dbe <vfprintf+0xb0>
    1da0:	83 32       	cpi	r24, 0x23	; 35
    1da2:	a1 f4       	brne	.+40     	; 0x1dcc <vfprintf+0xbe>
    1da4:	23 2d       	mov	r18, r3
    1da6:	20 61       	ori	r18, 0x10	; 16
    1da8:	1d c0       	rjmp	.+58     	; 0x1de4 <vfprintf+0xd6>
    1daa:	8d 32       	cpi	r24, 0x2D	; 45
    1dac:	61 f0       	breq	.+24     	; 0x1dc6 <vfprintf+0xb8>
    1dae:	80 33       	cpi	r24, 0x30	; 48
    1db0:	69 f4       	brne	.+26     	; 0x1dcc <vfprintf+0xbe>
    1db2:	23 2d       	mov	r18, r3
    1db4:	21 60       	ori	r18, 0x01	; 1
    1db6:	16 c0       	rjmp	.+44     	; 0x1de4 <vfprintf+0xd6>
    1db8:	83 2d       	mov	r24, r3
    1dba:	82 60       	ori	r24, 0x02	; 2
    1dbc:	38 2e       	mov	r3, r24
    1dbe:	e3 2d       	mov	r30, r3
    1dc0:	e4 60       	ori	r30, 0x04	; 4
    1dc2:	3e 2e       	mov	r3, r30
    1dc4:	2a c0       	rjmp	.+84     	; 0x1e1a <vfprintf+0x10c>
    1dc6:	f3 2d       	mov	r31, r3
    1dc8:	f8 60       	ori	r31, 0x08	; 8
    1dca:	1d c0       	rjmp	.+58     	; 0x1e06 <vfprintf+0xf8>
    1dcc:	37 fc       	sbrc	r3, 7
    1dce:	2d c0       	rjmp	.+90     	; 0x1e2a <vfprintf+0x11c>
    1dd0:	20 ed       	ldi	r18, 0xD0	; 208
    1dd2:	28 0f       	add	r18, r24
    1dd4:	2a 30       	cpi	r18, 0x0A	; 10
    1dd6:	40 f0       	brcs	.+16     	; 0x1de8 <vfprintf+0xda>
    1dd8:	8e 32       	cpi	r24, 0x2E	; 46
    1dda:	b9 f4       	brne	.+46     	; 0x1e0a <vfprintf+0xfc>
    1ddc:	36 fc       	sbrc	r3, 6
    1dde:	75 c1       	rjmp	.+746    	; 0x20ca <vfprintf+0x3bc>
    1de0:	23 2d       	mov	r18, r3
    1de2:	20 64       	ori	r18, 0x40	; 64
    1de4:	32 2e       	mov	r3, r18
    1de6:	19 c0       	rjmp	.+50     	; 0x1e1a <vfprintf+0x10c>
    1de8:	36 fe       	sbrs	r3, 6
    1dea:	06 c0       	rjmp	.+12     	; 0x1df8 <vfprintf+0xea>
    1dec:	8a e0       	ldi	r24, 0x0A	; 10
    1dee:	98 9e       	mul	r9, r24
    1df0:	20 0d       	add	r18, r0
    1df2:	11 24       	eor	r1, r1
    1df4:	92 2e       	mov	r9, r18
    1df6:	11 c0       	rjmp	.+34     	; 0x1e1a <vfprintf+0x10c>
    1df8:	ea e0       	ldi	r30, 0x0A	; 10
    1dfa:	2e 9e       	mul	r2, r30
    1dfc:	20 0d       	add	r18, r0
    1dfe:	11 24       	eor	r1, r1
    1e00:	22 2e       	mov	r2, r18
    1e02:	f3 2d       	mov	r31, r3
    1e04:	f0 62       	ori	r31, 0x20	; 32
    1e06:	3f 2e       	mov	r3, r31
    1e08:	08 c0       	rjmp	.+16     	; 0x1e1a <vfprintf+0x10c>
    1e0a:	8c 36       	cpi	r24, 0x6C	; 108
    1e0c:	21 f4       	brne	.+8      	; 0x1e16 <vfprintf+0x108>
    1e0e:	83 2d       	mov	r24, r3
    1e10:	80 68       	ori	r24, 0x80	; 128
    1e12:	38 2e       	mov	r3, r24
    1e14:	02 c0       	rjmp	.+4      	; 0x1e1a <vfprintf+0x10c>
    1e16:	88 36       	cpi	r24, 0x68	; 104
    1e18:	41 f4       	brne	.+16     	; 0x1e2a <vfprintf+0x11c>
    1e1a:	f7 01       	movw	r30, r14
    1e1c:	93 fd       	sbrc	r25, 3
    1e1e:	85 91       	lpm	r24, Z+
    1e20:	93 ff       	sbrs	r25, 3
    1e22:	81 91       	ld	r24, Z+
    1e24:	7f 01       	movw	r14, r30
    1e26:	81 11       	cpse	r24, r1
    1e28:	b3 cf       	rjmp	.-154    	; 0x1d90 <vfprintf+0x82>
    1e2a:	98 2f       	mov	r25, r24
    1e2c:	9f 7d       	andi	r25, 0xDF	; 223
    1e2e:	95 54       	subi	r25, 0x45	; 69
    1e30:	93 30       	cpi	r25, 0x03	; 3
    1e32:	28 f4       	brcc	.+10     	; 0x1e3e <vfprintf+0x130>
    1e34:	0c 5f       	subi	r16, 0xFC	; 252
    1e36:	1f 4f       	sbci	r17, 0xFF	; 255
    1e38:	9f e3       	ldi	r25, 0x3F	; 63
    1e3a:	99 83       	std	Y+1, r25	; 0x01
    1e3c:	0d c0       	rjmp	.+26     	; 0x1e58 <vfprintf+0x14a>
    1e3e:	83 36       	cpi	r24, 0x63	; 99
    1e40:	31 f0       	breq	.+12     	; 0x1e4e <vfprintf+0x140>
    1e42:	83 37       	cpi	r24, 0x73	; 115
    1e44:	71 f0       	breq	.+28     	; 0x1e62 <vfprintf+0x154>
    1e46:	83 35       	cpi	r24, 0x53	; 83
    1e48:	09 f0       	breq	.+2      	; 0x1e4c <vfprintf+0x13e>
    1e4a:	55 c0       	rjmp	.+170    	; 0x1ef6 <vfprintf+0x1e8>
    1e4c:	20 c0       	rjmp	.+64     	; 0x1e8e <vfprintf+0x180>
    1e4e:	f8 01       	movw	r30, r16
    1e50:	80 81       	ld	r24, Z
    1e52:	89 83       	std	Y+1, r24	; 0x01
    1e54:	0e 5f       	subi	r16, 0xFE	; 254
    1e56:	1f 4f       	sbci	r17, 0xFF	; 255
    1e58:	88 24       	eor	r8, r8
    1e5a:	83 94       	inc	r8
    1e5c:	91 2c       	mov	r9, r1
    1e5e:	53 01       	movw	r10, r6
    1e60:	12 c0       	rjmp	.+36     	; 0x1e86 <vfprintf+0x178>
    1e62:	28 01       	movw	r4, r16
    1e64:	f2 e0       	ldi	r31, 0x02	; 2
    1e66:	4f 0e       	add	r4, r31
    1e68:	51 1c       	adc	r5, r1
    1e6a:	f8 01       	movw	r30, r16
    1e6c:	a0 80       	ld	r10, Z
    1e6e:	b1 80       	ldd	r11, Z+1	; 0x01
    1e70:	36 fe       	sbrs	r3, 6
    1e72:	03 c0       	rjmp	.+6      	; 0x1e7a <vfprintf+0x16c>
    1e74:	69 2d       	mov	r22, r9
    1e76:	70 e0       	ldi	r23, 0x00	; 0
    1e78:	02 c0       	rjmp	.+4      	; 0x1e7e <vfprintf+0x170>
    1e7a:	6f ef       	ldi	r22, 0xFF	; 255
    1e7c:	7f ef       	ldi	r23, 0xFF	; 255
    1e7e:	c5 01       	movw	r24, r10
    1e80:	4e d1       	rcall	.+668    	; 0x211e <strnlen>
    1e82:	4c 01       	movw	r8, r24
    1e84:	82 01       	movw	r16, r4
    1e86:	f3 2d       	mov	r31, r3
    1e88:	ff 77       	andi	r31, 0x7F	; 127
    1e8a:	3f 2e       	mov	r3, r31
    1e8c:	15 c0       	rjmp	.+42     	; 0x1eb8 <vfprintf+0x1aa>
    1e8e:	28 01       	movw	r4, r16
    1e90:	22 e0       	ldi	r18, 0x02	; 2
    1e92:	42 0e       	add	r4, r18
    1e94:	51 1c       	adc	r5, r1
    1e96:	f8 01       	movw	r30, r16
    1e98:	a0 80       	ld	r10, Z
    1e9a:	b1 80       	ldd	r11, Z+1	; 0x01
    1e9c:	36 fe       	sbrs	r3, 6
    1e9e:	03 c0       	rjmp	.+6      	; 0x1ea6 <vfprintf+0x198>
    1ea0:	69 2d       	mov	r22, r9
    1ea2:	70 e0       	ldi	r23, 0x00	; 0
    1ea4:	02 c0       	rjmp	.+4      	; 0x1eaa <vfprintf+0x19c>
    1ea6:	6f ef       	ldi	r22, 0xFF	; 255
    1ea8:	7f ef       	ldi	r23, 0xFF	; 255
    1eaa:	c5 01       	movw	r24, r10
    1eac:	2d d1       	rcall	.+602    	; 0x2108 <strnlen_P>
    1eae:	4c 01       	movw	r8, r24
    1eb0:	f3 2d       	mov	r31, r3
    1eb2:	f0 68       	ori	r31, 0x80	; 128
    1eb4:	3f 2e       	mov	r3, r31
    1eb6:	82 01       	movw	r16, r4
    1eb8:	33 fc       	sbrc	r3, 3
    1eba:	19 c0       	rjmp	.+50     	; 0x1eee <vfprintf+0x1e0>
    1ebc:	82 2d       	mov	r24, r2
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	88 16       	cp	r8, r24
    1ec2:	99 06       	cpc	r9, r25
    1ec4:	a0 f4       	brcc	.+40     	; 0x1eee <vfprintf+0x1e0>
    1ec6:	b6 01       	movw	r22, r12
    1ec8:	80 e2       	ldi	r24, 0x20	; 32
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	33 d1       	rcall	.+614    	; 0x2134 <fputc>
    1ece:	2a 94       	dec	r2
    1ed0:	f5 cf       	rjmp	.-22     	; 0x1ebc <vfprintf+0x1ae>
    1ed2:	f5 01       	movw	r30, r10
    1ed4:	37 fc       	sbrc	r3, 7
    1ed6:	85 91       	lpm	r24, Z+
    1ed8:	37 fe       	sbrs	r3, 7
    1eda:	81 91       	ld	r24, Z+
    1edc:	5f 01       	movw	r10, r30
    1ede:	b6 01       	movw	r22, r12
    1ee0:	90 e0       	ldi	r25, 0x00	; 0
    1ee2:	28 d1       	rcall	.+592    	; 0x2134 <fputc>
    1ee4:	21 10       	cpse	r2, r1
    1ee6:	2a 94       	dec	r2
    1ee8:	21 e0       	ldi	r18, 0x01	; 1
    1eea:	82 1a       	sub	r8, r18
    1eec:	91 08       	sbc	r9, r1
    1eee:	81 14       	cp	r8, r1
    1ef0:	91 04       	cpc	r9, r1
    1ef2:	79 f7       	brne	.-34     	; 0x1ed2 <vfprintf+0x1c4>
    1ef4:	e1 c0       	rjmp	.+450    	; 0x20b8 <vfprintf+0x3aa>
    1ef6:	84 36       	cpi	r24, 0x64	; 100
    1ef8:	11 f0       	breq	.+4      	; 0x1efe <vfprintf+0x1f0>
    1efa:	89 36       	cpi	r24, 0x69	; 105
    1efc:	39 f5       	brne	.+78     	; 0x1f4c <vfprintf+0x23e>
    1efe:	f8 01       	movw	r30, r16
    1f00:	37 fe       	sbrs	r3, 7
    1f02:	07 c0       	rjmp	.+14     	; 0x1f12 <vfprintf+0x204>
    1f04:	60 81       	ld	r22, Z
    1f06:	71 81       	ldd	r23, Z+1	; 0x01
    1f08:	82 81       	ldd	r24, Z+2	; 0x02
    1f0a:	93 81       	ldd	r25, Z+3	; 0x03
    1f0c:	0c 5f       	subi	r16, 0xFC	; 252
    1f0e:	1f 4f       	sbci	r17, 0xFF	; 255
    1f10:	08 c0       	rjmp	.+16     	; 0x1f22 <vfprintf+0x214>
    1f12:	60 81       	ld	r22, Z
    1f14:	71 81       	ldd	r23, Z+1	; 0x01
    1f16:	07 2e       	mov	r0, r23
    1f18:	00 0c       	add	r0, r0
    1f1a:	88 0b       	sbc	r24, r24
    1f1c:	99 0b       	sbc	r25, r25
    1f1e:	0e 5f       	subi	r16, 0xFE	; 254
    1f20:	1f 4f       	sbci	r17, 0xFF	; 255
    1f22:	f3 2d       	mov	r31, r3
    1f24:	ff 76       	andi	r31, 0x6F	; 111
    1f26:	3f 2e       	mov	r3, r31
    1f28:	97 ff       	sbrs	r25, 7
    1f2a:	09 c0       	rjmp	.+18     	; 0x1f3e <vfprintf+0x230>
    1f2c:	90 95       	com	r25
    1f2e:	80 95       	com	r24
    1f30:	70 95       	com	r23
    1f32:	61 95       	neg	r22
    1f34:	7f 4f       	sbci	r23, 0xFF	; 255
    1f36:	8f 4f       	sbci	r24, 0xFF	; 255
    1f38:	9f 4f       	sbci	r25, 0xFF	; 255
    1f3a:	f0 68       	ori	r31, 0x80	; 128
    1f3c:	3f 2e       	mov	r3, r31
    1f3e:	2a e0       	ldi	r18, 0x0A	; 10
    1f40:	30 e0       	ldi	r19, 0x00	; 0
    1f42:	a3 01       	movw	r20, r6
    1f44:	33 d1       	rcall	.+614    	; 0x21ac <__ultoa_invert>
    1f46:	88 2e       	mov	r8, r24
    1f48:	86 18       	sub	r8, r6
    1f4a:	44 c0       	rjmp	.+136    	; 0x1fd4 <vfprintf+0x2c6>
    1f4c:	85 37       	cpi	r24, 0x75	; 117
    1f4e:	31 f4       	brne	.+12     	; 0x1f5c <vfprintf+0x24e>
    1f50:	23 2d       	mov	r18, r3
    1f52:	2f 7e       	andi	r18, 0xEF	; 239
    1f54:	b2 2e       	mov	r11, r18
    1f56:	2a e0       	ldi	r18, 0x0A	; 10
    1f58:	30 e0       	ldi	r19, 0x00	; 0
    1f5a:	25 c0       	rjmp	.+74     	; 0x1fa6 <vfprintf+0x298>
    1f5c:	93 2d       	mov	r25, r3
    1f5e:	99 7f       	andi	r25, 0xF9	; 249
    1f60:	b9 2e       	mov	r11, r25
    1f62:	8f 36       	cpi	r24, 0x6F	; 111
    1f64:	c1 f0       	breq	.+48     	; 0x1f96 <vfprintf+0x288>
    1f66:	18 f4       	brcc	.+6      	; 0x1f6e <vfprintf+0x260>
    1f68:	88 35       	cpi	r24, 0x58	; 88
    1f6a:	79 f0       	breq	.+30     	; 0x1f8a <vfprintf+0x27c>
    1f6c:	ae c0       	rjmp	.+348    	; 0x20ca <vfprintf+0x3bc>
    1f6e:	80 37       	cpi	r24, 0x70	; 112
    1f70:	19 f0       	breq	.+6      	; 0x1f78 <vfprintf+0x26a>
    1f72:	88 37       	cpi	r24, 0x78	; 120
    1f74:	21 f0       	breq	.+8      	; 0x1f7e <vfprintf+0x270>
    1f76:	a9 c0       	rjmp	.+338    	; 0x20ca <vfprintf+0x3bc>
    1f78:	e9 2f       	mov	r30, r25
    1f7a:	e0 61       	ori	r30, 0x10	; 16
    1f7c:	be 2e       	mov	r11, r30
    1f7e:	b4 fe       	sbrs	r11, 4
    1f80:	0d c0       	rjmp	.+26     	; 0x1f9c <vfprintf+0x28e>
    1f82:	fb 2d       	mov	r31, r11
    1f84:	f4 60       	ori	r31, 0x04	; 4
    1f86:	bf 2e       	mov	r11, r31
    1f88:	09 c0       	rjmp	.+18     	; 0x1f9c <vfprintf+0x28e>
    1f8a:	34 fe       	sbrs	r3, 4
    1f8c:	0a c0       	rjmp	.+20     	; 0x1fa2 <vfprintf+0x294>
    1f8e:	29 2f       	mov	r18, r25
    1f90:	26 60       	ori	r18, 0x06	; 6
    1f92:	b2 2e       	mov	r11, r18
    1f94:	06 c0       	rjmp	.+12     	; 0x1fa2 <vfprintf+0x294>
    1f96:	28 e0       	ldi	r18, 0x08	; 8
    1f98:	30 e0       	ldi	r19, 0x00	; 0
    1f9a:	05 c0       	rjmp	.+10     	; 0x1fa6 <vfprintf+0x298>
    1f9c:	20 e1       	ldi	r18, 0x10	; 16
    1f9e:	30 e0       	ldi	r19, 0x00	; 0
    1fa0:	02 c0       	rjmp	.+4      	; 0x1fa6 <vfprintf+0x298>
    1fa2:	20 e1       	ldi	r18, 0x10	; 16
    1fa4:	32 e0       	ldi	r19, 0x02	; 2
    1fa6:	f8 01       	movw	r30, r16
    1fa8:	b7 fe       	sbrs	r11, 7
    1faa:	07 c0       	rjmp	.+14     	; 0x1fba <vfprintf+0x2ac>
    1fac:	60 81       	ld	r22, Z
    1fae:	71 81       	ldd	r23, Z+1	; 0x01
    1fb0:	82 81       	ldd	r24, Z+2	; 0x02
    1fb2:	93 81       	ldd	r25, Z+3	; 0x03
    1fb4:	0c 5f       	subi	r16, 0xFC	; 252
    1fb6:	1f 4f       	sbci	r17, 0xFF	; 255
    1fb8:	06 c0       	rjmp	.+12     	; 0x1fc6 <vfprintf+0x2b8>
    1fba:	60 81       	ld	r22, Z
    1fbc:	71 81       	ldd	r23, Z+1	; 0x01
    1fbe:	80 e0       	ldi	r24, 0x00	; 0
    1fc0:	90 e0       	ldi	r25, 0x00	; 0
    1fc2:	0e 5f       	subi	r16, 0xFE	; 254
    1fc4:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc6:	a3 01       	movw	r20, r6
    1fc8:	f1 d0       	rcall	.+482    	; 0x21ac <__ultoa_invert>
    1fca:	88 2e       	mov	r8, r24
    1fcc:	86 18       	sub	r8, r6
    1fce:	fb 2d       	mov	r31, r11
    1fd0:	ff 77       	andi	r31, 0x7F	; 127
    1fd2:	3f 2e       	mov	r3, r31
    1fd4:	36 fe       	sbrs	r3, 6
    1fd6:	0d c0       	rjmp	.+26     	; 0x1ff2 <vfprintf+0x2e4>
    1fd8:	23 2d       	mov	r18, r3
    1fda:	2e 7f       	andi	r18, 0xFE	; 254
    1fdc:	a2 2e       	mov	r10, r18
    1fde:	89 14       	cp	r8, r9
    1fe0:	58 f4       	brcc	.+22     	; 0x1ff8 <vfprintf+0x2ea>
    1fe2:	34 fe       	sbrs	r3, 4
    1fe4:	0b c0       	rjmp	.+22     	; 0x1ffc <vfprintf+0x2ee>
    1fe6:	32 fc       	sbrc	r3, 2
    1fe8:	09 c0       	rjmp	.+18     	; 0x1ffc <vfprintf+0x2ee>
    1fea:	83 2d       	mov	r24, r3
    1fec:	8e 7e       	andi	r24, 0xEE	; 238
    1fee:	a8 2e       	mov	r10, r24
    1ff0:	05 c0       	rjmp	.+10     	; 0x1ffc <vfprintf+0x2ee>
    1ff2:	b8 2c       	mov	r11, r8
    1ff4:	a3 2c       	mov	r10, r3
    1ff6:	03 c0       	rjmp	.+6      	; 0x1ffe <vfprintf+0x2f0>
    1ff8:	b8 2c       	mov	r11, r8
    1ffa:	01 c0       	rjmp	.+2      	; 0x1ffe <vfprintf+0x2f0>
    1ffc:	b9 2c       	mov	r11, r9
    1ffe:	a4 fe       	sbrs	r10, 4
    2000:	0f c0       	rjmp	.+30     	; 0x2020 <vfprintf+0x312>
    2002:	fe 01       	movw	r30, r28
    2004:	e8 0d       	add	r30, r8
    2006:	f1 1d       	adc	r31, r1
    2008:	80 81       	ld	r24, Z
    200a:	80 33       	cpi	r24, 0x30	; 48
    200c:	21 f4       	brne	.+8      	; 0x2016 <vfprintf+0x308>
    200e:	9a 2d       	mov	r25, r10
    2010:	99 7e       	andi	r25, 0xE9	; 233
    2012:	a9 2e       	mov	r10, r25
    2014:	09 c0       	rjmp	.+18     	; 0x2028 <vfprintf+0x31a>
    2016:	a2 fe       	sbrs	r10, 2
    2018:	06 c0       	rjmp	.+12     	; 0x2026 <vfprintf+0x318>
    201a:	b3 94       	inc	r11
    201c:	b3 94       	inc	r11
    201e:	04 c0       	rjmp	.+8      	; 0x2028 <vfprintf+0x31a>
    2020:	8a 2d       	mov	r24, r10
    2022:	86 78       	andi	r24, 0x86	; 134
    2024:	09 f0       	breq	.+2      	; 0x2028 <vfprintf+0x31a>
    2026:	b3 94       	inc	r11
    2028:	a3 fc       	sbrc	r10, 3
    202a:	10 c0       	rjmp	.+32     	; 0x204c <vfprintf+0x33e>
    202c:	a0 fe       	sbrs	r10, 0
    202e:	06 c0       	rjmp	.+12     	; 0x203c <vfprintf+0x32e>
    2030:	b2 14       	cp	r11, r2
    2032:	80 f4       	brcc	.+32     	; 0x2054 <vfprintf+0x346>
    2034:	28 0c       	add	r2, r8
    2036:	92 2c       	mov	r9, r2
    2038:	9b 18       	sub	r9, r11
    203a:	0d c0       	rjmp	.+26     	; 0x2056 <vfprintf+0x348>
    203c:	b2 14       	cp	r11, r2
    203e:	58 f4       	brcc	.+22     	; 0x2056 <vfprintf+0x348>
    2040:	b6 01       	movw	r22, r12
    2042:	80 e2       	ldi	r24, 0x20	; 32
    2044:	90 e0       	ldi	r25, 0x00	; 0
    2046:	76 d0       	rcall	.+236    	; 0x2134 <fputc>
    2048:	b3 94       	inc	r11
    204a:	f8 cf       	rjmp	.-16     	; 0x203c <vfprintf+0x32e>
    204c:	b2 14       	cp	r11, r2
    204e:	18 f4       	brcc	.+6      	; 0x2056 <vfprintf+0x348>
    2050:	2b 18       	sub	r2, r11
    2052:	02 c0       	rjmp	.+4      	; 0x2058 <vfprintf+0x34a>
    2054:	98 2c       	mov	r9, r8
    2056:	21 2c       	mov	r2, r1
    2058:	a4 fe       	sbrs	r10, 4
    205a:	0f c0       	rjmp	.+30     	; 0x207a <vfprintf+0x36c>
    205c:	b6 01       	movw	r22, r12
    205e:	80 e3       	ldi	r24, 0x30	; 48
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	68 d0       	rcall	.+208    	; 0x2134 <fputc>
    2064:	a2 fe       	sbrs	r10, 2
    2066:	16 c0       	rjmp	.+44     	; 0x2094 <vfprintf+0x386>
    2068:	a1 fc       	sbrc	r10, 1
    206a:	03 c0       	rjmp	.+6      	; 0x2072 <vfprintf+0x364>
    206c:	88 e7       	ldi	r24, 0x78	; 120
    206e:	90 e0       	ldi	r25, 0x00	; 0
    2070:	02 c0       	rjmp	.+4      	; 0x2076 <vfprintf+0x368>
    2072:	88 e5       	ldi	r24, 0x58	; 88
    2074:	90 e0       	ldi	r25, 0x00	; 0
    2076:	b6 01       	movw	r22, r12
    2078:	0c c0       	rjmp	.+24     	; 0x2092 <vfprintf+0x384>
    207a:	8a 2d       	mov	r24, r10
    207c:	86 78       	andi	r24, 0x86	; 134
    207e:	51 f0       	breq	.+20     	; 0x2094 <vfprintf+0x386>
    2080:	a1 fe       	sbrs	r10, 1
    2082:	02 c0       	rjmp	.+4      	; 0x2088 <vfprintf+0x37a>
    2084:	8b e2       	ldi	r24, 0x2B	; 43
    2086:	01 c0       	rjmp	.+2      	; 0x208a <vfprintf+0x37c>
    2088:	80 e2       	ldi	r24, 0x20	; 32
    208a:	a7 fc       	sbrc	r10, 7
    208c:	8d e2       	ldi	r24, 0x2D	; 45
    208e:	b6 01       	movw	r22, r12
    2090:	90 e0       	ldi	r25, 0x00	; 0
    2092:	50 d0       	rcall	.+160    	; 0x2134 <fputc>
    2094:	89 14       	cp	r8, r9
    2096:	30 f4       	brcc	.+12     	; 0x20a4 <vfprintf+0x396>
    2098:	b6 01       	movw	r22, r12
    209a:	80 e3       	ldi	r24, 0x30	; 48
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	4a d0       	rcall	.+148    	; 0x2134 <fputc>
    20a0:	9a 94       	dec	r9
    20a2:	f8 cf       	rjmp	.-16     	; 0x2094 <vfprintf+0x386>
    20a4:	8a 94       	dec	r8
    20a6:	f3 01       	movw	r30, r6
    20a8:	e8 0d       	add	r30, r8
    20aa:	f1 1d       	adc	r31, r1
    20ac:	80 81       	ld	r24, Z
    20ae:	b6 01       	movw	r22, r12
    20b0:	90 e0       	ldi	r25, 0x00	; 0
    20b2:	40 d0       	rcall	.+128    	; 0x2134 <fputc>
    20b4:	81 10       	cpse	r8, r1
    20b6:	f6 cf       	rjmp	.-20     	; 0x20a4 <vfprintf+0x396>
    20b8:	22 20       	and	r2, r2
    20ba:	09 f4       	brne	.+2      	; 0x20be <vfprintf+0x3b0>
    20bc:	4e ce       	rjmp	.-868    	; 0x1d5a <vfprintf+0x4c>
    20be:	b6 01       	movw	r22, r12
    20c0:	80 e2       	ldi	r24, 0x20	; 32
    20c2:	90 e0       	ldi	r25, 0x00	; 0
    20c4:	37 d0       	rcall	.+110    	; 0x2134 <fputc>
    20c6:	2a 94       	dec	r2
    20c8:	f7 cf       	rjmp	.-18     	; 0x20b8 <vfprintf+0x3aa>
    20ca:	f6 01       	movw	r30, r12
    20cc:	86 81       	ldd	r24, Z+6	; 0x06
    20ce:	97 81       	ldd	r25, Z+7	; 0x07
    20d0:	02 c0       	rjmp	.+4      	; 0x20d6 <vfprintf+0x3c8>
    20d2:	8f ef       	ldi	r24, 0xFF	; 255
    20d4:	9f ef       	ldi	r25, 0xFF	; 255
    20d6:	2b 96       	adiw	r28, 0x0b	; 11
    20d8:	0f b6       	in	r0, 0x3f	; 63
    20da:	f8 94       	cli
    20dc:	de bf       	out	0x3e, r29	; 62
    20de:	0f be       	out	0x3f, r0	; 63
    20e0:	cd bf       	out	0x3d, r28	; 61
    20e2:	df 91       	pop	r29
    20e4:	cf 91       	pop	r28
    20e6:	1f 91       	pop	r17
    20e8:	0f 91       	pop	r16
    20ea:	ff 90       	pop	r15
    20ec:	ef 90       	pop	r14
    20ee:	df 90       	pop	r13
    20f0:	cf 90       	pop	r12
    20f2:	bf 90       	pop	r11
    20f4:	af 90       	pop	r10
    20f6:	9f 90       	pop	r9
    20f8:	8f 90       	pop	r8
    20fa:	7f 90       	pop	r7
    20fc:	6f 90       	pop	r6
    20fe:	5f 90       	pop	r5
    2100:	4f 90       	pop	r4
    2102:	3f 90       	pop	r3
    2104:	2f 90       	pop	r2
    2106:	08 95       	ret

00002108 <strnlen_P>:
    2108:	fc 01       	movw	r30, r24
    210a:	05 90       	lpm	r0, Z+
    210c:	61 50       	subi	r22, 0x01	; 1
    210e:	70 40       	sbci	r23, 0x00	; 0
    2110:	01 10       	cpse	r0, r1
    2112:	d8 f7       	brcc	.-10     	; 0x210a <strnlen_P+0x2>
    2114:	80 95       	com	r24
    2116:	90 95       	com	r25
    2118:	8e 0f       	add	r24, r30
    211a:	9f 1f       	adc	r25, r31
    211c:	08 95       	ret

0000211e <strnlen>:
    211e:	fc 01       	movw	r30, r24
    2120:	61 50       	subi	r22, 0x01	; 1
    2122:	70 40       	sbci	r23, 0x00	; 0
    2124:	01 90       	ld	r0, Z+
    2126:	01 10       	cpse	r0, r1
    2128:	d8 f7       	brcc	.-10     	; 0x2120 <strnlen+0x2>
    212a:	80 95       	com	r24
    212c:	90 95       	com	r25
    212e:	8e 0f       	add	r24, r30
    2130:	9f 1f       	adc	r25, r31
    2132:	08 95       	ret

00002134 <fputc>:
    2134:	0f 93       	push	r16
    2136:	1f 93       	push	r17
    2138:	cf 93       	push	r28
    213a:	df 93       	push	r29
    213c:	fb 01       	movw	r30, r22
    213e:	23 81       	ldd	r18, Z+3	; 0x03
    2140:	21 fd       	sbrc	r18, 1
    2142:	03 c0       	rjmp	.+6      	; 0x214a <fputc+0x16>
    2144:	8f ef       	ldi	r24, 0xFF	; 255
    2146:	9f ef       	ldi	r25, 0xFF	; 255
    2148:	2c c0       	rjmp	.+88     	; 0x21a2 <fputc+0x6e>
    214a:	22 ff       	sbrs	r18, 2
    214c:	16 c0       	rjmp	.+44     	; 0x217a <fputc+0x46>
    214e:	46 81       	ldd	r20, Z+6	; 0x06
    2150:	57 81       	ldd	r21, Z+7	; 0x07
    2152:	24 81       	ldd	r18, Z+4	; 0x04
    2154:	35 81       	ldd	r19, Z+5	; 0x05
    2156:	42 17       	cp	r20, r18
    2158:	53 07       	cpc	r21, r19
    215a:	44 f4       	brge	.+16     	; 0x216c <fputc+0x38>
    215c:	a0 81       	ld	r26, Z
    215e:	b1 81       	ldd	r27, Z+1	; 0x01
    2160:	9d 01       	movw	r18, r26
    2162:	2f 5f       	subi	r18, 0xFF	; 255
    2164:	3f 4f       	sbci	r19, 0xFF	; 255
    2166:	31 83       	std	Z+1, r19	; 0x01
    2168:	20 83       	st	Z, r18
    216a:	8c 93       	st	X, r24
    216c:	26 81       	ldd	r18, Z+6	; 0x06
    216e:	37 81       	ldd	r19, Z+7	; 0x07
    2170:	2f 5f       	subi	r18, 0xFF	; 255
    2172:	3f 4f       	sbci	r19, 0xFF	; 255
    2174:	37 83       	std	Z+7, r19	; 0x07
    2176:	26 83       	std	Z+6, r18	; 0x06
    2178:	14 c0       	rjmp	.+40     	; 0x21a2 <fputc+0x6e>
    217a:	8b 01       	movw	r16, r22
    217c:	ec 01       	movw	r28, r24
    217e:	fb 01       	movw	r30, r22
    2180:	00 84       	ldd	r0, Z+8	; 0x08
    2182:	f1 85       	ldd	r31, Z+9	; 0x09
    2184:	e0 2d       	mov	r30, r0
    2186:	09 95       	icall
    2188:	89 2b       	or	r24, r25
    218a:	e1 f6       	brne	.-72     	; 0x2144 <fputc+0x10>
    218c:	d8 01       	movw	r26, r16
    218e:	16 96       	adiw	r26, 0x06	; 6
    2190:	8d 91       	ld	r24, X+
    2192:	9c 91       	ld	r25, X
    2194:	17 97       	sbiw	r26, 0x07	; 7
    2196:	01 96       	adiw	r24, 0x01	; 1
    2198:	17 96       	adiw	r26, 0x07	; 7
    219a:	9c 93       	st	X, r25
    219c:	8e 93       	st	-X, r24
    219e:	16 97       	sbiw	r26, 0x06	; 6
    21a0:	ce 01       	movw	r24, r28
    21a2:	df 91       	pop	r29
    21a4:	cf 91       	pop	r28
    21a6:	1f 91       	pop	r17
    21a8:	0f 91       	pop	r16
    21aa:	08 95       	ret

000021ac <__ultoa_invert>:
    21ac:	fa 01       	movw	r30, r20
    21ae:	aa 27       	eor	r26, r26
    21b0:	28 30       	cpi	r18, 0x08	; 8
    21b2:	51 f1       	breq	.+84     	; 0x2208 <__ultoa_invert+0x5c>
    21b4:	20 31       	cpi	r18, 0x10	; 16
    21b6:	81 f1       	breq	.+96     	; 0x2218 <__ultoa_invert+0x6c>
    21b8:	e8 94       	clt
    21ba:	6f 93       	push	r22
    21bc:	6e 7f       	andi	r22, 0xFE	; 254
    21be:	6e 5f       	subi	r22, 0xFE	; 254
    21c0:	7f 4f       	sbci	r23, 0xFF	; 255
    21c2:	8f 4f       	sbci	r24, 0xFF	; 255
    21c4:	9f 4f       	sbci	r25, 0xFF	; 255
    21c6:	af 4f       	sbci	r26, 0xFF	; 255
    21c8:	b1 e0       	ldi	r27, 0x01	; 1
    21ca:	3e d0       	rcall	.+124    	; 0x2248 <__ultoa_invert+0x9c>
    21cc:	b4 e0       	ldi	r27, 0x04	; 4
    21ce:	3c d0       	rcall	.+120    	; 0x2248 <__ultoa_invert+0x9c>
    21d0:	67 0f       	add	r22, r23
    21d2:	78 1f       	adc	r23, r24
    21d4:	89 1f       	adc	r24, r25
    21d6:	9a 1f       	adc	r25, r26
    21d8:	a1 1d       	adc	r26, r1
    21da:	68 0f       	add	r22, r24
    21dc:	79 1f       	adc	r23, r25
    21de:	8a 1f       	adc	r24, r26
    21e0:	91 1d       	adc	r25, r1
    21e2:	a1 1d       	adc	r26, r1
    21e4:	6a 0f       	add	r22, r26
    21e6:	71 1d       	adc	r23, r1
    21e8:	81 1d       	adc	r24, r1
    21ea:	91 1d       	adc	r25, r1
    21ec:	a1 1d       	adc	r26, r1
    21ee:	20 d0       	rcall	.+64     	; 0x2230 <__ultoa_invert+0x84>
    21f0:	09 f4       	brne	.+2      	; 0x21f4 <__ultoa_invert+0x48>
    21f2:	68 94       	set
    21f4:	3f 91       	pop	r19
    21f6:	2a e0       	ldi	r18, 0x0A	; 10
    21f8:	26 9f       	mul	r18, r22
    21fa:	11 24       	eor	r1, r1
    21fc:	30 19       	sub	r19, r0
    21fe:	30 5d       	subi	r19, 0xD0	; 208
    2200:	31 93       	st	Z+, r19
    2202:	de f6       	brtc	.-74     	; 0x21ba <__ultoa_invert+0xe>
    2204:	cf 01       	movw	r24, r30
    2206:	08 95       	ret
    2208:	46 2f       	mov	r20, r22
    220a:	47 70       	andi	r20, 0x07	; 7
    220c:	40 5d       	subi	r20, 0xD0	; 208
    220e:	41 93       	st	Z+, r20
    2210:	b3 e0       	ldi	r27, 0x03	; 3
    2212:	0f d0       	rcall	.+30     	; 0x2232 <__ultoa_invert+0x86>
    2214:	c9 f7       	brne	.-14     	; 0x2208 <__ultoa_invert+0x5c>
    2216:	f6 cf       	rjmp	.-20     	; 0x2204 <__ultoa_invert+0x58>
    2218:	46 2f       	mov	r20, r22
    221a:	4f 70       	andi	r20, 0x0F	; 15
    221c:	40 5d       	subi	r20, 0xD0	; 208
    221e:	4a 33       	cpi	r20, 0x3A	; 58
    2220:	18 f0       	brcs	.+6      	; 0x2228 <__ultoa_invert+0x7c>
    2222:	49 5d       	subi	r20, 0xD9	; 217
    2224:	31 fd       	sbrc	r19, 1
    2226:	40 52       	subi	r20, 0x20	; 32
    2228:	41 93       	st	Z+, r20
    222a:	02 d0       	rcall	.+4      	; 0x2230 <__ultoa_invert+0x84>
    222c:	a9 f7       	brne	.-22     	; 0x2218 <__ultoa_invert+0x6c>
    222e:	ea cf       	rjmp	.-44     	; 0x2204 <__ultoa_invert+0x58>
    2230:	b4 e0       	ldi	r27, 0x04	; 4
    2232:	a6 95       	lsr	r26
    2234:	97 95       	ror	r25
    2236:	87 95       	ror	r24
    2238:	77 95       	ror	r23
    223a:	67 95       	ror	r22
    223c:	ba 95       	dec	r27
    223e:	c9 f7       	brne	.-14     	; 0x2232 <__ultoa_invert+0x86>
    2240:	00 97       	sbiw	r24, 0x00	; 0
    2242:	61 05       	cpc	r22, r1
    2244:	71 05       	cpc	r23, r1
    2246:	08 95       	ret
    2248:	9b 01       	movw	r18, r22
    224a:	ac 01       	movw	r20, r24
    224c:	0a 2e       	mov	r0, r26
    224e:	06 94       	lsr	r0
    2250:	57 95       	ror	r21
    2252:	47 95       	ror	r20
    2254:	37 95       	ror	r19
    2256:	27 95       	ror	r18
    2258:	ba 95       	dec	r27
    225a:	c9 f7       	brne	.-14     	; 0x224e <__ultoa_invert+0xa2>
    225c:	62 0f       	add	r22, r18
    225e:	73 1f       	adc	r23, r19
    2260:	84 1f       	adc	r24, r20
    2262:	95 1f       	adc	r25, r21
    2264:	a0 1d       	adc	r26, r0
    2266:	08 95       	ret

00002268 <_exit>:
    2268:	f8 94       	cli

0000226a <__stop_program>:
    226a:	ff cf       	rjmp	.-2      	; 0x226a <__stop_program>
